[{"E:\\mob-app1\\netbook-client\\src\\index.js":"1","E:\\mob-app1\\netbook-client\\src\\reportWebVitals.js":"2","E:\\mob-app1\\netbook-client\\src\\App.js":"3","E:\\mob-app1\\netbook-client\\src\\theme.js":"4","E:\\mob-app1\\netbook-client\\src\\store.js":"5","E:\\mob-app1\\netbook-client\\src\\screens\\Home.js":"6","E:\\mob-app1\\netbook-client\\src\\screens\\Profile.js":"7","E:\\mob-app1\\netbook-client\\src\\screens\\Query.js":"8","E:\\mob-app1\\netbook-client\\src\\components\\PublicRoute.js":"9","E:\\mob-app1\\netbook-client\\src\\screens\\Payment.js":"10","E:\\mob-app1\\netbook-client\\src\\components\\PrivateRoute.js":"11","E:\\mob-app1\\netbook-client\\src\\screens\\FeedView.js":"12","E:\\mob-app1\\netbook-client\\src\\reducers\\oauthReducer.js":"13","E:\\mob-app1\\netbook-client\\src\\components\\HomePage.js":"14","E:\\mob-app1\\netbook-client\\src\\reducers\\nodeReducer.js":"15","E:\\mob-app1\\netbook-client\\src\\screens\\Links.js":"16","E:\\mob-app1\\netbook-client\\src\\components\\Sidebar.js":"17","E:\\mob-app1\\netbook-client\\src\\components\\CardInput.js":"18","E:\\mob-app1\\netbook-client\\src\\constants\\nodeConstant.js":"19","E:\\mob-app1\\netbook-client\\src\\actions\\oauthAction.js":"20","E:\\mob-app1\\netbook-client\\src\\constants\\oauthConstant.js":"21","E:\\mob-app1\\netbook-client\\src\\actions\\nodeAction.js":"22","E:\\mob-app1\\netbook-client\\src\\components\\Navbar.js":"23"},{"size":720,"mtime":1612859642697,"results":"24","hashOfConfig":"25"},{"size":375,"mtime":1612859642713,"results":"26","hashOfConfig":"25"},{"size":1254,"mtime":1613825070645,"results":"27","hashOfConfig":"25"},{"size":176,"mtime":1612859642791,"results":"28","hashOfConfig":"25"},{"size":1829,"mtime":1614086177135,"results":"29","hashOfConfig":"25"},{"size":2371,"mtime":1614089179491,"results":"30","hashOfConfig":"25"},{"size":4496,"mtime":1615985613993,"results":"31","hashOfConfig":"25"},{"size":7907,"mtime":1615985152489,"results":"32","hashOfConfig":"25"},{"size":484,"mtime":1612860464603,"results":"33","hashOfConfig":"25"},{"size":16554,"mtime":1615880061442,"results":"34","hashOfConfig":"25"},{"size":480,"mtime":1612860520503,"results":"35","hashOfConfig":"25"},{"size":16149,"mtime":1615624433232,"results":"36","hashOfConfig":"25"},{"size":1471,"mtime":1615637545454,"results":"37","hashOfConfig":"25"},{"size":6541,"mtime":1615637580895,"results":"38","hashOfConfig":"25"},{"size":26097,"mtime":1616060786189,"results":"39","hashOfConfig":"25"},{"size":53739,"mtime":1616747769375,"results":"40","hashOfConfig":"25"},{"size":2840,"mtime":1615562971515,"results":"41","hashOfConfig":"25"},{"size":597,"mtime":1613824454082,"results":"42","hashOfConfig":"25"},{"size":2126,"mtime":1616052561241,"results":"43","hashOfConfig":"25"},{"size":2782,"mtime":1615986185124,"results":"44","hashOfConfig":"25"},{"size":580,"mtime":1615637607597,"results":"45","hashOfConfig":"25"},{"size":11947,"mtime":1616742591917,"results":"46","hashOfConfig":"25"},{"size":13455,"mtime":1615645902624,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1gqpamk",{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":46,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\mob-app1\\netbook-client\\src\\index.js",[],"E:\\mob-app1\\netbook-client\\src\\reportWebVitals.js",[],"E:\\mob-app1\\netbook-client\\src\\App.js",["95"],"E:\\mob-app1\\netbook-client\\src\\theme.js",[],"E:\\mob-app1\\netbook-client\\src\\store.js",[],"E:\\mob-app1\\netbook-client\\src\\screens\\Home.js",["96","97","98","99","100"],"E:\\mob-app1\\netbook-client\\src\\screens\\Profile.js",["101","102","103","104","105","106","107"],"E:\\mob-app1\\netbook-client\\src\\screens\\Query.js",["108","109","110","111","112","113","114","115","116","117","118","119","120","121","122"],"E:\\mob-app1\\netbook-client\\src\\components\\PublicRoute.js",["123","124"],"E:\\mob-app1\\netbook-client\\src\\screens\\Payment.js",["125","126","127","128","129","130","131","132","133","134","135"],"E:\\mob-app1\\netbook-client\\src\\components\\PrivateRoute.js",["136","137"],"E:\\mob-app1\\netbook-client\\src\\screens\\FeedView.js",["138","139","140","141","142","143","144","145","146","147"],"E:\\mob-app1\\netbook-client\\src\\reducers\\oauthReducer.js",["148","149"],"E:\\mob-app1\\netbook-client\\src\\components\\HomePage.js",["150","151","152","153"],"E:\\mob-app1\\netbook-client\\src\\reducers\\nodeReducer.js",["154","155","156","157","158","159","160","161","162","163","164","165","166","167","168","169","170","171","172","173","174","175","176"],"E:\\mob-app1\\netbook-client\\src\\screens\\Links.js",["177","178","179","180","181","182","183","184","185","186","187","188","189","190","191","192","193","194","195","196","197","198","199","200","201","202","203","204","205","206","207","208","209","210","211","212","213","214","215","216","217","218","219","220","221","222"],"import React, { useState, useEffect } from 'react'\r\n// import Sidebar from 'react-sidebar'\r\n// import SlidingPanel from 'react-sliding-side-panel'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport ClearIcon from '@material-ui/icons/Clear'\r\nimport DeleteIcon from '@material-ui/icons/Delete'\r\nimport InputLabel from '@material-ui/core/InputLabel'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport FormControl from '@material-ui/core/FormControl'\r\nimport CircularProgress from '@material-ui/core/CircularProgress'\r\n\r\nimport AddIcon from '@material-ui/icons/Add'\r\nimport TrendingFlatIcon from '@material-ui/icons/TrendingFlat'\r\nimport ImportExport from '@material-ui/icons/ImportExport'\r\nimport 'react-toastify/dist/ReactToastify.css'\r\n\r\nimport Select from '@material-ui/core/Select'\r\nimport { ToastContainer, toast } from 'react-toastify'\r\n\r\nimport {\r\n  Grid,\r\n  Container,\r\n  Modal,\r\n  TextField,\r\n  Button,\r\n  Fab,\r\n} from '@material-ui/core'\r\nimport {\r\n  ThemeProvider,\r\n  createMuiTheme,\r\n  makeStyles,\r\n} from '@material-ui/core/styles'\r\n\r\n// import DeleteIcon from '@material-ui/icons/Delete'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { OauthLogout } from '../actions/oauthAction'\r\nimport { Link } from 'react-router-dom'\r\nimport TagsInput from 'react-tagsinput'\r\nimport './home.css'\r\nimport 'react-tagsinput/react-tagsinput.css' // If using WebPack and style-loader.\r\nimport {\r\n  NodeAdd,\r\n  Nodefetch,\r\n  EdgeAdd,\r\n  Edgefetch,\r\n  EdgeUpdate,\r\n  NodeUpdate,\r\n  NodeDeletion,\r\n  EdgeDeletion,\r\n  NodeAdded,\r\n  EdgeAdded,\r\n  NodeEdgefetch,\r\n} from '../actions/nodeAction'\r\nimport { Graph } from 'react-d3-graph'\r\nimport Navbar from '../components/Navbar'\r\nimport axios from 'axios'\r\nimport Sidebar from '../components/Sidebar'\r\nimport { NewReleases } from '@material-ui/icons'\r\nlet apidata = []\r\nlet checkingnodes\r\nconst Links = ({ history }) => {\r\n  // const [hid, setHid] = useState(false)\r\n  const [open, setOpen] = useState(false)\r\n  const [openViewNode, setOpenViewNode] = useState(false)\r\n  const [openViewEdge, setOpenViewEdge] = useState(false)\r\n  const [openAddEdge, setOpenAddEdge] = useState(false)\r\n  const [haveupdateedge, setHaveupdateedge] = useState(false)\r\n  const [haveupdatenode, setHaveupdatenode] = useState(false)\r\n  const [openimportview, setOpenimportview] = useState(false)\r\n  const [tags, setTags] = useState([])\r\n  // const [visi, setVisi] = useState(false)\r\n  const [visible, setVisiblity] = useState(false)\r\n  const [payvisi, setPayvisi] = useState(false)\r\n  const [showgraph, setShowgraph] = useState(false)\r\n\r\n  const [id, setId] = useState('')\r\n  let abcd\r\n  const [updatenodeid, setUpdatenodeid] = useState('')\r\n  const [author_data, setAuthor_data] = useState('')\r\n  const [institution_data, setInstitution_data] = useState('')\r\n  const [limit_dataa, setLimit_dataa] = useState(-1)\r\n  const [pubs_dataa, setPubs_dataa] = useState(-1)\r\n  const [co_author_dataa, setCo_author_dataa] = useState(-1)\r\n\r\n  const [updatenodetype, setUpdatenodetype] = useState('')\r\n  const [updatenodetags, setUpdatenodetags] = useState([])\r\n  const [selectimport, setSelectimport] = useState([])\r\n  const [updateinputfields, setUpdateinputfields] = useState([])\r\n\r\n  const [vissible, setVissiblity] = useState(false)\r\n  const [apigraph, setApigraph] = useState([])\r\n  const [haveedgedetails, setHaveedgedetails] = useState([])\r\n  const [type, setType] = useState('')\r\n  const [inputfields, setInputfields] = useState([])\r\n  // const [openPanel, setOpenPanel] = useState(false)\r\n  const [popup, setPopup] = useState(false)\r\n  // const [update, setUpdate] = useState(false)\r\n  const [popdown, setPopdown] = useState(false)\r\n  const [newnode, setNewnode] = useState([])\r\n  const [newedge, setNewedge] = useState([])\r\n  const [attributes, setAttributes] = useState([])\r\n  const [updateattributes, setUpdateattributes] = useState([])\r\n  const [sidebarOpen, setSidebarOpen] = useState(false)\r\n  const [apiloader, setApiloader] = useState(false)\r\n\r\n  const [source, setSource] = useState('')\r\n  const [target, setTarget] = useState('')\r\n  const [edgetags, setEdgetags] = useState([])\r\n  const [searchdata, setSearchdata] = useState([])\r\n  const [searchvalue, setSearchvalue] = useState('')\r\n  // const [name, setName] = useState('')\r\n  const [filtereddata, setFiltereddata] = useState([])\r\n  const [apilabel, setApilabel] = useState([\r\n    'Google Scholar',\r\n    'Imdb',\r\n    'Twitter',\r\n    'Facebook',\r\n  ])\r\n  let colorarr = [\r\n    '#16A085',\r\n    '#27AE60',\r\n    '#2980B9',\r\n    '#8E44AD',\r\n    '#2C3E50',\r\n    '#FFBF00',\r\n    '#F39C12',\r\n    '#D35400',\r\n    '#C0392B',\r\n    '#BDC3C7',\r\n    '#7F8C8D',\r\n    '#43A047',\r\n    '#7B1FA2',\r\n  ]\r\n  const [randomcolor, setRandomcolor] = useState([])\r\n\r\n  const [updatesource, setUpdatesource] = useState('')\r\n  const [updatetarget, setUpdatetarget] = useState('')\r\n  const [updateedgetags, setUpdateedgetags] = useState([])\r\n  const [sendinggraphdata, setSendinggraphdata] = useState([])\r\n\r\n  const [nodepopup, setNodepopup] = useState([])\r\n  const [nodefilterss, setNodefilterss] = useState([])\r\n  const [nodefiltersss, setNodefiltersss] = useState([])\r\n  const [nodefilterssss, setNodefilterssss] = useState([])\r\n  const [nodefiltersssss, setNodefiltersssss] = useState([])\r\n  // const [mydata, setMydata] = useState({ nodes: [], links: [] })\r\n\r\n  // getModalStyle is not a pure function, we roll the style only on the first render\r\n  const [modalStyle] = useState(getModalStyle)\r\n  const dispatch = useDispatch()\r\n  let nodefilt\r\n  let nodefilts\r\n  let nodefiltss\r\n  let nodefiltsss\r\n\r\n  const getOauth = useSelector((state) => state.getOauth)\r\n  const { loading: oauthloading, oauth, error: oautherror } = getOauth\r\n\r\n  // const putNode = useSelector((state) => state.putNode)\r\n  // const { loading, node, error: noderror } = putNode\r\n  const getNode = useSelector((state) => state.getNode)\r\n  const {\r\n    loading: nodeloading,\r\n    filterednode,\r\n    filterededge,\r\n    nodde,\r\n    error: errror,\r\n  } = getNode\r\n  // const deleteNode = useSelector((state) => state.deleteNode)\r\n  // const { loading: deletenodeloading, nodedelete, error: errrror } = deleteNode\r\n\r\n  useEffect(() => {\r\n    if (oauth?._id) {\r\n      dispatch(Nodefetch(oauth._id))\r\n      console.log('oauth', oauth, nodde)\r\n    }\r\n  }, [])\r\n  useEffect(() => {\r\n    console.log('source updated')\r\n    if (source !== '') {\r\n      nodefilt = nodde?.nodes?.filter((item) => item._id !== source)\r\n      setNodefilterss(nodefilt)\r\n      console.log('nodefilt', nodefilt, nodefilterss)\r\n    }\r\n  }, [source])\r\n\r\n  useEffect(() => {\r\n    console.log('source updated')\r\n    if (target !== '') {\r\n      nodefilts = nodde?.nodes?.filter((item) => item._id !== target)\r\n      setNodefiltersss(nodefilts)\r\n      console.log('nodefilt', nodefilts, nodefiltersss)\r\n    }\r\n  }, [target])\r\n  useEffect(() => {\r\n    console.log('source updated')\r\n    if (updatesource !== '') {\r\n      nodefiltss = nodde?.nodes?.filter((item) => item._id !== updatesource)\r\n      setNodefilterssss(nodefiltss)\r\n      console.log('nodefilt', nodefiltss, nodefilterssss)\r\n    }\r\n  }, [updatesource])\r\n  useEffect(() => {\r\n    console.log('source updated')\r\n    if (updatetarget !== '') {\r\n      nodefiltsss = nodde?.nodes?.filter((item) => item._id !== updatetarget)\r\n      setNodefiltersssss(nodefiltsss)\r\n      console.log('nodefilt', nodefiltsss, nodefiltersssss)\r\n    }\r\n  }, [updatetarget])\r\n  // useEffect(() => {\r\n  //   const apires = async () => {\r\n  //     const { data } = await axios.get(\r\n  //       'https://smart-vampirebat-89.loca.lt/api'\r\n  //     )\r\n  //   }\r\n  //   console.log('apidata', data)\r\n  //   apires()\r\n  // })\r\n  useEffect(() => {\r\n    console.log('selectimport:', selectimport)\r\n  }, [selectimport])\r\n\r\n  // useEffect(() => {\r\n  //   const arr = colorarr.sort(() => Math.random() - 0.5)[0]\r\n  //   console.log('arr', arr)\r\n  //   setRandomcolor(arr)\r\n  // }, [])\r\n\r\n  // useEffect(() => {\r\n  //  const abc=nodde?.nodes.filter(xi=>(\r\n\r\n  //   ))\r\n  //   filterednodes(nodde?.nodes)\r\n  // }, [])\r\n  useEffect(() => {\r\n    console.log('searchednode:', filterednode)\r\n  }, [filterednode])\r\n  useEffect(() => {\r\n    console.log('apigraph', apigraph)\r\n  }, [apigraph])\r\n  useEffect(() => {\r\n    console.log('apigraphs', apigraph?.nodes, apigraph?.edges)\r\n  }, [apigraph])\r\n\r\n  useEffect(() => {\r\n    setUpdatenodeid(nodepopup?.id)\r\n    setUpdatenodetype(nodepopup?.type)\r\n    setUpdatenodetags(nodepopup?.tags)\r\n\r\n    let sourceNode = nodde?.nodes?.filter(\r\n      (node) => node.id === haveedgedetails?.source\r\n    )[0]\r\n    let targetNode = nodde?.nodes?.filter(\r\n      (node) => node.id === haveedgedetails?.target\r\n    )[0]\r\n\r\n    setUpdatesource(sourceNode?._id)\r\n    setUpdatetarget(targetNode?._id)\r\n    setUpdateedgetags(haveedgedetails?.tags)\r\n    // setUpdatenodetags(nodepopup?.tags)\r\n\r\n    // setUpdateedgetags(haveedgedetails?.tags)\r\n  }, [haveedgedetails, nodepopup])\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true)\r\n  }\r\n  const updatetheedge = () => {\r\n    setHaveupdateedge(true)\r\n  }\r\n  const showimportview = () => {\r\n    setOpenimportview(true)\r\n    setOpen(false)\r\n  }\r\n  const updatethenode = () => {\r\n    setHaveupdatenode(true)\r\n  }\r\n  const handleOpenViewNode = () => {\r\n    setOpenViewNode(true)\r\n  }\r\n  const handlepayvisi = () => {\r\n    setPayvisi(true)\r\n  }\r\n  const handleOpenAddEdge = () => {\r\n    setOpenAddEdge(true)\r\n  }\r\n  const handleOpenViewEdge = () => {\r\n    setOpenViewEdge(true)\r\n  }\r\n\r\n  const handleClose = () => {\r\n    setOpen(false)\r\n    setOpenViewNode(false)\r\n    setOpenAddEdge(false)\r\n    setOpenViewEdge(false)\r\n    setHaveupdateedge(false)\r\n    setHaveupdatenode(false)\r\n    setOpenimportview(false)\r\n    setPayvisi(false)\r\n  }\r\n\r\n  function rand() {\r\n    return Math.round(Math.random() * 20) - 10\r\n  }\r\n  const { innerWidth, innerHeight } = window\r\n\r\n  function getModalStyle() {\r\n    const { innerWidth, innerHeight } = window\r\n\r\n    let top = 50,\r\n      left = innerWidth < 600 ? 0 : 50\r\n    return {\r\n      top: `${top}%`,\r\n      left: `${left}%`,\r\n      transform: `translate(-${left}%, -${top}%)`,\r\n    }\r\n  }\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n      position: 'absolute',\r\n      width: innerWidth > 600 ? 600 : '100%',\r\n\r\n      backgroundColor: theme.palette.background.paper,\r\n      // border: '2px solid #000',\r\n      boxShadow: theme.shadows[5],\r\n      padding: theme.spacing(2, 4, 3),\r\n      maxHeight: 'calc(100vh - 200px)',\r\n      overflow: 'auto !important',\r\n      top: '50%',\r\n    },\r\n    paperss: {\r\n      position: 'absolute',\r\n      width: innerWidth > 600 ? 500 : '100%',\r\n\r\n      backgroundColor: theme.palette.background.paper,\r\n      // border: '2px solid #000',\r\n      boxShadow: theme.shadows[5],\r\n      padding: theme.spacing(2, 4, 3),\r\n      maxHeight: 'calc(100vh - 100px)',\r\n      overflow: 'auto !important',\r\n      top: '50%',\r\n    },\r\n    papper: {\r\n      position: 'absolute',\r\n      width: innerWidth > 600 ? 450 : '100%',\r\n\r\n      backgroundColor: theme.palette.background.paper,\r\n      // border: '2px solid #000',\r\n      boxShadow: theme.shadows[5],\r\n      padding: theme.spacing(2, 4, 3),\r\n      maxHeight: 'calc(100vh - 200px)',\r\n      overflow: 'auto !important',\r\n      top: '50%',\r\n    },\r\n    multilineColor: {\r\n      color: 'white',\r\n    },\r\n    formControl: {\r\n      // margin: theme.spacing(1),\r\n      minWidth: 120,\r\n      width: '100%',\r\n    },\r\n    selectEmpty: {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n    root: {\r\n      width: '100%',\r\n      '& > * + *': {\r\n        marginTop: theme.spacing(2),\r\n      },\r\n    },\r\n    rooot: {\r\n      position: 'fixed',\r\n      top: '50%',\r\n      left: '50%',\r\n      transform: 'translate(-50%, -50%)',\r\n    },\r\n  }))\r\n  const classes = useStyles()\r\n\r\n  const deleteanode = () => {\r\n    dispatch(NodeDeletion(nodepopup?._id))\r\n\r\n    handleClose()\r\n  }\r\n\r\n  const deleteaedge = () => {\r\n    dispatch(EdgeDeletion(haveedgedetails?._id))\r\n    // dispatch(Nodefetch(oauth._id))\r\n    handleClose()\r\n  }\r\n\r\n  const handlesearchchange = (event) => {\r\n    const { value } = event.target\r\n    setSearchvalue(value)\r\n    console.log('ji', searchvalue)\r\n  }\r\n\r\n  const handleChange = (tags) => {\r\n    setTags(tags)\r\n  }\r\n  const handlenodeChange = (updatenodetags) => {\r\n    setUpdatenodetags(updatenodetags)\r\n  }\r\n  const handleChanges = (edgetags) => {\r\n    setEdgetags(edgetags)\r\n  }\r\n  const handleupdateChanges = (updateedgetags) => {\r\n    setUpdateedgetags(updateedgetags)\r\n  }\r\n\r\n  const handlechangeinput = (index, event) => {\r\n    const values = [...inputfields]\r\n    values[index][event.target.name] = event.target.value\r\n    setInputfields(values)\r\n    setAttributes(inputfields)\r\n  }\r\n  const handlechangeupdateinput = (index, event) => {\r\n    const values = [...updateinputfields]\r\n    values[index][event.target.name] = event.target.value\r\n    setUpdateinputfields(values)\r\n    setUpdateattributes(updateinputfields)\r\n  }\r\n\r\n  const handleclickfields = () => {\r\n    setInputfields([\r\n      ...inputfields,\r\n      { attributeName: '', attributeValue: '', attributeType: '' },\r\n    ])\r\n  }\r\n  const handleclickupdatefields = () => {\r\n    setUpdateinputfields([\r\n      ...updateinputfields,\r\n      { attributeName: '', attributeValue: '', attributeType: '' },\r\n    ])\r\n  }\r\n  const handlgeupdateedge = () => {\r\n    updatetheedge()\r\n  }\r\n  const handleupdatenode = () => {\r\n    updatethenode()\r\n  }\r\n\r\n  const inputfieldsremove = (index) => {\r\n    const values = [...inputfields]\r\n    values.splice(index, 1)\r\n    setInputfields(values)\r\n  }\r\n  const updateinputfieldsremove = (index) => {\r\n    const values = [...updateinputfields]\r\n    values.splice(index, 1)\r\n    setUpdateinputfields(values)\r\n  }\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    if (nodde?.nodes?.length < oauth?.packageid?.Nodes) {\r\n      let color = colorarr.sort(() => Math.random() - 0.5)[0]\r\n      nodde.nodes.filter((node) => {\r\n        if (node.type === type && node.color) {\r\n          return (color = node.color)\r\n        }\r\n      })\r\n      dispatch(NodeAdd(oauth?._id, id, type, tags, attributes, color))\r\n\r\n      // dispatch(Nodefetch(oauth?._id))\r\n\r\n      handleClose()\r\n      setId('')\r\n      setType('')\r\n      setTags([])\r\n      setInputfields([])\r\n    } else {\r\n      handlepayvisi()\r\n\r\n      setId('')\r\n      setType('')\r\n      setTags([])\r\n      setInputfields([])\r\n    }\r\n  }\r\n  const submitupdatenodehandler = (e) => {\r\n    e.preventDefault()\r\n\r\n    dispatch(\r\n      NodeUpdate(\r\n        nodepopup?._id,\r\n        oauth._id,\r\n        updatenodeid,\r\n        updatenodetype,\r\n        updatenodetags,\r\n        updateattributes\r\n      )\r\n    )\r\n    // dispatch(Nodefetch(oauth._id))\r\n    handleClose()\r\n    setUpdatenodeid('')\r\n    setUpdatenodetype('')\r\n    setUpdatenodetags([])\r\n    setUpdateinputfields([])\r\n  }\r\n\r\n  const submitedgehandler = (e) => {\r\n    e.preventDefault()\r\n    if (nodde?.links?.length < oauth?.packageid?.Edges) {\r\n      dispatch(EdgeAdd(oauth._id, source, target, edgetags))\r\n      // dispatch(Nodefetch(oauth._id))\r\n      handleClose()\r\n      setSource('')\r\n      setTarget('')\r\n      setEdgetags([])\r\n      setNodefilterss([])\r\n      setNodefiltersss([])\r\n    } else {\r\n      handlepayvisi()\r\n      // handleClose()\r\n      setSource('')\r\n      setTarget('')\r\n      setEdgetags([])\r\n    }\r\n  }\r\n  const importviewHandler = async (e) => {\r\n    e.preventDefault()\r\n    setApiloader(true)\r\n\r\n    let limit_data\r\n    let co_author_data\r\n    let pubs_data\r\n    limit_data = Number(limit_dataa)\r\n    pubs_data = Number(pubs_dataa)\r\n    co_author_data = Number(co_author_dataa)\r\n    console.log(\r\n      'respone',\r\n      author_data,\r\n      institution_data,\r\n      limit_data,\r\n      pubs_data,\r\n      co_author_data,\r\n      typeof author_data,\r\n      typeof institution_data,\r\n      typeof limit_data,\r\n      typeof pubs_data,\r\n      typeof co_author_data\r\n    )\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        // 'Access-Control-Allow-Origin': '*',\r\n      },\r\n    }\r\n    const { data } = await axios.post(\r\n      'http://192.168.1.178:5000/api/gs_search',\r\n      {\r\n        author_data,\r\n        institution_data,\r\n        limit_data,\r\n        pubs_data,\r\n        co_author_data,\r\n      },\r\n      config\r\n    )\r\n    if (data?.msg === 'faliure' || data?.nodes?.length <= 0) {\r\n      setApiloader(false)\r\n      toast.error('You typed wrong information', {\r\n        position: 'bottom-center',\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      })\r\n    }\r\n    if (data?.nodes) {\r\n      setApiloader(false)\r\n    }\r\n    if (data?.nodes?.length > 0) {\r\n      setShowgraph(true)\r\n      console.log('setting data in graph 1', data, apiloader)\r\n      // setApigraph(data)\r\n      apidata = data\r\n      console.log('api graph nodes', data.nodes)\r\n      let newArr = data?.nodes?.map((importedNode) => {\r\n        let color = colorarr.sort(() => Math.random() - 0.5)[0]\r\n        for (let node of nodde?.nodes) {\r\n          if (node.type === importedNode.type && node.color) {\r\n            color = node.color\r\n          }\r\n        }\r\n        importedNode.color = color\r\n        let nodeid = oauth?._id\r\n        importedNode.nodeid = nodeid\r\n        let tags = []\r\n        importedNode.tags = tags\r\n        console.log('new node', importedNode)\r\n        return importedNode\r\n      })\r\n      let newedd = data?.edges?.map((importededge) => {\r\n        let edgeid = oauth?._id\r\n        importededge.edgeid = edgeid\r\n        console.log('new edge', importededge)\r\n        return importededge\r\n      })\r\n      // // console.log('importview api res', data, limit_data, apigraph)\r\n      // // console.log('new array ==>', data.edges)\r\n      abcd = { edges: newedd, nodes: newArr }\r\n      // setSendinggraphdata(abcd)\r\n      // setMydata({  nodes: apigraph?.nodes, links: apigraph?.edges })\r\n      // console.log('abcd', abcd)\r\n      console.log('setting data in graph 2', abcd)\r\n      // setApigraph(abcd)\r\n      apidata = abcd\r\n      setApigraph(abcd)\r\n      console.log('view', apigraph, apidata?.nodes, apidata?.edges)\r\n      checkingnodes = apidata?.nodes?.filter((xd) => {\r\n        let flag = true\r\n        for (let node of nodde?.nodes) {\r\n          if (node.id === xd.id) {\r\n            // console.log('newdatsa', node.id, xd.id)\r\n            flag = false\r\n          }\r\n        }\r\n        return flag\r\n      })\r\n      console.log('newdata', checkingnodes)\r\n    }\r\n    // const {\r\n    //   data,\r\n    // } = await axios.post('https://yellow-termite-80.loca.lt/api/none', { name })\r\n    // console.log('apireps', data)\r\n  }\r\n  useEffect(() => {\r\n    console.log('abcd', abcd)\r\n  }, [abcd])\r\n\r\n  const mydata = {\r\n    nodes: apidata ? apidata.nodes : [],\r\n\r\n    links: apidata ? apidata.edges : [],\r\n  }\r\n\r\n  const myConfigs = {\r\n    nodeHighlightBehavior: true,\r\n    directed: true,\r\n    node: {\r\n      color: '#3A4A57',\r\n      size: 550,\r\n      highlightStrokeColor: 'blue',\r\n      fontSize: 18,\r\n    },\r\n    link: {\r\n      highlightColor: 'lightblue',\r\n      size: 1500,\r\n      strokeWidth: 2.4,\r\n      color: '#6F93B0',\r\n    },\r\n  }\r\n\r\n  const sendingapidata = () => {\r\n    setShowgraph(false)\r\n    let newernodes\r\n    let neweredges\r\n    let edgges\r\n\r\n    console.log('newdatas', apidata?.nodes, apidata?.edges)\r\n    if (\r\n      nodde?.nodes?.length < oauth?.packageid?.Nodes &&\r\n      checkingnodes?.length > 0\r\n    ) {\r\n      ;(async () => {\r\n        console.log('newdata', apidata?.nodes, apidata?.edges)\r\n        const config = {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            // 'Access-Control-Allow-Origin': '*',\r\n          },\r\n        }\r\n        const { data } = await axios.post(\r\n          'https://netbook-server.herokuapp.com/nodes/many',\r\n          apidata?.nodes,\r\n          config\r\n        )\r\n        newernodes = data\r\n        console.log('data', data, newernodes)\r\n        // setNewnode(data)\r\n        edgges = apidata?.edges?.map((edge) => {\r\n          console.log('newnodees', newnode)\r\n          for (let node of data) {\r\n            if (edge.source === node.id) {\r\n              console.log('nodeid', edge?.source, node?.id)\r\n              edge.source = node._id\r\n            }\r\n            if (edge.target === node.id) {\r\n              edge.target = node._id\r\n            }\r\n          }\r\n          console.log('edgggge', edge)\r\n          return edge\r\n        })\r\n\r\n        if (nodde?.links?.length < oauth?.packageid?.Edges) {\r\n          console.log('eddge', edgges)\r\n          const config = {\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n              // 'Access-Control-Allow-Origin': '*',\r\n            },\r\n          }\r\n          const { data } = await axios.post(\r\n            'https://netbook-server.herokuapp.com/edges/many',\r\n            edgges,\r\n            config\r\n          )\r\n          neweredges = data\r\n          console.log('data2', data, neweredges)\r\n          // setNewedge(data)\r\n        }\r\n        console.log('abbbc')\r\n        dispatch(NodeEdgefetch(newernodes, neweredges))\r\n      })()\r\n    }\r\n    console.log('newedges', edgges)\r\n  }\r\n\r\n  const submitupdateedgehandler = (e) => {\r\n    e.preventDefault()\r\n    dispatch(\r\n      EdgeUpdate(\r\n        haveedgedetails?._id,\r\n        oauth._id,\r\n        updatesource,\r\n        updatetarget,\r\n        updateedgetags\r\n      )\r\n    )\r\n    // dispatch(Nodefetch(oauth._id))\r\n    handleClose()\r\n    setNodefilterssss([])\r\n    setNodefiltersssss([])\r\n  }\r\n\r\n  const blackTheme = createMuiTheme({\r\n    palette: { primary: { main: '#000000' } },\r\n  })\r\n\r\n  const body = (\r\n    <div style={modalStyle} className={classes.paper}>\r\n      <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n        <h2 id='simple-modal-title'>Add Node</h2>\r\n        <IconButton\r\n          onClick={handleClose}\r\n          color='inherit'\r\n          aria-label='open drawer'\r\n          style={{ marginTop: -10, marginBottom: 10 }}\r\n        >\r\n          <ClearIcon style={{ color: 'grey' }} />\r\n        </IconButton>\r\n      </div>\r\n\r\n      <form onSubmit={submitHandler}>\r\n        <Grid container spacing={1}>\r\n          <Grid item xs={6}>\r\n            <TextField\r\n              style={{ color: 'black', width: '100%', marginTop: 9 }}\r\n              id='outlined-basic'\r\n              size='small'\r\n              label='Name'\r\n              value={id}\r\n              onChange={(e) => setId(e.target.value)}\r\n              variant='outlined'\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <TextField\r\n              style={{ width: '100%', marginTop: 9 }}\r\n              id='outlined-basic'\r\n              label='Type'\r\n              size='small'\r\n              value={type}\r\n              onChange={(e) => setType(e.target.value)}\r\n              variant='outlined'\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n        <div style={{ height: 9 }}></div>\r\n        <TagsInput\r\n          style={{ color: 'black' }}\r\n          value={tags}\r\n          onChange={handleChange}\r\n        />\r\n        <div style={{ height: 9 }}></div>\r\n        {inputfields.map((inputfield, index) => (\r\n          <div\r\n            style={{ width: '100%', display: 'flex', marginBottom: 8 }}\r\n            key={index}\r\n          >\r\n            <Grid container spacing={1} style={{ flex: 1 }}>\r\n              <Grid item xs={4}>\r\n                <TextField\r\n                  name='attributeName'\r\n                  label='Type'\r\n                  size='small'\r\n                  variant='outlined'\r\n                  label='Attribute Name'\r\n                  value={inputfield.attributeName}\r\n                  onChange={(event) => handlechangeinput(index, event)}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={4}>\r\n                <TextField\r\n                  name='attributeValue'\r\n                  label='Type'\r\n                  size='small'\r\n                  variant='outlined'\r\n                  label='Attribute Value'\r\n                  value={inputfield.attributeValue}\r\n                  onChange={(event) => handlechangeinput(index, event)}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={4}>\r\n                <TextField\r\n                  name='attributeType'\r\n                  label='Type'\r\n                  size='small'\r\n                  variant='outlined'\r\n                  label='Attribute Type'\r\n                  value={inputfield.attributeType}\r\n                  onChange={(event) => handlechangeinput(index, event)}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n            <IconButton\r\n              size='small'\r\n              type='button'\r\n              onClick={() => inputfieldsremove(index)}\r\n            >\r\n              <DeleteIcon />\r\n            </IconButton>\r\n          </div>\r\n        ))}\r\n        <Button type='button' onClick={handleclickfields} color='primary'>\r\n          Add Attribute\r\n        </Button>\r\n\r\n        <Button type='submit' disabled={id === '' || type === ''}>\r\n          <div>Add Node</div>\r\n        </Button>\r\n      </form>\r\n    </div>\r\n  )\r\n  const boddy = (\r\n    <div style={modalStyle} className={classes.papper}>\r\n      <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n        <h2 id='simple-modal-title'>View Node</h2>\r\n        <IconButton\r\n          onClick={handleClose}\r\n          color='inherit'\r\n          aria-label='open drawer'\r\n          style={{ marginTop: -10, marginBottom: 10 }}\r\n        >\r\n          <ClearIcon style={{ color: 'grey' }} />\r\n        </IconButton>\r\n      </div>\r\n      <Grid container>\r\n        <Grid item xs={6}>\r\n          <p style={{ fontSize: 15 }}>\r\n            Name:\r\n            <span style={{ fontSize: 17, fontWeight: 500 }}>\r\n              {' '}\r\n              {nodepopup?.id}\r\n            </span>\r\n          </p>\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <p style={{ fontSize: 14 }}>\r\n            Type:{' '}\r\n            <span style={{ fontSize: 17, fontWeight: 500 }}>\r\n              {' '}\r\n              {nodepopup?.type}\r\n            </span>\r\n          </p>\r\n        </Grid>\r\n      </Grid>\r\n      {nodepopup?.tags?.length > 0 ? (\r\n        <>\r\n          <div style={{ height: 17 }}></div>\r\n          <p>\r\n            <span style={{ fontSize: 15 }}>Tags:</span>{' '}\r\n            {nodepopup?.tags?.map((tagg, index) => (\r\n              <>\r\n                <span\r\n                  key={index}\r\n                  style={{\r\n                    display: 'inline !important',\r\n                    backgroundColor: 'black',\r\n                    color: 'white',\r\n                    padding: 3.1,\r\n                    paddingLeft: 9,\r\n                    paddingRight: 9,\r\n                    minWidth: 400,\r\n                    marginRight: 3.8,\r\n                    borderRadius: 3.3,\r\n                    textAlign: 'center',\r\n                  }}\r\n                >\r\n                  {tagg}\r\n                </span>\r\n              </>\r\n            ))}\r\n          </p>\r\n        </>\r\n      ) : null}\r\n\r\n      <div style={{ height: 17 }}></div>\r\n      {nodepopup?.attributes?.length > 0 ? (\r\n        <table style={{ width: '100%' }}>\r\n          <thead>\r\n            <tr>\r\n              <th style={{ fontWeight: 400, textAlign: 'left', fontSize: 16 }}>\r\n                Attribute Name\r\n              </th>\r\n              <th style={{ fontWeight: 400, textAlign: 'left', fontSize: 16 }}>\r\n                Attribute Value\r\n              </th>\r\n              <th style={{ fontWeight: 400, textAlign: 'left', fontSize: 16 }}>\r\n                Attribute Type\r\n              </th>\r\n            </tr>\r\n            <div style={{ height: 8 }}></div>\r\n          </thead>\r\n          <tbody>\r\n            {nodepopup?.attributes?.map((att) => (\r\n              <>\r\n                <tr>\r\n                  <td style={{ fontSize: 22 }}>{att.attributeName}</td>\r\n                  <td style={{ fontSize: 22 }}>{att.attributeType}</td>\r\n                  <td style={{ fontSize: 22 }}>{att.attributeValue}</td>\r\n                </tr>\r\n\r\n                {/* <Grid\r\n              style={{ display: 'flex', justifyContent: 'space-between' }}\r\n              container\r\n            >\r\n              <Grid item xs={4}>\r\n                <p style={{ fontSize: 20 }}>\r\n                  Attribute Name:\r\n                  <span style={{ fontWeight: 500 }}> {att.attributeName} </span>\r\n                </p>\r\n              </Grid>\r\n              <Grid item xs={4}>\r\n                <p style={{ fontSize: 20 }}>\r\n                  Attribute Type:\r\n                  <span style={{ fontWeight: 500 }}> {att.attributeType}</span>\r\n                </p>\r\n              </Grid>\r\n              <Grid item xs={4}>\r\n                <p style={{ fontSize: 20 }}>\r\n                  Attribute Value:\r\n                  <span style={{ fontWeight: 500 }}> {att.attributeValue}</span>\r\n                </p>\r\n              </Grid>\r\n            </Grid> */}\r\n                <div style={{ height: 12 }}></div>\r\n              </>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      ) : null}\r\n      <Button type='button' onClick={handleupdatenode}>\r\n        Edit Node\r\n      </Button>\r\n      <Button type='button' onClick={deleteanode}>\r\n        Delete Node\r\n      </Button>\r\n    </div>\r\n  )\r\n  const boddddy = (\r\n    <div style={modalStyle} className={classes.paper}>\r\n      <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n        <h2 id='simple-modal-title'>View Edge</h2>\r\n        <IconButton\r\n          onClick={handleClose}\r\n          color='inherit'\r\n          aria-label='open drawer'\r\n          style={{ marginTop: -10, marginBottom: 10 }}\r\n        >\r\n          <ClearIcon style={{ color: 'grey' }} />\r\n        </IconButton>\r\n      </div>\r\n      <Grid container spacing={1}>\r\n        <Grid item xs={6}>\r\n          <p style={{ fontSize: 15 }}>\r\n            Source:\r\n            <span style={{ fontSize: 17, fontWeight: 500 }}>\r\n              {' '}\r\n              {haveedgedetails?.source}\r\n            </span>\r\n          </p>\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <p style={{ fontSize: 14 }}>\r\n            Target:{' '}\r\n            <span style={{ fontSize: 17, fontWeight: 500 }}>\r\n              {' '}\r\n              {haveedgedetails?.target}\r\n            </span>\r\n          </p>\r\n        </Grid>\r\n      </Grid>\r\n      {haveedgedetails?.tags?.length > 0 ? (\r\n        <>\r\n          <div style={{ height: 17 }}></div>\r\n          <p>\r\n            <span style={{ fontSize: 15 }}>Tags:</span>{' '}\r\n            {haveedgedetails?.tags?.map((tagg) => (\r\n              <>\r\n                <span\r\n                  style={{\r\n                    display: 'inline !important',\r\n                    backgroundColor: 'black',\r\n                    color: 'white',\r\n                    padding: 3.1,\r\n\r\n                    paddingLeft: 9,\r\n                    paddingRight: 9,\r\n                    minWidth: 400,\r\n                    marginRight: 3.8,\r\n                    borderRadius: 3.3,\r\n                    textAlign: 'center',\r\n                  }}\r\n                >\r\n                  {tagg}\r\n                </span>\r\n              </>\r\n            ))}\r\n          </p>\r\n        </>\r\n      ) : null}\r\n\r\n      <div style={{ height: 17 }}></div>\r\n      <Button type='button' onClick={handlgeupdateedge}>\r\n        Edit Edge\r\n      </Button>\r\n      <Button type='button' onClick={deleteaedge}>\r\n        Delete Edge\r\n      </Button>\r\n    </div>\r\n  )\r\n  const bodddy = (\r\n    <div style={modalStyle} className={classes.paper}>\r\n      <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n        <h2 id='simple-modal-title'>Add Edge</h2>\r\n        <IconButton\r\n          onClick={handleClose}\r\n          color='inherit'\r\n          aria-label='open drawer'\r\n          style={{ marginTop: -10, marginBottom: 10 }}\r\n        >\r\n          <ClearIcon style={{ color: 'grey' }} />\r\n        </IconButton>\r\n      </div>\r\n      <form onSubmit={submitedgehandler}>\r\n        <Grid container spacing={1}>\r\n          <Grid item xs={6}>\r\n            <FormControl\r\n              className={classes.formControl}\r\n              variant='outlined'\r\n              size='small'\r\n            >\r\n              <InputLabel id='demo-simple-select-label'>Source</InputLabel>\r\n              <Select\r\n                labelId='demo-simple-select-label'\r\n                value={source}\r\n                onChange={(e) => setSource(e.target.value)}\r\n              >\r\n                {nodefiltersss?.length > 0\r\n                  ? nodefiltersss.map((iddd) => (\r\n                      <MenuItem value={iddd._id}>{iddd.id}</MenuItem>\r\n                    ))\r\n                  : nodde?.nodes?.map((idd) => (\r\n                      <MenuItem value={idd._id}>{idd.id}</MenuItem>\r\n                    ))}\r\n              </Select>\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <FormControl\r\n              className={classes.formControl}\r\n              variant='outlined'\r\n              size='small'\r\n            >\r\n              <InputLabel id='demo-simple-select-label'>Target</InputLabel>\r\n              <Select\r\n                labelId='demo-simple-select-label'\r\n                value={target}\r\n                onChange={(e) => setTarget(e.target.value)}\r\n              >\r\n                {nodefilterss?.length > 0\r\n                  ? nodefilterss.map((iddd) => (\r\n                      <MenuItem value={iddd._id}>{iddd.id}</MenuItem>\r\n                    ))\r\n                  : nodde?.nodes?.map((idd) => (\r\n                      <MenuItem value={idd._id}>{idd.id}</MenuItem>\r\n                    ))}\r\n              </Select>\r\n            </FormControl>\r\n          </Grid>\r\n        </Grid>\r\n        <div style={{ height: 9 }}></div>\r\n        <TagsInput\r\n          style={{ color: 'black' }}\r\n          value={edgetags}\r\n          onChange={handleChanges}\r\n        />\r\n        <Button\r\n          type='submit'\r\n          disabled={source === '' || target === '' || edgetags?.length <= 0}\r\n        >\r\n          <div>Add Edge</div>\r\n        </Button>\r\n      </form>\r\n    </div>\r\n  )\r\n  const bodddddy = (\r\n    <div style={modalStyle} className={classes.paper}>\r\n      <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n        <h2 id='simple-modal-title'>Update Edge</h2>\r\n        <IconButton\r\n          onClick={handleClose}\r\n          color='inherit'\r\n          aria-label='open drawer'\r\n        >\r\n          <ClearIcon style={{ color: 'grey' }} />\r\n        </IconButton>\r\n      </div>\r\n      <form onSubmit={submitupdateedgehandler}>\r\n        <Grid container spacing={1}>\r\n          <Grid item xs={6}>\r\n            <FormControl\r\n              className={classes.formControl}\r\n              variant='outlined'\r\n              size='small'\r\n            >\r\n              <InputLabel id='demo-simple-select-label'>Edit Source</InputLabel>\r\n              <Select\r\n                labelId='demo-simple-select-label'\r\n                value={updatesource}\r\n                onChange={(e) => setUpdatesource(e.target.value)}\r\n              >\r\n                {nodefiltersssss?.length > 0\r\n                  ? nodefiltersssss.map((iddd) => (\r\n                      <MenuItem value={iddd._id}>{iddd.id}</MenuItem>\r\n                    ))\r\n                  : nodde?.nodes?.map((idd) => (\r\n                      <MenuItem value={idd._id}>{idd.id}</MenuItem>\r\n                    ))}\r\n              </Select>\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <FormControl\r\n              className={classes.formControl}\r\n              variant='outlined'\r\n              size='small'\r\n            >\r\n              <InputLabel id='demo-simple-select-label'>Edit Target</InputLabel>\r\n              <Select\r\n                labelId='demo-simple-select-label'\r\n                value={updatetarget}\r\n                onChange={(e) => setUpdatetarget(e.target.value)}\r\n              >\r\n                {nodefilterssss?.length > 0\r\n                  ? nodefilterssss.map((iddd) => (\r\n                      <MenuItem value={iddd._id}>{iddd.id}</MenuItem>\r\n                    ))\r\n                  : nodde?.nodes?.map((idd) => (\r\n                      <MenuItem value={idd._id}>{idd.id}</MenuItem>\r\n                    ))}\r\n              </Select>\r\n            </FormControl>\r\n          </Grid>\r\n        </Grid>\r\n        <div style={{ height: 9 }}></div>\r\n        <TagsInput\r\n          style={{ color: 'black' }}\r\n          value={updateedgetags}\r\n          onChange={handleupdateChanges}\r\n        />\r\n        <Button\r\n          type='submit'\r\n          disabled={\r\n            updatesource === '' ||\r\n            updatetarget === '' ||\r\n            updateedgetags?.length <= 0\r\n          }\r\n        >\r\n          <div>Edit Edge</div>\r\n        </Button>\r\n      </form>\r\n    </div>\r\n  )\r\n  const bodddddddy = (\r\n    <div style={modalStyle} className={classes.paper}>\r\n      <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n        <h2 id='simple-modal-title'>Update Node</h2>\r\n        <IconButton\r\n          onClick={handleClose}\r\n          color='inherit'\r\n          aria-label='open drawer'\r\n        >\r\n          <ClearIcon style={{ color: 'grey' }} />\r\n        </IconButton>\r\n      </div>\r\n      <form onSubmit={submitupdatenodehandler}>\r\n        <Grid container spacing={1}>\r\n          <Grid item xs={6}>\r\n            <TextField\r\n              style={{ color: 'black', width: '100%', marginTop: 9 }}\r\n              id='outlined-basic'\r\n              size='small'\r\n              label='Name'\r\n              value={updatenodeid}\r\n              onChange={(e) => setUpdatenodeid(e.target.value)}\r\n              variant='outlined'\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <TextField\r\n              style={{ width: '100%', marginTop: 9 }}\r\n              id='outlined-basic'\r\n              label='Type'\r\n              size='small'\r\n              value={updatenodetype}\r\n              onChange={(e) => setUpdatenodetype(e.target.value)}\r\n              variant='outlined'\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n        <div style={{ height: 9 }}></div>\r\n        <TagsInput\r\n          style={{ color: 'black' }}\r\n          value={updatenodetags ? updatenodetags : null}\r\n          onChange={handlenodeChange}\r\n        />\r\n        <div style={{ height: 9 }}></div>\r\n        {updateinputfields?.map((updateinputfield, index) => (\r\n          <div\r\n            style={{ width: '100%', display: 'flex', marginBottom: 8 }}\r\n            key={index}\r\n          >\r\n            <Grid container spacing={1} style={{ flex: 1 }}>\r\n              <Grid item xs={4}>\r\n                <TextField\r\n                  name='attributeName'\r\n                  label='Type'\r\n                  size='small'\r\n                  variant='outlined'\r\n                  label='Attribute Name'\r\n                  value={updateinputfield.attributeName}\r\n                  onChange={(event) => handlechangeupdateinput(index, event)}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={4}>\r\n                <TextField\r\n                  name='attributeValue'\r\n                  label='Type'\r\n                  size='small'\r\n                  variant='outlined'\r\n                  label='Attribute Value'\r\n                  value={updateinputfield.attributeValue}\r\n                  onChange={(event) => handlechangeupdateinput(index, event)}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={4}>\r\n                <TextField\r\n                  name='attributeType'\r\n                  label='Type'\r\n                  size='small'\r\n                  variant='outlined'\r\n                  label='Attribute Type'\r\n                  value={updateinputfield.attributeType}\r\n                  onChange={(event) => handlechangeupdateinput(index, event)}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n            <IconButton\r\n              size='small'\r\n              type='button'\r\n              onClick={() => updateinputfieldsremove(index)}\r\n            >\r\n              <DeleteIcon />\r\n            </IconButton>\r\n          </div>\r\n        ))}\r\n        <Button type='button' onClick={handleclickupdatefields} color='primary'>\r\n          Update Attribute\r\n        </Button>\r\n        <Button\r\n          type='submit'\r\n          disabled={updatenodeid === '' || updatenodetype === ''}\r\n        >\r\n          <div>Edit Node</div>\r\n        </Button>\r\n      </form>\r\n    </div>\r\n  )\r\n\r\n  const boddddddddy = (\r\n    <div style={modalStyle} className={classes.paper}>\r\n      <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n        <h2 id='simple-modal-title'>Import View</h2>\r\n        <IconButton\r\n          onClick={handleClose}\r\n          color='inherit'\r\n          aria-label='open drawer'\r\n          style={{ marginTop: -10, marginBottom: 10 }}\r\n        >\r\n          <ClearIcon style={{ color: 'grey' }} />\r\n        </IconButton>\r\n      </div>\r\n      {apiloader ? (\r\n        <div className={classes.rooot}>\r\n          <CircularProgress />\r\n        </div>\r\n      ) : (\r\n        <>\r\n          {!apigraph?.nodes?.length > 0 && (\r\n            <form onSubmit={importviewHandler}>\r\n              <Grid container spacing={1}>\r\n                <Grid item xs={12}>\r\n                  <FormControl\r\n                    className={classes.formControl}\r\n                    variant='outlined'\r\n                    size='small'\r\n                  >\r\n                    <InputLabel id='demo-simple-select-label'>\r\n                      Select import\r\n                    </InputLabel>\r\n                    <Select\r\n                      labelId='demo-simple-select-label'\r\n                      value={selectimport}\r\n                      onChange={(e) => setSelectimport(e.target.value)}\r\n                    >\r\n                      {apilabel?.map((apilab) => (\r\n                        <MenuItem value={apilab}>{apilab}</MenuItem>\r\n                      ))}\r\n                    </Select>\r\n                  </FormControl>\r\n                </Grid>\r\n                {selectimport === 'Google Scholar' && (\r\n                  <>\r\n                    <Grid item xs={12}>\r\n                      <TextField\r\n                        style={{ color: 'black', width: '100%', marginTop: 9 }}\r\n                        id='outlined-basic'\r\n                        size='small'\r\n                        label='Author'\r\n                        value={author_data}\r\n                        onChange={(e) => setAuthor_data(e.target.value)}\r\n                        variant='outlined'\r\n                      />\r\n                    </Grid>\r\n                    {/* <Grid item xs={12}>\r\n                <TextField\r\n                  style={{ color: 'black', width: '100%', marginTop: 9 }}\r\n                  id='outlined-basic'\r\n                  size='small'\r\n                  label='Name'\r\n                  value={name}\r\n                  onChange={(e) => setName(e.target.value)}\r\n                  variant='outlined'\r\n                />\r\n              </Grid> */}\r\n                    <Grid item xs={12}>\r\n                      <TextField\r\n                        style={{ color: 'black', width: '100%', marginTop: 9 }}\r\n                        id='outlined-basic'\r\n                        size='small'\r\n                        label='Institution'\r\n                        value={institution_data}\r\n                        onChange={(e) => setInstitution_data(e.target.value)}\r\n                        variant='outlined'\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                      <TextField\r\n                        style={{ color: 'black', width: '100%', marginTop: 9 }}\r\n                        id='outlined-basic'\r\n                        size='small'\r\n                        label='Limit'\r\n                        type='number'\r\n                        value={limit_dataa}\r\n                        onChange={(e) => setLimit_dataa(e.target.value)}\r\n                        variant='outlined'\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                      <TextField\r\n                        style={{ color: 'black', width: '100%', marginTop: 9 }}\r\n                        id='outlined-basic'\r\n                        size='small'\r\n                        label='Publications'\r\n                        type='number'\r\n                        value={pubs_dataa}\r\n                        onChange={(e) => setPubs_dataa(e.target.value)}\r\n                        variant='outlined'\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                      <TextField\r\n                        style={{ color: 'black', width: '100%', marginTop: 9 }}\r\n                        id='outlined-basic'\r\n                        size='small'\r\n                        label='Coauthor'\r\n                        type='number'\r\n                        value={co_author_dataa}\r\n                        onChange={(e) => setCo_author_dataa(e.target.value)}\r\n                        variant='outlined'\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                      <Button\r\n                        type='submit'\r\n                        variant='contained'\r\n                        color='primary'\r\n                        disabled={author_data === '' || institution_data === ''}\r\n                      >\r\n                        <div>Submit</div>\r\n                      </Button>\r\n                    </Grid>\r\n                  </>\r\n                )}\r\n              </Grid>\r\n              <div style={{ height: 9 }}></div>\r\n\r\n              <div style={{ height: 9 }}></div>\r\n            </form>\r\n          )}\r\n          <div className='graph1'>\r\n            {showgraph && (\r\n              <>\r\n                <Graph\r\n                  id='graph-id'\r\n                  data={mydata}\r\n                  config={myConfigs}\r\n                  // onClickNode={onClickNode}\r\n                  // onClickLink={onClickLink}\r\n                />\r\n                <Button\r\n                  type='button'\r\n                  onClick={sendingapidata}\r\n                  variant='contained'\r\n                  color='primary'\r\n                >\r\n                  Save Graph\r\n                </Button>\r\n              </>\r\n            )}\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  )\r\n  const paymentbody = (\r\n    <div style={modalStyle} className={classes.paperss}>\r\n      <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n        <h2 style={{ textAlign: 'center' }} id='simple-modal-title'>\r\n          Limit Reached\r\n        </h2>\r\n        <IconButton\r\n          onClick={handleClose}\r\n          color='inherit'\r\n          aria-label='open drawer'\r\n          style={{ marginTop: -10, marginBottom: 10 }}\r\n        >\r\n          <ClearIcon style={{ color: 'grey' }} />\r\n        </IconButton>\r\n      </div>\r\n      <p style={{ fontWeight: 400, fontSize: 19 }}>\r\n        Please upgrade your subsciption limit has been reached,please upgrade or\r\n        wait for your quota limit to be refreshed\r\n      </p>\r\n      <div style={{ display: 'flex', justifyContent: 'center', marginTop: 20 }}>\r\n        <Link to='/payment'>\r\n          <Button\r\n            style={{ backgroundColor: 'rgb(32, 32, 32)', color: 'white' }}\r\n          >\r\n            Upgrade\r\n          </Button>\r\n        </Link>\r\n        <Button\r\n          onClick={handleClose}\r\n          style={{\r\n            backgroundColor: 'rgb(32, 32, 32)',\r\n            color: 'white',\r\n            marginLeft: '18px',\r\n          }}\r\n        >\r\n          Close\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  )\r\n\r\n  console.log(\r\n    'data in nodes -->',\r\n    filterednode ? filterednode : nodde?.nodes ? nodde?.nodes : []\r\n  )\r\n\r\n  const data = {\r\n    nodes: filterednode ? filterednode : nodde?.nodes ? nodde?.nodes : [],\r\n    links: filterededge ? filterededge : nodde?.links ? nodde?.links : [],\r\n    // { source: 'Harry', target: 'Sally' },\r\n    // { source: 'Harry', target: 'Alice' },\r\n    // links: [],\r\n  }\r\n\r\n  const myConfig = {\r\n    nodeHighlightBehavior: true,\r\n    directed: true,\r\n    node: {\r\n      color: '#3A4A57',\r\n      size: 550,\r\n      highlightStrokeColor: 'blue',\r\n      fontSize: 18,\r\n    },\r\n    link: {\r\n      highlightColor: 'lightblue',\r\n      size: 1500,\r\n      strokeWidth: 2.4,\r\n      color: '#6F93B0',\r\n    },\r\n  }\r\n\r\n  const onClickNode = (nodeId) => {\r\n    handleOpenViewNode()\r\n    setPopup(true)\r\n    const nodedetails = nodde?.nodes?.filter((node) => node.id === nodeId)[0]\r\n    console.log('ab', nodedetails)\r\n\r\n    setNodepopup(nodedetails)\r\n  }\r\n\r\n  const onClickLink = (source, target) => {\r\n    console.log('source and target', source, target)\r\n    handleOpenViewEdge()\r\n    const edgedetails = nodde?.links?.filter(\r\n      (link) => link.target === target && link.source === source\r\n    )[0]\r\n    setHaveedgedetails(edgedetails)\r\n  }\r\n\r\n  // const showtheVisiblity = () => {\r\n  //   setHid(true)\r\n  // }\r\n\r\n  const onSetSidebarOpen = () => {\r\n    setSidebarOpen(true)\r\n  }\r\n\r\n  const showmodal = () => {\r\n    handleOpen()\r\n    setPopup(false)\r\n  }\r\n  const addedgemodal = () => {\r\n    handleOpenAddEdge()\r\n    setPopdown(true)\r\n  }\r\n\r\n  const logout = () => {\r\n    dispatch(OauthLogout())\r\n    history.push('/')\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Navbar\r\n        setVisiblity={setVisiblity}\r\n        logout={logout}\r\n        vissible={vissible}\r\n        setVissiblity={setVissiblity}\r\n        page={'Links'}\r\n      />\r\n      <div\r\n        className={\r\n          vissible ? 'graph-actions-expanded graph-actions' : 'graph-actions'\r\n        }\r\n      >\r\n        <div className='web'>\r\n          <Button onClick={handleOpen} variant='contained' color='primary'>\r\n            Add Node\r\n          </Button>\r\n          {nodde?.nodes?.length > 1 ? (\r\n            <Button\r\n              onClick={handleOpenAddEdge}\r\n              style={{ marginLeft: 10 }}\r\n              variant='contained'\r\n              color='primary'\r\n            >\r\n              Add Edge\r\n            </Button>\r\n          ) : null}\r\n          <Button\r\n            onClick={showimportview}\r\n            color='primary'\r\n            variant='contained'\r\n            style={{ marginLeft: 10 }}\r\n          >\r\n            Import View\r\n          </Button>\r\n        </div>\r\n        <div className='mobile'>\r\n          <div>\r\n            <Fab onClick={handleOpen} color='primary' aria-label='add'>\r\n              <AddIcon />\r\n            </Fab>\r\n          </div>\r\n          {nodde?.nodes?.length > 1 ? (\r\n            <div>\r\n              <Fab\r\n                onClick={handleOpenAddEdge}\r\n                style={{ marginTop: 10 }}\r\n                color='primary'\r\n                aria-label='add'\r\n              >\r\n                <TrendingFlatIcon />\r\n              </Fab>\r\n            </div>\r\n          ) : null}\r\n          <div>\r\n            <Fab\r\n              onClick={showimportview}\r\n              style={{ marginTop: 10 }}\r\n              color='primary'\r\n              aria-label='add'\r\n            >\r\n              <ImportExport />\r\n            </Fab>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div\r\n        style={{\r\n          display: 'flex',\r\n          flexDirection: 'row',\r\n          justifyContent: 'space-between',\r\n          height: 'calc(100vh - 70px)',\r\n          backgroundColor: 'rgba(230, 230, 230,1)',\r\n        }}\r\n      >\r\n        <Sidebar\r\n          visible={visible}\r\n          showimportview={showimportview}\r\n          vissible={vissible}\r\n        />\r\n        <Modal\r\n          open={open}\r\n          onClose={handleClose}\r\n          aria-labelledby='simple-modal-title'\r\n        >\r\n          {body}\r\n        </Modal>\r\n        <Modal\r\n          open={openViewNode}\r\n          onClose={handleClose}\r\n          aria-labelledby='simple-modal-title'\r\n        >\r\n          {boddy}\r\n        </Modal>\r\n        <Modal\r\n          open={openAddEdge}\r\n          onClose={handleClose}\r\n          aria-labelledby='simple-modal-title'\r\n        >\r\n          {bodddy}\r\n        </Modal>\r\n        <Modal\r\n          open={openViewEdge}\r\n          onClose={handleClose}\r\n          aria-labelledby='simple-modal-title'\r\n        >\r\n          {boddddy}\r\n        </Modal>\r\n        <Modal\r\n          open={haveupdateedge}\r\n          onClose={handleClose}\r\n          aria-labelledby='simple-modal-title'\r\n        >\r\n          {bodddddy}\r\n        </Modal>\r\n        <Modal\r\n          open={openimportview}\r\n          onClose={handleClose}\r\n          aria-labelledby='simple-modal-title'\r\n        >\r\n          {boddddddddy}\r\n        </Modal>\r\n\r\n        <Modal\r\n          open={haveupdatenode}\r\n          onClose={handleClose}\r\n          aria-labelledby='simple-modal-title'\r\n        >\r\n          {bodddddddy}\r\n        </Modal>\r\n        <Modal\r\n          open={payvisi}\r\n          onClose={handleClose}\r\n          aria-labelledby='simple-modal-title'\r\n        >\r\n          {paymentbody}\r\n        </Modal>\r\n        {nodeloading ? (\r\n          <div className={classes.rooot}>\r\n            <CircularProgress />\r\n          </div>\r\n        ) : (\r\n          <div className='graph'>\r\n            <Graph\r\n              id='graph-id1'\r\n              data={data}\r\n              config={myConfig}\r\n              onClickNode={onClickNode}\r\n              onClickLink={onClickLink}\r\n            />\r\n          </div>\r\n        )}\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Links\r\n","E:\\mob-app1\\netbook-client\\src\\components\\Sidebar.js",["223"],"E:\\mob-app1\\netbook-client\\src\\components\\CardInput.js",[],"E:\\mob-app1\\netbook-client\\src\\constants\\nodeConstant.js",[],"E:\\mob-app1\\netbook-client\\src\\actions\\oauthAction.js",[],"E:\\mob-app1\\netbook-client\\src\\constants\\oauthConstant.js",[],"E:\\mob-app1\\netbook-client\\src\\actions\\nodeAction.js",["224","225","226","227","228","229","230","231","232"],"E:\\mob-app1\\netbook-client\\src\\components\\Navbar.js",["233","234","235","236","237","238","239","240","241","242","243","244","245","246","247","248","249","250","251","252"],{"ruleId":"253","severity":1,"message":"254","line":9,"column":8,"nodeType":"255","messageId":"256","endLine":9,"endColumn":14},{"ruleId":"253","severity":1,"message":"257","line":3,"column":10,"nodeType":"255","messageId":"256","endLine":3,"endColumn":14},{"ruleId":"253","severity":1,"message":"258","line":4,"column":8,"nodeType":"255","messageId":"256","endLine":4,"endColumn":17},{"ruleId":"253","severity":1,"message":"259","line":13,"column":11,"nodeType":"255","messageId":"256","endLine":13,"endColumn":18},{"ruleId":"253","severity":1,"message":"260","line":13,"column":20,"nodeType":"255","messageId":"256","endLine":13,"endColumn":25},{"ruleId":"253","severity":1,"message":"261","line":13,"column":27,"nodeType":"255","messageId":"256","endLine":13,"endColumn":32},{"ruleId":"253","severity":1,"message":"262","line":4,"column":8,"nodeType":"255","messageId":"256","endLine":4,"endColumn":12},{"ruleId":"253","severity":1,"message":"263","line":15,"column":23,"nodeType":"255","messageId":"256","endLine":15,"endColumn":34},{"ruleId":"253","severity":1,"message":"259","line":20,"column":11,"nodeType":"255","messageId":"256","endLine":20,"endColumn":18},{"ruleId":"253","severity":1,"message":"261","line":20,"column":27,"nodeType":"255","messageId":"256","endLine":20,"endColumn":32},{"ruleId":"253","severity":1,"message":"264","line":22,"column":20,"nodeType":"255","messageId":"256","endLine":22,"endColumn":31},{"ruleId":"253","severity":1,"message":"265","line":22,"column":33,"nodeType":"255","messageId":"256","endLine":22,"endColumn":38},{"ruleId":"253","severity":1,"message":"266","line":22,"column":47,"nodeType":"255","messageId":"256","endLine":22,"endColumn":53},{"ruleId":"253","severity":1,"message":"267","line":9,"column":8,"nodeType":"255","messageId":"256","endLine":9,"endColumn":24},{"ruleId":"253","severity":1,"message":"268","line":14,"column":3,"nodeType":"255","messageId":"256","endLine":14,"endColumn":16},{"ruleId":"253","severity":1,"message":"269","line":15,"column":3,"nodeType":"255","messageId":"256","endLine":15,"endColumn":17},{"ruleId":"253","severity":1,"message":"257","line":24,"column":3,"nodeType":"255","messageId":"256","endLine":24,"endColumn":7},{"ruleId":"253","severity":1,"message":"270","line":25,"column":3,"nodeType":"255","messageId":"256","endLine":25,"endColumn":12},{"ruleId":"253","severity":1,"message":"271","line":29,"column":3,"nodeType":"255","messageId":"256","endLine":29,"endColumn":6},{"ruleId":"253","severity":1,"message":"261","line":41,"column":27,"nodeType":"255","messageId":"256","endLine":41,"endColumn":32},{"ruleId":"253","severity":1,"message":"264","line":43,"column":20,"nodeType":"255","messageId":"256","endLine":43,"endColumn":31},{"ruleId":"253","severity":1,"message":"265","line":43,"column":33,"nodeType":"255","messageId":"256","endLine":43,"endColumn":38},{"ruleId":"253","severity":1,"message":"266","line":43,"column":47,"nodeType":"255","messageId":"256","endLine":43,"endColumn":53},{"ruleId":"253","severity":1,"message":"263","line":44,"column":23,"nodeType":"255","messageId":"256","endLine":44,"endColumn":34},{"ruleId":"253","severity":1,"message":"263","line":47,"column":25,"nodeType":"255","messageId":"256","endLine":47,"endColumn":36},{"ruleId":"272","severity":1,"message":"273","line":58,"column":12,"nodeType":"255","messageId":"274","endLine":58,"endColumn":25},{"ruleId":"253","severity":1,"message":"263","line":59,"column":25,"nodeType":"255","messageId":"256","endLine":59,"endColumn":36},{"ruleId":"275","severity":1,"message":"276","line":79,"column":6,"nodeType":"277","endLine":79,"endColumn":15,"suggestions":"278"},{"ruleId":"253","severity":1,"message":"259","line":7,"column":11,"nodeType":"255","messageId":"256","endLine":7,"endColumn":18},{"ruleId":"253","severity":1,"message":"261","line":7,"column":27,"nodeType":"255","messageId":"256","endLine":7,"endColumn":32},{"ruleId":"253","severity":1,"message":"279","line":3,"column":8,"nodeType":"255","messageId":"256","endLine":3,"endColumn":13},{"ruleId":"253","severity":1,"message":"280","line":12,"column":8,"nodeType":"255","messageId":"256","endLine":12,"endColumn":22},{"ruleId":"253","severity":1,"message":"281","line":21,"column":3,"nodeType":"255","messageId":"256","endLine":21,"endColumn":12},{"ruleId":"253","severity":1,"message":"271","line":23,"column":3,"nodeType":"255","messageId":"256","endLine":23,"endColumn":6},{"ruleId":"253","severity":1,"message":"268","line":26,"column":3,"nodeType":"255","messageId":"256","endLine":26,"endColumn":16},{"ruleId":"253","severity":1,"message":"269","line":27,"column":3,"nodeType":"255","messageId":"256","endLine":27,"endColumn":17},{"ruleId":"253","severity":1,"message":"263","line":40,"column":23,"nodeType":"255","messageId":"256","endLine":40,"endColumn":34},{"ruleId":"253","severity":1,"message":"263","line":44,"column":25,"nodeType":"255","messageId":"256","endLine":44,"endColumn":36},{"ruleId":"275","severity":1,"message":"282","line":76,"column":6,"nodeType":"277","endLine":76,"endColumn":8,"suggestions":"283"},{"ruleId":"253","severity":1,"message":"284","line":133,"column":9,"nodeType":"255","messageId":"256","endLine":133,"endColumn":13},{"ruleId":"253","severity":1,"message":"285","line":134,"column":9,"nodeType":"255","messageId":"256","endLine":134,"endColumn":20},{"ruleId":"253","severity":1,"message":"259","line":7,"column":11,"nodeType":"255","messageId":"256","endLine":7,"endColumn":18},{"ruleId":"253","severity":1,"message":"261","line":7,"column":27,"nodeType":"255","messageId":"256","endLine":7,"endColumn":32},{"ruleId":"253","severity":1,"message":"270","line":9,"column":16,"nodeType":"255","messageId":"256","endLine":9,"endColumn":25},{"ruleId":"253","severity":1,"message":"266","line":35,"column":47,"nodeType":"255","messageId":"256","endLine":35,"endColumn":53},{"ruleId":"253","severity":1,"message":"286","line":38,"column":20,"nodeType":"255","messageId":"256","endLine":38,"endColumn":32},{"ruleId":"253","severity":1,"message":"287","line":38,"column":48,"nodeType":"255","messageId":"256","endLine":38,"endColumn":58},{"ruleId":"253","severity":1,"message":"288","line":39,"column":12,"nodeType":"255","messageId":"256","endLine":39,"endColumn":16},{"ruleId":"253","severity":1,"message":"263","line":42,"column":23,"nodeType":"255","messageId":"256","endLine":42,"endColumn":34},{"ruleId":"253","severity":1,"message":"263","line":49,"column":25,"nodeType":"255","messageId":"256","endLine":49,"endColumn":36},{"ruleId":"289","severity":1,"message":"290","line":339,"column":19,"nodeType":"291","endLine":339,"endColumn":41},{"ruleId":"289","severity":1,"message":"290","line":350,"column":19,"nodeType":"291","endLine":350,"endColumn":42},{"ruleId":"289","severity":1,"message":"290","line":361,"column":19,"nodeType":"291","endLine":361,"endColumn":41},{"ruleId":"253","severity":1,"message":"292","line":7,"column":3,"nodeType":"255","messageId":"256","endLine":7,"endColumn":26},{"ruleId":"253","severity":1,"message":"293","line":9,"column":3,"nodeType":"255","messageId":"256","endLine":9,"endColumn":23},{"ruleId":"253","severity":1,"message":"259","line":56,"column":11,"nodeType":"255","messageId":"256","endLine":56,"endColumn":18},{"ruleId":"253","severity":1,"message":"261","line":56,"column":27,"nodeType":"255","messageId":"256","endLine":56,"endColumn":32},{"ruleId":"253","severity":1,"message":"294","line":57,"column":9,"nodeType":"255","messageId":"256","endLine":57,"endColumn":24},{"ruleId":"253","severity":1,"message":"295","line":125,"column":13,"nodeType":"255","messageId":"256","endLine":125,"endColumn":19},{"ruleId":"253","severity":1,"message":"296","line":1,"column":10,"nodeType":"255","messageId":"256","endLine":1,"endColumn":16},{"ruleId":"253","severity":1,"message":"297","line":3,"column":3,"nodeType":"255","messageId":"256","endLine":3,"endColumn":16},{"ruleId":"253","severity":1,"message":"298","line":4,"column":3,"nodeType":"255","messageId":"256","endLine":4,"endColumn":19},{"ruleId":"253","severity":1,"message":"299","line":6,"column":3,"nodeType":"255","messageId":"256","endLine":6,"endColumn":21},{"ruleId":"253","severity":1,"message":"300","line":19,"column":3,"nodeType":"255","messageId":"256","endLine":19,"endColumn":17},{"ruleId":"253","severity":1,"message":"301","line":20,"column":3,"nodeType":"255","messageId":"256","endLine":20,"endColumn":22},{"ruleId":"253","severity":1,"message":"302","line":22,"column":3,"nodeType":"255","messageId":"256","endLine":22,"endColumn":19},{"ruleId":"253","severity":1,"message":"303","line":23,"column":3,"nodeType":"255","messageId":"256","endLine":23,"endColumn":22},{"ruleId":"253","severity":1,"message":"304","line":27,"column":3,"nodeType":"255","messageId":"256","endLine":27,"endColumn":19},{"ruleId":"253","severity":1,"message":"305","line":28,"column":3,"nodeType":"255","messageId":"256","endLine":28,"endColumn":20},{"ruleId":"253","severity":1,"message":"306","line":29,"column":3,"nodeType":"255","messageId":"256","endLine":29,"endColumn":20},{"ruleId":"253","severity":1,"message":"307","line":43,"column":3,"nodeType":"255","messageId":"256","endLine":43,"endColumn":21},{"ruleId":"253","severity":1,"message":"308","line":44,"column":3,"nodeType":"255","messageId":"256","endLine":44,"endColumn":24},{"ruleId":"253","severity":1,"message":"309","line":45,"column":3,"nodeType":"255","messageId":"256","endLine":45,"endColumn":24},{"ruleId":"253","severity":1,"message":"310","line":128,"column":11,"nodeType":"255","messageId":"256","endLine":128,"endColumn":23},{"ruleId":"253","severity":1,"message":"311","line":129,"column":11,"nodeType":"255","messageId":"256","endLine":129,"endColumn":23},{"ruleId":"253","severity":1,"message":"312","line":374,"column":11,"nodeType":"255","messageId":"256","endLine":374,"endColumn":24},{"ruleId":"253","severity":1,"message":"313","line":458,"column":11,"nodeType":"255","messageId":"256","endLine":458,"endColumn":25},{"ruleId":"314","severity":1,"message":"315","line":645,"column":28,"nodeType":"316","messageId":"317","endLine":645,"endColumn":30},{"ruleId":"314","severity":1,"message":"318","line":648,"column":28,"nodeType":"316","messageId":"317","endLine":648,"endColumn":30},{"ruleId":"314","severity":1,"message":"315","line":654,"column":23,"nodeType":"316","messageId":"317","endLine":654,"endColumn":25},{"ruleId":"314","severity":1,"message":"315","line":654,"column":59,"nodeType":"316","messageId":"317","endLine":654,"endColumn":61},{"ruleId":"314","severity":1,"message":"315","line":728,"column":28,"nodeType":"316","messageId":"317","endLine":728,"endColumn":30},{"ruleId":"253","severity":1,"message":"319","line":18,"column":10,"nodeType":"255","messageId":"256","endLine":18,"endColumn":24},{"ruleId":"253","severity":1,"message":"270","line":22,"column":3,"nodeType":"255","messageId":"256","endLine":22,"endColumn":12},{"ruleId":"253","severity":1,"message":"268","line":29,"column":3,"nodeType":"255","messageId":"256","endLine":29,"endColumn":16},{"ruleId":"253","severity":1,"message":"320","line":45,"column":3,"nodeType":"255","messageId":"256","endLine":45,"endColumn":12},{"ruleId":"253","severity":1,"message":"321","line":50,"column":3,"nodeType":"255","messageId":"256","endLine":50,"endColumn":12},{"ruleId":"253","severity":1,"message":"322","line":51,"column":3,"nodeType":"255","messageId":"256","endLine":51,"endColumn":12},{"ruleId":"253","severity":1,"message":"323","line":58,"column":10,"nodeType":"255","messageId":"256","endLine":58,"endColumn":21},{"ruleId":"253","severity":1,"message":"324","line":96,"column":10,"nodeType":"255","messageId":"256","endLine":96,"endColumn":15},{"ruleId":"253","severity":1,"message":"325","line":98,"column":10,"nodeType":"255","messageId":"256","endLine":98,"endColumn":17},{"ruleId":"253","severity":1,"message":"326","line":99,"column":19,"nodeType":"255","messageId":"256","endLine":99,"endColumn":29},{"ruleId":"253","severity":1,"message":"327","line":100,"column":10,"nodeType":"255","messageId":"256","endLine":100,"endColumn":17},{"ruleId":"253","severity":1,"message":"328","line":100,"column":19,"nodeType":"255","messageId":"256","endLine":100,"endColumn":29},{"ruleId":"253","severity":1,"message":"329","line":103,"column":10,"nodeType":"255","messageId":"256","endLine":103,"endColumn":21},{"ruleId":"253","severity":1,"message":"330","line":109,"column":10,"nodeType":"255","messageId":"256","endLine":109,"endColumn":20},{"ruleId":"253","severity":1,"message":"331","line":109,"column":22,"nodeType":"255","messageId":"256","endLine":109,"endColumn":35},{"ruleId":"253","severity":1,"message":"332","line":112,"column":10,"nodeType":"255","messageId":"256","endLine":112,"endColumn":22},{"ruleId":"253","severity":1,"message":"333","line":112,"column":24,"nodeType":"255","messageId":"256","endLine":112,"endColumn":39},{"ruleId":"253","severity":1,"message":"334","line":113,"column":20,"nodeType":"255","messageId":"256","endLine":113,"endColumn":31},{"ruleId":"253","severity":1,"message":"335","line":134,"column":10,"nodeType":"255","messageId":"256","endLine":134,"endColumn":21},{"ruleId":"253","severity":1,"message":"336","line":134,"column":23,"nodeType":"255","messageId":"256","endLine":134,"endColumn":37},{"ruleId":"253","severity":1,"message":"337","line":139,"column":10,"nodeType":"255","messageId":"256","endLine":139,"endColumn":26},{"ruleId":"253","severity":1,"message":"338","line":139,"column":28,"nodeType":"255","messageId":"256","endLine":139,"endColumn":47},{"ruleId":"253","severity":1,"message":"286","line":157,"column":20,"nodeType":"255","messageId":"256","endLine":157,"endColumn":32},{"ruleId":"253","severity":1,"message":"287","line":157,"column":48,"nodeType":"255","messageId":"256","endLine":157,"endColumn":58},{"ruleId":"253","severity":1,"message":"266","line":167,"column":12,"nodeType":"255","messageId":"256","endLine":167,"endColumn":18},{"ruleId":"275","severity":1,"message":"339","line":177,"column":6,"nodeType":"277","endLine":177,"endColumn":8,"suggestions":"340"},{"ruleId":"275","severity":1,"message":"341","line":181,"column":18,"nodeType":"342","endLine":181,"endColumn":69},{"ruleId":"275","severity":1,"message":"343","line":190,"column":19,"nodeType":"342","endLine":190,"endColumn":70},{"ruleId":"275","severity":1,"message":"344","line":198,"column":20,"nodeType":"342","endLine":198,"endColumn":77},{"ruleId":"275","severity":1,"message":"345","line":206,"column":21,"nodeType":"342","endLine":206,"endColumn":78},{"ruleId":"275","severity":1,"message":"346","line":264,"column":6,"nodeType":"277","endLine":264,"endColumn":34,"suggestions":"347"},{"ruleId":"253","severity":1,"message":"288","line":303,"column":12,"nodeType":"255","messageId":"256","endLine":303,"endColumn":16},{"ruleId":"253","severity":1,"message":"263","line":306,"column":23,"nodeType":"255","messageId":"256","endLine":306,"endColumn":34},{"ruleId":"253","severity":1,"message":"263","line":309,"column":25,"nodeType":"255","messageId":"256","endLine":309,"endColumn":36},{"ruleId":"253","severity":1,"message":"348","line":395,"column":9,"nodeType":"255","messageId":"256","endLine":395,"endColumn":27},{"ruleId":"349","severity":1,"message":"350","line":461,"column":33,"nodeType":"351","messageId":"352","endLine":461,"endColumn":35},{"ruleId":"253","severity":1,"message":"353","line":744,"column":9,"nodeType":"255","messageId":"256","endLine":744,"endColumn":19},{"ruleId":"289","severity":1,"message":"290","line":806,"column":19,"nodeType":"291","endLine":806,"endColumn":41},{"ruleId":"289","severity":1,"message":"290","line":817,"column":19,"nodeType":"291","endLine":817,"endColumn":42},{"ruleId":"289","severity":1,"message":"290","line":828,"column":19,"nodeType":"291","endLine":828,"endColumn":41},{"ruleId":"289","severity":1,"message":"290","line":1260,"column":19,"nodeType":"291","endLine":1260,"endColumn":41},{"ruleId":"289","severity":1,"message":"290","line":1271,"column":19,"nodeType":"291","endLine":1271,"endColumn":42},{"ruleId":"289","severity":1,"message":"290","line":1282,"column":19,"nodeType":"291","endLine":1282,"endColumn":41},{"ruleId":"253","severity":1,"message":"354","line":1559,"column":9,"nodeType":"255","messageId":"256","endLine":1559,"endColumn":25},{"ruleId":"253","severity":1,"message":"355","line":1563,"column":9,"nodeType":"255","messageId":"256","endLine":1563,"endColumn":18},{"ruleId":"253","severity":1,"message":"356","line":1567,"column":9,"nodeType":"255","messageId":"256","endLine":1567,"endColumn":21},{"ruleId":"253","severity":1,"message":"357","line":7,"column":8,"nodeType":"255","messageId":"256","endLine":7,"endColumn":15},{"ruleId":"253","severity":1,"message":"298","line":4,"column":3,"nodeType":"255","messageId":"256","endLine":4,"endColumn":19},{"ruleId":"253","severity":1,"message":"308","line":24,"column":3,"nodeType":"255","messageId":"256","endLine":24,"endColumn":24},{"ruleId":"253","severity":1,"message":"309","line":25,"column":3,"nodeType":"255","messageId":"256","endLine":25,"endColumn":24},{"ruleId":"253","severity":1,"message":"307","line":26,"column":3,"nodeType":"255","messageId":"256","endLine":26,"endColumn":21},{"ruleId":"349","severity":1,"message":"358","line":133,"column":29,"nodeType":"351","messageId":"359","endLine":133,"endColumn":31},{"ruleId":"349","severity":1,"message":"358","line":166,"column":26,"nodeType":"351","messageId":"359","endLine":166,"endColumn":28},{"ruleId":"314","severity":1,"message":"318","line":330,"column":26,"nodeType":"316","messageId":"317","endLine":330,"endColumn":28},{"ruleId":"314","severity":1,"message":"318","line":337,"column":36,"nodeType":"316","messageId":"317","endLine":337,"endColumn":38},{"ruleId":"314","severity":1,"message":"318","line":340,"column":36,"nodeType":"316","messageId":"317","endLine":340,"endColumn":38},{"ruleId":"253","severity":1,"message":"360","line":9,"column":8,"nodeType":"255","messageId":"256","endLine":9,"endColumn":13},{"ruleId":"253","severity":1,"message":"264","line":30,"column":14,"nodeType":"255","messageId":"256","endLine":30,"endColumn":25},{"ruleId":"253","severity":1,"message":"265","line":33,"column":5,"nodeType":"255","messageId":"256","endLine":33,"endColumn":10},{"ruleId":"253","severity":1,"message":"266","line":34,"column":12,"nodeType":"255","messageId":"256","endLine":34,"endColumn":18},{"ruleId":"253","severity":1,"message":"263","line":37,"column":23,"nodeType":"255","messageId":"256","endLine":37,"endColumn":34},{"ruleId":"253","severity":1,"message":"361","line":44,"column":10,"nodeType":"255","messageId":"256","endLine":44,"endColumn":17},{"ruleId":"253","severity":1,"message":"362","line":44,"column":19,"nodeType":"255","messageId":"256","endLine":44,"endColumn":29},{"ruleId":"253","severity":1,"message":"363","line":45,"column":10,"nodeType":"255","messageId":"256","endLine":45,"endColumn":17},{"ruleId":"253","severity":1,"message":"364","line":45,"column":19,"nodeType":"255","messageId":"256","endLine":45,"endColumn":29},{"ruleId":"253","severity":1,"message":"365","line":46,"column":10,"nodeType":"255","messageId":"256","endLine":46,"endColumn":20},{"ruleId":"253","severity":1,"message":"366","line":46,"column":22,"nodeType":"255","messageId":"256","endLine":46,"endColumn":35},{"ruleId":"253","severity":1,"message":"367","line":47,"column":10,"nodeType":"255","messageId":"256","endLine":47,"endColumn":14},{"ruleId":"253","severity":1,"message":"368","line":47,"column":16,"nodeType":"255","messageId":"256","endLine":47,"endColumn":23},{"ruleId":"253","severity":1,"message":"369","line":49,"column":10,"nodeType":"255","messageId":"256","endLine":49,"endColumn":15},{"ruleId":"253","severity":1,"message":"370","line":49,"column":17,"nodeType":"255","messageId":"256","endLine":49,"endColumn":25},{"ruleId":"253","severity":1,"message":"371","line":51,"column":19,"nodeType":"255","messageId":"256","endLine":51,"endColumn":29},{"ruleId":"272","severity":1,"message":"372","line":170,"column":11,"nodeType":"255","messageId":"274","endLine":170,"endColumn":22},{"ruleId":"272","severity":1,"message":"372","line":246,"column":11,"nodeType":"255","messageId":"274","endLine":246,"endColumn":22},{"ruleId":"253","severity":1,"message":"373","line":293,"column":9,"nodeType":"255","messageId":"256","endLine":293,"endColumn":22},{"ruleId":"253","severity":1,"message":"374","line":302,"column":9,"nodeType":"255","messageId":"256","endLine":302,"endColumn":22},"no-unused-vars","'Import' is defined but never used.","Identifier","unusedVar","'Grid' is defined but never used.","'googleimg' is defined but never used.","'loading' is assigned a value but never used.","'oauth' is assigned a value but never used.","'error' is assigned a value but never used.","'Link' is defined but never used.","'innerHeight' is assigned a value but never used.","'nodeloading' is assigned a value but never used.","'nodde' is assigned a value but never used.","'errror' is assigned a value but never used.","'TextareaAutosize' is defined but never used.","'ThemeProvider' is defined but never used.","'createMuiTheme' is defined but never used.","'Container' is defined but never used.","'Fab' is defined but never used.","no-redeclare","'getModalStyle' is already defined.","redeclared","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'oauth'. Either include it or remove the dependency array.","ArrayExpression",["375"],"'Paper' is defined but never used.","'StripeCheckout' is defined but never used.","'TextField' is defined but never used.","React Hook useEffect has a missing dependency: 'paymentdata'. Either include it or remove the dependency array.",["376"],"'bull' is assigned a value but never used.","'handletoken' is assigned a value but never used.","'oauthloading' is assigned a value but never used.","'oautherror' is assigned a value but never used.","'rand' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'GET_OAUTHUPDATE_REQUEST' is defined but never used.","'GET_OAUTHUPDATE_FAIL' is defined but never used.","'handleSubmitPay' is assigned a value but never used.","'config' is assigned a value but never used.","'indigo' is defined but never used.","'GET_NODE_FAIL' is defined but never used.","'GET_NODE_REQUEST' is defined but never used.","'GET_NODE_SUCCESSES' is defined but never used.","'HAVE_EDGE_FAIL' is defined but never used.","'SEARCH_EDGE_REQUEST' is defined but never used.","'SEARCH_NODE_FAIL' is defined but never used.","'SEARCH_NODE_REQUEST' is defined but never used.","'SEARCH_EDGE_FAIL' is defined but never used.","'HAVE_EDGE_REQUEST' is defined but never used.","'HAVE_EDGE_SUCCESS' is defined but never used.","'GET_AIQUERIES_FAIL' is defined but never used.","'GET_AIQUERIES_REQUEST' is defined but never used.","'GET_AIQUERIES_SUCCESS' is defined but never used.","'checkededge1' is defined but never used.","'checkednode1' is defined but never used.","'filternodeees' is assigned a value but never used.","'nodesoforedges' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","'ToastContainer' is defined but never used.","'Edgefetch' is defined but never used.","'NodeAdded' is defined but never used.","'EdgeAdded' is defined but never used.","'NewReleases' is defined but never used.","'popup' is assigned a value but never used.","'popdown' is assigned a value but never used.","'setNewnode' is assigned a value but never used.","'newedge' is assigned a value but never used.","'setNewedge' is assigned a value but never used.","'sidebarOpen' is assigned a value but never used.","'searchdata' is assigned a value but never used.","'setSearchdata' is assigned a value but never used.","'filtereddata' is assigned a value but never used.","'setFiltereddata' is assigned a value but never used.","'setApilabel' is assigned a value but never used.","'randomcolor' is assigned a value but never used.","'setRandomcolor' is assigned a value but never used.","'sendinggraphdata' is assigned a value but never used.","'setSendinggraphdata' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'nodde', and 'oauth'. Either include them or remove the dependency array.",["377"],"Assignments to the 'nodefilt' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","ChainExpression","Assignments to the 'nodefilts' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Assignments to the 'nodefiltss' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Assignments to the 'nodefiltsss' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","React Hook useEffect has a missing dependency: 'nodde?.nodes'. Either include it or remove the dependency array.",["378"],"'handlesearchchange' is assigned a value but never used.","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'blackTheme' is assigned a value but never used.","'onSetSidebarOpen' is assigned a value but never used.","'showmodal' is assigned a value but never used.","'addedgemodal' is assigned a value but never used.","'AddIcon' is defined but never used.","Array.prototype.map() expects a return value from arrow function.","expectedInside","'Alert' is defined but never used.","'edgeval' is assigned a value but never used.","'setEdgeval' is assigned a value but never used.","'nodeval' is assigned a value but never used.","'setNodeval' is assigned a value but never used.","'searchedge' is assigned a value but never used.","'setSearchedge' is assigned a value but never used.","'msgg' is assigned a value but never used.","'setMsgg' is assigned a value but never used.","'msggg' is assigned a value but never used.","'setMsggg' is assigned a value but never used.","'setChecker' is assigned a value but never used.","'charRepeats' is already defined.","'onkeydownEdge' is assigned a value but never used.","'onkeydownNode' is assigned a value but never used.",{"desc":"379","fix":"380"},{"desc":"381","fix":"382"},{"desc":"383","fix":"384"},{"desc":"385","fix":"386"},"Update the dependencies array to be: [loading, oauth]",{"range":"387","text":"388"},"Update the dependencies array to be: [paymentdata]",{"range":"389","text":"390"},"Update the dependencies array to be: [dispatch, nodde, oauth]",{"range":"391","text":"392"},"Update the dependencies array to be: [haveedgedetails, nodde?.nodes, nodepopup]",{"range":"393","text":"394"},[2203,2212],"[loading, oauth]",[2203,2205],"[paymentdata]",[6307,6309],"[dispatch, nodde, oauth]",[8911,8939],"[haveedgedetails, nodde?.nodes, nodepopup]"]