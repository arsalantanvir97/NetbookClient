[{"/Users/black_trojan/Desktop/netbook-client/src/index.js":"1","/Users/black_trojan/Desktop/netbook-client/src/App.js":"2","/Users/black_trojan/Desktop/netbook-client/src/reportWebVitals.js":"3","/Users/black_trojan/Desktop/netbook-client/src/store.js":"4","/Users/black_trojan/Desktop/netbook-client/src/components/PrivateRoute.js":"5","/Users/black_trojan/Desktop/netbook-client/src/screens/Home.js":"6","/Users/black_trojan/Desktop/netbook-client/src/reducers/nodeReducer.js":"7","/Users/black_trojan/Desktop/netbook-client/src/reducers/oauthReducer.js":"8","/Users/black_trojan/Desktop/netbook-client/src/screens/Links.js":"9","/Users/black_trojan/Desktop/netbook-client/src/constants/oauthConstant.js":"10","/Users/black_trojan/Desktop/netbook-client/src/constants/nodeConstant.js":"11","/Users/black_trojan/Desktop/netbook-client/src/actions/oauthAction.js":"12","/Users/black_trojan/Desktop/netbook-client/src/actions/nodeAction.js":"13"},{"size":558,"mtime":1611057933756,"results":"14","hashOfConfig":"15"},{"size":403,"mtime":1611057933751,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":1611057933758,"results":"17","hashOfConfig":"15"},{"size":1427,"mtime":1611391519897,"results":"18","hashOfConfig":"15"},{"size":467,"mtime":1611057933752,"results":"19","hashOfConfig":"15"},{"size":2223,"mtime":1611057933759,"results":"20","hashOfConfig":"15"},{"size":1634,"mtime":1611391519895,"results":"21","hashOfConfig":"15"},{"size":510,"mtime":1611057933758,"results":"22","hashOfConfig":"15"},{"size":23777,"mtime":1611414972695,"results":"23","hashOfConfig":"15"},{"size":204,"mtime":1611057933753,"results":"24","hashOfConfig":"15"},{"size":600,"mtime":1611391519895,"results":"25","hashOfConfig":"15"},{"size":1025,"mtime":1611414972694,"results":"26","hashOfConfig":"15"},{"size":2849,"mtime":1611414972691,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1f0ugjw",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":27,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"/Users/black_trojan/Desktop/netbook-client/src/index.js",[],["58","59"],"/Users/black_trojan/Desktop/netbook-client/src/App.js",[],"/Users/black_trojan/Desktop/netbook-client/src/reportWebVitals.js",[],"/Users/black_trojan/Desktop/netbook-client/src/store.js",[],"/Users/black_trojan/Desktop/netbook-client/src/components/PrivateRoute.js",["60","61"],"import React from 'react'\nimport { Route, Redirect } from 'react-router-dom'\nimport { useSelector } from 'react-redux'\n\nconst PrivateRoute = ({ component: Component, ...rest }) => {\n  const getOauth = useSelector((state) => state.getOauth)\n  const { loading, oauth, error } = getOauth\n\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        oauth ? <Redirect to='/graph' /> : <Component {...props} />\n      }\n    />\n  )\n}\n\nexport default PrivateRoute\n","/Users/black_trojan/Desktop/netbook-client/src/screens/Home.js",["62","63","64","65","66"],"import React from 'react'\nimport GoogleLogin from 'react-google-login'\nimport { Grid, Container } from '@material-ui/core'\nimport googleimg from '../images/google.png'\nimport { useDispatch, useSelector } from 'react-redux'\nimport './home.css'\nimport { OauthLogin } from '../actions/oauthAction'\n\nconst Home = ({ history }) => {\n  const dispatch = useDispatch()\n  const getOauth = useSelector((state) => state.getOauth)\n  const { loading, oauth, error } = getOauth\n  const resgoogle = (response) => {\n    console.log(response)\n    console.log(\n      response.profileObj.email,\n      response.profileObj.name,\n      response.profileObj.imageUrl,\n      response.tokenObj.access_token,\n      response.tokenObj.expires_at,\n      response.tokenObj.expires_in\n    )\n    console.log(response.profileObj)\n    if (response) {\n      dispatch(\n        OauthLogin(\n          response.profileObj.name,\n          response.profileObj.email,\n          response.profileObj.imageUrl,\n          response.tokenObj.access_token,\n          response.tokenObj.expires_in,\n          response.tokenObj.expires_at\n        )\n      )\n      history.push('/graph')\n    }\n  }\n\n  return (\n    <div style={{ display: 'flex' }}>\n      <div className='hhh'>\n        <Container>\n          <div style={{ textAlign: 'center', height: 20 }}>\n            <h1>Netbook</h1>\n          </div>\n          <div\n            style={{\n              display: 'flex',\n              flexDirection: 'column',\n\n              justifyContent: 'center',\n              height: 'calc(100vh - 20px)',\n            }}\n          >\n            <h2>Login to your account</h2>\n            <div style={{ height: 15 }}></div>\n            <GoogleLogin\n              theme='dark'\n              className='button'\n              clientId='542443202716-1162el1e1nqk02h64h08frl40vsl5hgp.apps.googleusercontent.com'\n              buttonText='Login with Google'\n              onSuccess={resgoogle}\n              onFailure={resgoogle}\n              isSignedIn={true}\n              cookiePolicy={'single_host_origin'}\n            />\n          </div>\n        </Container>\n      </div>\n\n      <div style={{ flex: 1 }}>\n        <div className='img'></div>\n      </div>\n    </div>\n  )\n}\n\nexport default Home\n","/Users/black_trojan/Desktop/netbook-client/src/reducers/nodeReducer.js",[],"/Users/black_trojan/Desktop/netbook-client/src/reducers/oauthReducer.js",[],"/Users/black_trojan/Desktop/netbook-client/src/screens/Links.js",["67","68","69","70","71","72","73","74","75","76","77","78","79","80","81","82","83","84","85","86","87","88","89","90","91","92","93"],"import React, { useState, useEffect } from 'react'\n// import Sidebar from 'react-sidebar'\n// import SlidingPanel from 'react-sliding-side-panel'\nimport IconButton from '@material-ui/core/IconButton'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport { GoogleLogout } from 'react-google-login'\nimport ClearIcon from '@material-ui/icons/Clear'\nimport SearchIcon from '@material-ui/icons/Search'\nimport InputAdornment from '@material-ui/core/InputAdornment'\nimport AddIcon from '@material-ui/icons/Add'\nimport PersonIcon from '@material-ui/icons/Person'\nimport FormatListBulletedIcon from '@material-ui/icons/FormatListBulleted'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport TrendingFlatIcon from '@material-ui/icons/TrendingFlat'\nimport TimelineIcon from '@material-ui/icons/Timeline'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport FormHelperText from '@material-ui/core/FormHelperText'\nimport FormControl from '@material-ui/core/FormControl'\nimport Select from '@material-ui/core/Select'\nimport Alert from '@material-ui/lab/Alert'\n\nimport { Grid, Container, Modal, TextField, Button } from '@material-ui/core'\nimport {\n  ThemeProvider,\n  createMuiTheme,\n  makeStyles,\n} from '@material-ui/core/styles'\n\n// import DeleteIcon from '@material-ui/icons/Delete'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { OauthLogout } from '../actions/oauthAction'\nimport TagsInput from 'react-tagsinput'\nimport './home.css'\nimport 'react-tagsinput/react-tagsinput.css' // If using WebPack and style-loader.\nimport { NodeAdd, Nodefetch, EdgeAdd, Edgefetch } from '../actions/nodeAction'\nimport { Graph } from 'react-d3-graph'\n\nconst Links = ({ history }) => {\n  const [hid, setHid] = useState(false)\n  const [open, setOpen] = useState(false)\n  const [openViewNode, setOpenViewNode] = useState(false)\n  const [openViewEdge, setOpenViewEdge] = useState(false)\n  const [openAddEdge, setOpenAddEdge] = useState(false)\n  const [tags, setTags] = useState([])\n  const [visi, setVisi] = useState(false)\n  const [visible, setVisiblity] = useState(false)\n  const [id, setId] = useState('')\n  const [haveedgedetails, setHaveedgedetails] = useState([])\n  const [type, setType] = useState('')\n  const [inputfields, setInputfields] = useState([])\n  const [openPanel, setOpenPanel] = useState(false)\n  const [popup, setPopup] = useState(false)\n  const [popdown, setPopdown] = useState(false)\n  const [attributes, setAttributes] = useState([])\n  const [sidebarOpen, setSidebarOpen] = useState(false)\n  const [source, setSource] = useState('')\n  const [target, setTarget] = useState('')\n  const [edgetags, setEdgetags] = useState([])\n  const [nodepopup, setNodepopup] = useState([])\n  // getModalStyle is not a pure function, we roll the style only on the first render\n  const [modalStyle] = useState(getModalStyle)\n  const dispatch = useDispatch()\n\n  const getOauth = useSelector((state) => state.getOauth)\n  const { loading: oauthloading, oauth, error: oautherror } = getOauth\n\n  const putNode = useSelector((state) => state.putNode)\n  const { loading, node, error: noderror } = putNode\n  const getNode = useSelector((state) => state.getNode)\n  const { loading: nodeloading, nodde, error: errror } = getNode\n\n  useEffect(() => {\n    if (oauth?._id) {\n      dispatch(Nodefetch(oauth._id))\n\n      console.log('hellowold', oauth._id)\n    }\n  }, [])\n\n  useEffect(() => {\n    console.log('nodde being updated =>', nodde)\n  }, [nodde])\n\n  const handleOpen = () => {\n    setOpen(true)\n  }\n  const handleOpenViewNode = () => {\n    setOpenViewNode(true)\n  }\n  const handleOpenAddEdge = () => {\n    setOpenAddEdge(true)\n  }\n  const handleOpenViewEdge = () => {\n    setOpenViewEdge(true)\n  }\n\n  const handleClose = () => {\n    setOpen(false)\n    setOpenViewNode(false)\n    setOpenAddEdge(false)\n    setOpenViewEdge(false)\n  }\n\n  function rand() {\n    return Math.round(Math.random() * 20) - 10\n  }\n\n  function getModalStyle() {\n    const top = 50 + rand()\n    const left = 50 + rand()\n\n    return {\n      top: `${top}%`,\n      left: `${left}%`,\n      transform: `translate(-${top}%, -${left}%)`,\n    }\n  }\n\n  const useStyles = makeStyles((theme) => ({\n    paper: {\n      position: 'absolute',\n      width: 600,\n      backgroundColor: theme.palette.background.paper,\n      // border: '2px solid #000',\n      boxShadow: theme.shadows[5],\n      padding: theme.spacing(2, 4, 3),\n      maxHeight: 'calc(100vh - 200px)',\n      overflow: 'auto !important',\n    },\n    multilineColor: {\n      color: 'white',\n    },\n    formControl: {\n      margin: theme.spacing(1),\n      minWidth: 120,\n    },\n    selectEmpty: {\n      marginTop: theme.spacing(2),\n    },\n    root: {\n      width: '100%',\n      '& > * + *': {\n        marginTop: theme.spacing(2),\n      },\n    },\n  }))\n  const classes = useStyles()\n  const handleChange = (tags) => {\n    setTags(tags)\n  }\n  const handleChanges = (edgetags) => {\n    setEdgetags(edgetags)\n  }\n\n  const handlechangeinput = (index, event) => {\n    const values = [...inputfields]\n    values[index][event.target.name] = event.target.value\n    setInputfields(values)\n    setAttributes(inputfields)\n  }\n  const handleclickfields = () => {\n    setInputfields([\n      ...inputfields,\n      { attributeName: '', attributeValue: '', attributeType: '' },\n    ])\n  }\n\n  const inputfieldsremove = (index) => {\n    const values = [...inputfields]\n    values.splice(index, 1)\n    setInputfields(values)\n  }\n  const submitHandler = (e) => {\n    e.preventDefault()\n\n    dispatch(NodeAdd(oauth._id, id, type, tags, attributes))\n    dispatch(Nodefetch(oauth._id))\n    handleClose()\n    setId('')\n    setType('')\n    setTags([])\n    setInputfields([])\n  }\n  const submitedgehandler = (e) => {\n    e.preventDefault()\n    dispatch(EdgeAdd(oauth._id, source, target, edgetags))\n    dispatch(Nodefetch(oauth._id))\n    handleClose()\n    setSource('')\n    setTarget('')\n    setEdgetags([])\n  }\n\n  const body = (\n    <div style={modalStyle} className={classes.paper}>\n      <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n        <h2 id='simple-modal-title'>Add Node</h2>\n        <IconButton\n          onClick={handleClose}\n          color='inherit'\n          aria-label='open drawer'\n        >\n          <ClearIcon style={{ color: 'grey' }} />\n        </IconButton>\n      </div>\n\n      <form onSubmit={submitHandler}>\n        <Grid container spacing={1}>\n          <Grid item xs={6}>\n            <TextField\n              style={{ color: 'black', width: '100%', marginTop: 9 }}\n              id='outlined-basic'\n              size='small'\n              label='Name'\n              value={id}\n              onChange={(e) => setId(e.target.value)}\n              variant='outlined'\n            />\n          </Grid>\n          <Grid item xs={6}>\n            <TextField\n              style={{ width: '100%', marginTop: 9 }}\n              id='outlined-basic'\n              label='Type'\n              size='small'\n              value={type}\n              onChange={(e) => setType(e.target.value)}\n              variant='outlined'\n            />\n          </Grid>\n        </Grid>\n        <div style={{ height: 9 }}></div>\n        <TagsInput\n          style={{ color: 'black' }}\n          value={tags}\n          onChange={handleChange}\n        />\n        <div style={{ height: 9 }}></div>\n        {inputfields.map((inputfield, index) => (\n          <div\n            style={{ width: '100%', display: 'flex', marginBottom: 8 }}\n            key={index}\n          >\n            <Grid container spacing={1} style={{ flex: 1 }}>\n              <Grid item xs={4}>\n                <TextField\n                  name='attributeName'\n                  label='Type'\n                  size='small'\n                  variant='outlined'\n                  label='Attribute Name'\n                  value={inputfield.attributeName}\n                  onChange={(event) => handlechangeinput(index, event)}\n                />\n              </Grid>\n              <Grid item xs={4}>\n                <TextField\n                  name='attributeValue'\n                  label='Type'\n                  size='small'\n                  variant='outlined'\n                  label='Attribute Value'\n                  value={inputfield.attributeValue}\n                  onChange={(event) => handlechangeinput(index, event)}\n                />\n              </Grid>\n              <Grid item xs={4}>\n                <TextField\n                  name='attributeType'\n                  label='Type'\n                  size='small'\n                  variant='outlined'\n                  label='Attribute Type'\n                  value={inputfield.attributeType}\n                  onChange={(event) => handlechangeinput(index, event)}\n                />\n              </Grid>\n            </Grid>\n            <IconButton\n              size='small'\n              type='button'\n              onClick={() => inputfieldsremove(index)}\n            >\n              <DeleteIcon />\n            </IconButton>\n          </div>\n        ))}\n        <Button type='button' onClick={handleclickfields} color='primary'>\n          Add Attribute\n        </Button>\n        <Button\n          type='submit'\n          disabled={id === '' || type === '' || tags.length <= 0}\n        >\n          <div>Add Node</div>\n        </Button>\n      </form>\n    </div>\n  )\n\n  const blackTheme = createMuiTheme({\n    palette: { primary: { main: '#000000' } },\n  })\n\n  const data = {\n    nodes: nodde?.nodes || [],\n    links: nodde?.links || [],\n    // { source: 'Harry', target: 'Sally' },\n    // { source: 'Harry', target: 'Alice' },\n  }\n\n  const myConfig = {\n    nodeHighlightBehavior: true,\n    directed: true,\n    node: {\n      color: '#3A4A57',\n      size: 550,\n      highlightStrokeColor: 'blue',\n      fontSize: 18,\n    },\n    link: {\n      highlightColor: 'lightblue',\n      size: 1500,\n      strokeWidth: 2.4,\n      color: '#6F93B0',\n    },\n  }\n\n  const boddy = (\n    <div style={modalStyle} className={classes.paper}>\n      <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n        <h2 id='simple-modal-title'>View Node</h2>\n        <IconButton\n          onClick={handleClose}\n          color='inherit'\n          aria-label='open drawer'\n        >\n          <ClearIcon style={{ color: 'grey' }} />\n        </IconButton>\n      </div>\n      <Grid container>\n        <Grid xs={6}>\n          <p style={{ fontSize: 15 }}>\n            Name:\n            <span style={{ fontSize: 17, fontWeight: 500 }}>\n              {' '}\n              {nodepopup?.id}\n            </span>\n          </p>\n        </Grid>\n        <Grid xs={6}>\n          <p style={{ fontSize: 14 }}>\n            Type:{' '}\n            <span style={{ fontSize: 17, fontWeight: 500 }}>\n              {' '}\n              {nodepopup?.type}\n            </span>\n          </p>\n        </Grid>\n      </Grid>\n      <div style={{ height: 17 }}></div>\n      <p>\n        <span style={{ fontSize: 15 }}>Tags:</span>{' '}\n        {nodepopup?.tags?.map((tagg) => (\n          <>\n            <span\n              style={{\n                display: 'inline !important',\n                backgroundColor: 'black',\n                color: 'white',\n                padding: 3.1,\n                paddingLeft: 9,\n                paddingRight: 9,\n                minWidth: 400,\n                marginRight: 3.8,\n                borderRadius: 3.3,\n                textAlign: 'center',\n              }}\n            >\n              {tagg}\n            </span>\n          </>\n        ))}\n      </p>\n      <div style={{ height: 17 }}></div>\n      {nodepopup?.attributes?.length > 0 ? (\n        <table style={{ width: '100%' }}>\n          <thead>\n            <tr>\n              <th style={{ fontWeight: 400, textAlign: 'left', fontSize: 16 }}>\n                Attribute Name\n              </th>\n              <th style={{ fontWeight: 400, textAlign: 'left', fontSize: 16 }}>\n                Attribute Value\n              </th>\n              <th style={{ fontWeight: 400, textAlign: 'left', fontSize: 16 }}>\n                Attribute Type\n              </th>\n            </tr>\n            <div style={{ height: 8 }}></div>\n          </thead>\n          <tbody>\n            {nodepopup?.attributes?.map((att) => (\n              <>\n                <tr>\n                  <td style={{ fontSize: 22 }}>{att.attributeName}</td>\n                  <td style={{ fontSize: 22 }}>{att.attributeType}</td>\n                  <td style={{ fontSize: 22 }}>{att.attributeValue}</td>\n                </tr>\n\n                {/* <Grid\n              style={{ display: 'flex', justifyContent: 'space-between' }}\n              container\n            >\n              <Grid item xs={4}>\n                <p style={{ fontSize: 20 }}>\n                  Attribute Name:\n                  <span style={{ fontWeight: 500 }}> {att.attributeName} </span>\n                </p>\n              </Grid>\n              <Grid item xs={4}>\n                <p style={{ fontSize: 20 }}>\n                  Attribute Type:\n                  <span style={{ fontWeight: 500 }}> {att.attributeType}</span>\n                </p>\n              </Grid>\n              <Grid item xs={4}>\n                <p style={{ fontSize: 20 }}>\n                  Attribute Value:\n                  <span style={{ fontWeight: 500 }}> {att.attributeValue}</span>\n                </p>\n              </Grid>\n            </Grid> */}\n                <div style={{ height: 12 }}></div>\n              </>\n            ))}\n          </tbody>\n        </table>\n      ) : null}\n    </div>\n  )\n  const boddddy = (\n    <div style={modalStyle} className={classes.paper}>\n      <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n        <h2 id='simple-modal-title'>View Edge</h2>\n        <IconButton\n          onClick={handleClose}\n          color='inherit'\n          aria-label='open drawer'\n        >\n          <ClearIcon style={{ color: 'grey' }} />\n        </IconButton>\n      </div>\n      <Grid container>\n        <Grid xs={6}>\n          <p style={{ fontSize: 15 }}>\n            Source:\n            <span style={{ fontSize: 17, fontWeight: 500 }}>\n              {' '}\n              {haveedgedetails?.source}\n            </span>\n          </p>\n        </Grid>\n        <Grid xs={6}>\n          <p style={{ fontSize: 14 }}>\n            Target:{' '}\n            <span style={{ fontSize: 17, fontWeight: 500 }}>\n              {' '}\n              {haveedgedetails?.target}\n            </span>\n          </p>\n        </Grid>\n      </Grid>\n      <div style={{ height: 17 }}></div>\n      <p>\n        <span style={{ fontSize: 15 }}>Tags:</span>{' '}\n        {haveedgedetails?.tags?.map((tagg) => (\n          <>\n            <span\n              style={{\n                display: 'inline !important',\n                backgroundColor: 'black',\n                color: 'white',\n                padding: 3.1,\n\n                paddingLeft: 9,\n                paddingRight: 9,\n                minWidth: 400,\n                marginRight: 3.8,\n                borderRadius: 3.3,\n                textAlign: 'center',\n              }}\n            >\n              {tagg}\n            </span>\n          </>\n        ))}\n      </p>\n      <div style={{ height: 17 }}></div>\n    </div>\n  )\n\n  const bodddy = (\n    <div style={modalStyle} className={classes.paper}>\n      <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n        <h2 id='simple-modal-title'>Add Edge</h2>\n        <IconButton\n          onClick={handleClose}\n          color='inherit'\n          aria-label='open drawer'\n        >\n          <ClearIcon style={{ color: 'grey' }} />\n        </IconButton>\n      </div>\n      <form onSubmit={submitedgehandler}>\n        <Grid container>\n          <Grid item xs={6}>\n            <FormControl className={classes.formControl}>\n              <InputLabel id='demo-simple-select-label'>Source</InputLabel>\n              <Select\n                labelId='demo-simple-select-label'\n                id='demo-simple-select'\n                value={source}\n                onChange={(e) => setSource(e.target.value)}\n              >\n                {nodde?.nodes?.map((idd) => (\n                  <MenuItem value={idd.id}>{idd.id}</MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n          </Grid>\n          <Grid item xs={6}>\n            <FormControl className={classes.formControl}>\n              <InputLabel id='demo-simple-select-label'>Target</InputLabel>\n              <Select\n                labelId='demo-simple-select-label'\n                id='demo-simple-select'\n                value={target}\n                onChange={(e) => setTarget(e.target.value)}\n              >\n                {nodde?.nodes?.map((idd) => (\n                  <MenuItem value={idd.id}>{idd.id}</MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n          </Grid>\n        </Grid>\n        <div style={{ height: 9 }}></div>\n        <TagsInput\n          style={{ color: 'black' }}\n          value={edgetags}\n          onChange={handleChanges}\n        />\n        <Button\n          type='submit'\n          disabled={source === '' || target === '' || edgetags.length <= 0}\n        >\n          <div>Add Edge</div>\n        </Button>\n      </form>\n    </div>\n  )\n\n  useEffect(() => {\n    console.log('hero', nodepopup)\n  }, [nodepopup])\n\n  const onClickNode = (nodeId) => {\n    handleOpenViewNode()\n    setPopup(true)\n    const nodedetails = nodde?.nodes?.filter((node) => node.id === nodeId)[0]\n    console.log('ab', nodedetails)\n\n    setNodepopup(nodedetails)\n  }\n\n  const onClickLink = (source, target) => {\n    handleOpenViewEdge()\n    const edgedetails = nodde?.links?.filter(\n      (link) => link.source === source\n    )[0]\n    console.log('ew', edgedetails)\n    setHaveedgedetails(edgedetails)\n  }\n\n  const showtheVisiblity = () => {\n    setHid(true)\n  }\n\n  const onSetSidebarOpen = () => {\n    setSidebarOpen(true)\n  }\n\n  const showmodal = () => {\n    handleOpen()\n    setPopup(false)\n  }\n  const addedgemodal = () => {\n    handleOpenAddEdge()\n    setPopdown(true)\n  }\n\n  const logout = () => {\n    dispatch(OauthLogout())\n    history.push('/')\n  }\n\n  return (\n    <>\n      <nav\n        className='navbar'\n        style={{\n          backgroundColor: 'rgb(32,32,32)',\n          width: '100%',\n          height: 70,\n          display: 'flex',\n          justifyContent: 'space-between',\n          alignItems: 'center',\n        }}\n      >\n        <div style={{ display: 'flex' }}>\n          <IconButton\n            className='menuicon'\n            onClick={() => setVisiblity((visiblity) => !visiblity)}\n            color='inherit'\n            aria-label='open drawer'\n          >\n            <MenuIcon style={{ color: 'grey' }} />\n          </IconButton>\n          <h3\n            className='netbook'\n            style={{ color: 'white', display: 'flex', alignItems: 'center' }}\n          >\n            Netbook\n          </h3>\n        </div>\n        <div className='filterfield'>\n          <TextField\n            style={{\n              color: 'white',\n              backgroundColor: 'rgb(18,18,18)',\n              display: 'flex',\n            }}\n            label='Filter'\n            fullWidth\n            margin='normal'\n            // onChange={}\n            size='small'\n            variant='outlined'\n            InputProps={{\n              className: classes.multilineColor,\n\n              endAdornment: (\n                <InputAdornment position='end'>\n                  <SearchIcon />\n                </InputAdornment>\n              ),\n            }}\n          />\n        </div>\n\n        <div className='gbtn' style={{ display: 'flex', alignItems: 'center' }}>\n          <GoogleLogout\n            className='gg'\n            color='white'\n            theme='dark'\n            clientId='542443202716-1162el1e1nqk02h64h08frl40vsl5hgp.apps.googleusercontent.com'\n            buttonText='Logout'\n            onLogoutSuccess={logout}\n          ></GoogleLogout>\n        </div>\n      </nav>\n\n      <div\n        style={{\n          display: 'flex',\n          flexDirection: 'row',\n          justifyContent: 'space-between',\n          height: 'calc(100vh - 70px)',\n          backgroundColor: 'rgba(230, 230, 230,1)',\n        }}\n      >\n        <div\n          className={visible ? 'showsidebar' : 'hidesidebar'}\n          style={{\n            marginTop: 15,\n            marginLeft: 12,\n            borderRadius: 8,\n\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'start',\n            height: 'calc(100vh - 100px)',\n            transition: '0.3s',\n            // position: 'absolute',\n            // zIndex: 1,\n            // height: '100vh',\n            // justifyContent: 'space-between',\n            backgroundColor: 'white',\n          }}\n        >\n          <div\n            className='firsticon'\n            style={{ display: 'flex', alignItems: 'center', marginTop: 10 }}\n          >\n            <IconButton color='inherit' aria-label='open drawer'>\n              <TimelineIcon style={{ color: 'grey' }} />\n            </IconButton>\n            <p className={visible ? 'slide' : 'hidetext'}>Graph View</p>\n          </div>\n          <div\n            onClick={showmodal}\n            style={{ display: 'flex', alignItems: 'center' }}\n          >\n            <IconButton color='inherit' aria-label='open drawer'>\n              <AddIcon style={{ color: 'grey' }} />\n            </IconButton>\n            <p className={visible ? 'slide' : 'hidetext'}>Add Node</p>\n          </div>\n          <div\n            onClick={addedgemodal}\n            style={{ display: 'flex', alignItems: 'center' }}\n          >\n            <IconButton color='inherit' aria-label='open drawer'>\n              <TrendingFlatIcon style={{ color: 'grey' }} />\n            </IconButton>\n            <p className={visible ? 'slide' : 'hidetext'}>Add Edge</p>\n          </div>\n          <div style={{ display: 'flex', alignItems: 'center' }}>\n            <IconButton color='inherit' aria-label='open drawer'>\n              <SearchIcon style={{ color: 'grey' }} />\n            </IconButton>\n            <p className={visible ? 'slide' : 'hidetext'}>Queries</p>\n          </div>\n          <div style={{ display: 'flex', alignItems: 'center' }}>\n            <IconButton color='inherit' aria-label='open drawer'>\n              <FormatListBulletedIcon style={{ color: 'grey' }} />\n            </IconButton>\n            <p className={visible ? 'slide' : 'hidetext'}>Feed View</p>\n          </div>\n          <div style={{ display: 'flex', alignItems: 'center' }}>\n            <IconButton color='inherit' aria-label='open drawer'>\n              <PersonIcon style={{ color: 'grey' }} />\n            </IconButton>\n            <p className={visible ? 'slide' : 'hidetext'}>Profile</p>\n          </div>\n        </div>\n        <Modal\n          open={open}\n          onClose={handleClose}\n          aria-labelledby='simple-modal-title'\n        >\n          {body}\n        </Modal>\n        <Modal\n          open={openViewNode}\n          onClose={handleClose}\n          aria-labelledby='simple-modal-title'\n        >\n          {boddy}\n        </Modal>\n        <Modal\n          open={openAddEdge}\n          onClose={handleClose}\n          aria-labelledby='simple-modal-title'\n        >\n          {bodddy}\n        </Modal>\n        <Modal\n          open={openViewEdge}\n          onClose={handleClose}\n          aria-labelledby='simple-modal-title'\n        >\n          {boddddy}\n        </Modal>\n        <div className='graph'>\n          <Graph\n            id='graph-id' // id is mandatory\n            data={data}\n            config={myConfig}\n            onClickNode={onClickNode}\n            onClickLink={onClickLink}\n          />\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default Links\n","/Users/black_trojan/Desktop/netbook-client/src/constants/oauthConstant.js",[],"/Users/black_trojan/Desktop/netbook-client/src/constants/nodeConstant.js",[],"/Users/black_trojan/Desktop/netbook-client/src/actions/oauthAction.js",[],"/Users/black_trojan/Desktop/netbook-client/src/actions/nodeAction.js",[],{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","severity":1,"message":"99","line":7,"column":11,"nodeType":"100","messageId":"101","endLine":7,"endColumn":18},{"ruleId":"98","severity":1,"message":"102","line":7,"column":27,"nodeType":"100","messageId":"101","endLine":7,"endColumn":32},{"ruleId":"98","severity":1,"message":"103","line":3,"column":10,"nodeType":"100","messageId":"101","endLine":3,"endColumn":14},{"ruleId":"98","severity":1,"message":"104","line":4,"column":8,"nodeType":"100","messageId":"101","endLine":4,"endColumn":17},{"ruleId":"98","severity":1,"message":"99","line":12,"column":11,"nodeType":"100","messageId":"101","endLine":12,"endColumn":18},{"ruleId":"98","severity":1,"message":"105","line":12,"column":20,"nodeType":"100","messageId":"101","endLine":12,"endColumn":25},{"ruleId":"98","severity":1,"message":"102","line":12,"column":27,"nodeType":"100","messageId":"101","endLine":12,"endColumn":32},{"ruleId":"98","severity":1,"message":"106","line":18,"column":8,"nodeType":"100","messageId":"101","endLine":18,"endColumn":22},{"ruleId":"98","severity":1,"message":"107","line":21,"column":8,"nodeType":"100","messageId":"101","endLine":21,"endColumn":13},{"ruleId":"98","severity":1,"message":"108","line":23,"column":16,"nodeType":"100","messageId":"101","endLine":23,"endColumn":25},{"ruleId":"98","severity":1,"message":"109","line":25,"column":3,"nodeType":"100","messageId":"101","endLine":25,"endColumn":16},{"ruleId":"98","severity":1,"message":"110","line":36,"column":39,"nodeType":"100","messageId":"101","endLine":36,"endColumn":48},{"ruleId":"98","severity":1,"message":"111","line":40,"column":10,"nodeType":"100","messageId":"101","endLine":40,"endColumn":13},{"ruleId":"98","severity":1,"message":"112","line":46,"column":10,"nodeType":"100","messageId":"101","endLine":46,"endColumn":14},{"ruleId":"98","severity":1,"message":"113","line":46,"column":16,"nodeType":"100","messageId":"101","endLine":46,"endColumn":23},{"ruleId":"98","severity":1,"message":"114","line":52,"column":10,"nodeType":"100","messageId":"101","endLine":52,"endColumn":19},{"ruleId":"98","severity":1,"message":"115","line":52,"column":21,"nodeType":"100","messageId":"101","endLine":52,"endColumn":33},{"ruleId":"98","severity":1,"message":"116","line":53,"column":10,"nodeType":"100","messageId":"101","endLine":53,"endColumn":15},{"ruleId":"98","severity":1,"message":"117","line":54,"column":10,"nodeType":"100","messageId":"101","endLine":54,"endColumn":17},{"ruleId":"98","severity":1,"message":"118","line":56,"column":10,"nodeType":"100","messageId":"101","endLine":56,"endColumn":21},{"ruleId":"98","severity":1,"message":"119","line":66,"column":20,"nodeType":"100","messageId":"101","endLine":66,"endColumn":32},{"ruleId":"98","severity":1,"message":"120","line":66,"column":48,"nodeType":"100","messageId":"101","endLine":66,"endColumn":58},{"ruleId":"98","severity":1,"message":"99","line":69,"column":11,"nodeType":"100","messageId":"101","endLine":69,"endColumn":18},{"ruleId":"98","severity":1,"message":"121","line":69,"column":20,"nodeType":"100","messageId":"101","endLine":69,"endColumn":24},{"ruleId":"98","severity":1,"message":"122","line":69,"column":33,"nodeType":"100","messageId":"101","endLine":69,"endColumn":41},{"ruleId":"98","severity":1,"message":"123","line":71,"column":20,"nodeType":"100","messageId":"101","endLine":71,"endColumn":31},{"ruleId":"98","severity":1,"message":"124","line":71,"column":47,"nodeType":"100","messageId":"101","endLine":71,"endColumn":53},{"ruleId":"125","severity":1,"message":"126","line":79,"column":6,"nodeType":"127","endLine":79,"endColumn":8,"suggestions":"128"},{"ruleId":"129","severity":1,"message":"130","line":252,"column":19,"nodeType":"131","endLine":252,"endColumn":41},{"ruleId":"129","severity":1,"message":"130","line":263,"column":19,"nodeType":"131","endLine":263,"endColumn":42},{"ruleId":"129","severity":1,"message":"130","line":274,"column":19,"nodeType":"131","endLine":274,"endColumn":41},{"ruleId":"98","severity":1,"message":"132","line":302,"column":9,"nodeType":"100","messageId":"101","endLine":302,"endColumn":19},{"ruleId":"98","severity":1,"message":"133","line":587,"column":9,"nodeType":"100","messageId":"101","endLine":587,"endColumn":25},{"ruleId":"98","severity":1,"message":"134","line":591,"column":9,"nodeType":"100","messageId":"101","endLine":591,"endColumn":25},"no-native-reassign",["135"],"no-negated-in-lhs",["136"],"no-unused-vars","'loading' is assigned a value but never used.","Identifier","unusedVar","'error' is assigned a value but never used.","'Grid' is defined but never used.","'googleimg' is defined but never used.","'oauth' is assigned a value but never used.","'FormHelperText' is defined but never used.","'Alert' is defined but never used.","'Container' is defined but never used.","'ThemeProvider' is defined but never used.","'Edgefetch' is defined but never used.","'hid' is assigned a value but never used.","'visi' is assigned a value but never used.","'setVisi' is assigned a value but never used.","'openPanel' is assigned a value but never used.","'setOpenPanel' is assigned a value but never used.","'popup' is assigned a value but never used.","'popdown' is assigned a value but never used.","'sidebarOpen' is assigned a value but never used.","'oauthloading' is assigned a value but never used.","'oautherror' is assigned a value but never used.","'node' is assigned a value but never used.","'noderror' is assigned a value but never used.","'nodeloading' is assigned a value but never used.","'errror' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'oauth._id'. Either include them or remove the dependency array.","ArrayExpression",["137"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'blackTheme' is assigned a value but never used.","'showtheVisiblity' is assigned a value but never used.","'onSetSidebarOpen' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"138","fix":"139"},"Update the dependencies array to be: [dispatch, oauth._id]",{"range":"140","text":"141"},[3405,3407],"[dispatch, oauth._id]"]