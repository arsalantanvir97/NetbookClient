[{"E:\\mob-app1\\netbook-client\\src\\index.js":"1","E:\\mob-app1\\netbook-client\\src\\reportWebVitals.js":"2","E:\\mob-app1\\netbook-client\\src\\App.js":"3","E:\\mob-app1\\netbook-client\\src\\theme.js":"4","E:\\mob-app1\\netbook-client\\src\\store.js":"5","E:\\mob-app1\\netbook-client\\src\\screens\\Home.js":"6","E:\\mob-app1\\netbook-client\\src\\screens\\Profile.js":"7","E:\\mob-app1\\netbook-client\\src\\screens\\Query.js":"8","E:\\mob-app1\\netbook-client\\src\\components\\PublicRoute.js":"9","E:\\mob-app1\\netbook-client\\src\\screens\\Payment.js":"10","E:\\mob-app1\\netbook-client\\src\\components\\PrivateRoute.js":"11","E:\\mob-app1\\netbook-client\\src\\screens\\FeedView.js":"12","E:\\mob-app1\\netbook-client\\src\\reducers\\oauthReducer.js":"13","E:\\mob-app1\\netbook-client\\src\\components\\HomePage.js":"14","E:\\mob-app1\\netbook-client\\src\\reducers\\nodeReducer.js":"15","E:\\mob-app1\\netbook-client\\src\\screens\\Links.js":"16","E:\\mob-app1\\netbook-client\\src\\components\\Sidebar.js":"17","E:\\mob-app1\\netbook-client\\src\\components\\CardInput.js":"18","E:\\mob-app1\\netbook-client\\src\\constants\\nodeConstant.js":"19","E:\\mob-app1\\netbook-client\\src\\actions\\oauthAction.js":"20","E:\\mob-app1\\netbook-client\\src\\constants\\oauthConstant.js":"21","E:\\mob-app1\\netbook-client\\src\\actions\\nodeAction.js":"22","E:\\mob-app1\\netbook-client\\src\\components\\Navbar.js":"23"},{"size":720,"mtime":1612859642697,"results":"24","hashOfConfig":"25"},{"size":375,"mtime":1612859642713,"results":"26","hashOfConfig":"25"},{"size":1254,"mtime":1613825070645,"results":"27","hashOfConfig":"25"},{"size":176,"mtime":1612859642791,"results":"28","hashOfConfig":"25"},{"size":1829,"mtime":1614086177135,"results":"29","hashOfConfig":"25"},{"size":2371,"mtime":1614089179491,"results":"30","hashOfConfig":"25"},{"size":7269,"mtime":1616768029133,"results":"31","hashOfConfig":"25"},{"size":7955,"mtime":1616767952772,"results":"32","hashOfConfig":"25"},{"size":484,"mtime":1612860464603,"results":"33","hashOfConfig":"25"},{"size":16554,"mtime":1615880061442,"results":"34","hashOfConfig":"25"},{"size":480,"mtime":1612860520503,"results":"35","hashOfConfig":"25"},{"size":16183,"mtime":1616761332958,"results":"36","hashOfConfig":"25"},{"size":1487,"mtime":1616766771146,"results":"37","hashOfConfig":"25"},{"size":6541,"mtime":1615637580895,"results":"38","hashOfConfig":"25"},{"size":26097,"mtime":1616060786189,"results":"39","hashOfConfig":"25"},{"size":54602,"mtime":1616760410105,"results":"40","hashOfConfig":"25"},{"size":2840,"mtime":1615562971515,"results":"41","hashOfConfig":"25"},{"size":597,"mtime":1613824454082,"results":"42","hashOfConfig":"25"},{"size":2126,"mtime":1616052561241,"results":"43","hashOfConfig":"25"},{"size":2754,"mtime":1616767727199,"results":"44","hashOfConfig":"25"},{"size":580,"mtime":1615637607597,"results":"45","hashOfConfig":"25"},{"size":11947,"mtime":1616742591917,"results":"46","hashOfConfig":"25"},{"size":13455,"mtime":1615645902624,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"1gqpamk",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"50"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"50"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"50"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"50"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"50"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"50"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"50"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"50"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":46,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"50"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"50"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"50"},"E:\\mob-app1\\netbook-client\\src\\index.js",[],["106","107"],"E:\\mob-app1\\netbook-client\\src\\reportWebVitals.js",[],"E:\\mob-app1\\netbook-client\\src\\App.js",["108"],"import React from 'react'\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\r\nimport Home from './screens/Home'\r\nimport Links from './screens/Links'\r\nimport PublicRoute from './components/PublicRoute'\r\nimport FeedView from './screens/FeedView'\r\nimport Profile from './screens/Profile'\r\nimport PrivateRoute from './components/PrivateRoute'\r\nimport Import from './screens/Query'\r\nimport Query from './screens/Query'\r\nimport HomePage from './components/HomePage'\r\nimport Payment from './screens/Payment'\r\nimport { Elements } from '@stripe/react-stripe-js'\r\nimport { loadStripe } from '@stripe/stripe-js'\r\nconst stripePromise = loadStripe('pk_test_IdCqGO7sona7aWZqqiXTs3MN00vl1vkEQa')\r\n\r\nconst App = () => {\r\n  return (\r\n    <Router>\r\n      <PublicRoute path='/' component={Home} exact />\r\n      <PrivateRoute path='/graph' component={Links} />\r\n      <PrivateRoute path='/feed' component={FeedView} />\r\n      <PrivateRoute path='/profile' component={Profile} />\r\n      <PrivateRoute path='/query' component={Query} />\r\n      <PrivateRoute path='/payment' component={Payment} />\r\n      <Elements stripe={stripePromise}>\r\n        <Route path='/homepage' component={HomePage} />\r\n      </Elements>\r\n    </Router>\r\n  )\r\n}\r\n\r\nexport default App\r\n","E:\\mob-app1\\netbook-client\\src\\theme.js",[],"E:\\mob-app1\\netbook-client\\src\\store.js",[],"E:\\mob-app1\\netbook-client\\src\\screens\\Home.js",["109","110","111","112","113"],"import React from 'react'\r\nimport GoogleLogin from 'react-google-login'\r\nimport { Grid, Container } from '@material-ui/core'\r\nimport googleimg from '../images/google.png'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport './home.css'\r\nimport { OauthLogin } from '../actions/oauthAction'\r\n\r\nconst Home = ({ history }) => {\r\n  const dispatch = useDispatch()\r\n  const packageid = '602f94f28be78a84324eeb1a'\r\n  const getOauth = useSelector((state) => state.getOauth)\r\n  const { loading, oauth, error } = getOauth\r\n  const resgoogle = (response) => {\r\n    console.log(response)\r\n    console.log(\r\n      response.profileObj.email,\r\n      response.profileObj.name,\r\n      response.profileObj.imageUrl,\r\n      response.tokenObj.access_token,\r\n      response.tokenObj.expires_at,\r\n      response.tokenObj.expires_in\r\n    )\r\n    console.log(response.profileObj)\r\n    if (response) {\r\n      dispatch(\r\n        OauthLogin(\r\n          response.profileObj.name,\r\n          response.profileObj.email,\r\n          response.profileObj.imageUrl,\r\n          response.tokenObj.access_token,\r\n          response.tokenObj.expires_in,\r\n          response.tokenObj.expires_at,\r\n          packageid\r\n        )\r\n      )\r\n      history.push('/graph')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div style={{ display: 'flex' }}>\r\n      <div className='hhh'>\r\n        <Container>\r\n          <div style={{ textAlign: 'center', height: 20 }}>\r\n            <h1>Netbook</h1>\r\n          </div>\r\n          <div\r\n            style={{\r\n              display: 'flex',\r\n              flexDirection: 'column',\r\n\r\n              justifyContent: 'center',\r\n              height: 'calc(100vh - 20px)',\r\n            }}\r\n          >\r\n            <h2>Login to your account</h2>\r\n            <div style={{ height: 15 }}></div>\r\n            <GoogleLogin\r\n              theme='dark'\r\n              className='button'\r\n              clientId='542443202716-1162el1e1nqk02h64h08frl40vsl5hgp.apps.googleusercontent.com'\r\n              buttonText='Login with Google'\r\n              onSuccess={resgoogle}\r\n              onFailure={resgoogle}\r\n              isSignedIn={true}\r\n              cookiePolicy={'single_host_origin'}\r\n            />\r\n          </div>\r\n        </Container>\r\n      </div>\r\n\r\n      <div style={{ flex: 1 }}>\r\n        <div className='img'></div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Home\r\n","E:\\mob-app1\\netbook-client\\src\\screens\\Profile.js",["114","115","116","117","118","119","120","121","122","123","124"],"E:\\mob-app1\\netbook-client\\src\\screens\\Query.js",["125","126","127","128","129","130","131","132","133","134","135","136","137","138","139"],"import React, { useState, useEffect } from 'react'\r\nimport { OauthLogout } from '../actions/oauthAction'\r\nimport FormControl from '@material-ui/core/FormControl'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport ClearIcon from '@material-ui/icons/Clear'\r\nimport InputLabel from '@material-ui/core/InputLabel'\r\nimport { Link } from 'react-router-dom'\r\nimport Select from '@material-ui/core/Select'\r\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize'\r\n\r\nimport './home.css'\r\nimport {\r\n  makeStyles,\r\n  ThemeProvider,\r\n  createMuiTheme,\r\n} from '@material-ui/core/styles'\r\nimport Navbar from '../components/Navbar'\r\nimport Sidebar from '../components/Sidebar'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport { AIQueriesfetch } from '../actions/oauthAction'\r\n\r\nimport {\r\n  Grid,\r\n  Container,\r\n  Modal,\r\n  TextField,\r\n  Button,\r\n  Fab,\r\n} from '@material-ui/core'\r\n\r\nconst Query = ({ props, history }) => {\r\n  const dispatch = useDispatch()\r\n\r\n  const [modalStyle] = useState(getModalStyle)\r\n  const [visible, setVisiblity] = useState(false)\r\n  const [query, setQuery] = useState([])\r\n  const [queryparams, setQueryparams] = useState('')\r\n  const [open, setOpen] = useState(false)\r\n  const getOauth = useSelector((state) => state.getOauth)\r\n  const { loading, oauth, error } = getOauth\r\n  const getNode = useSelector((state) => state.getNode)\r\n  const { loading: nodeloading, nodde, error: errror } = getNode\r\n  const { innerWidth, innerHeight } = window\r\n\r\n  function getModalStyle() {\r\n    const { innerWidth, innerHeight } = window\r\n\r\n    let top = 50,\r\n      left = innerWidth < 600 ? 0 : 50\r\n    return {\r\n      top: `${top}%`,\r\n      left: `${left}%`,\r\n      transform: `translate(-${left}%, -${top}%)`,\r\n    }\r\n  }\r\n\r\n  function getModalStyle() {\r\n    const { innerWidth, innerHeight } = window\r\n\r\n    let top = 50,\r\n      left = innerWidth < 600 ? 0 : 50\r\n    return {\r\n      top: `${top}%`,\r\n      left: `${left}%`,\r\n      transform: `translate(-${left}%, -${top}%)`,\r\n    }\r\n  }\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true)\r\n  }\r\n  const handleClose = () => {\r\n    setOpen(false)\r\n  }\r\n\r\n  useEffect(() => {\r\n    console.log('hhs', oauth)\r\n  }, [loading])\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n      position: 'absolute',\r\n      width: innerWidth > 600 ? 500 : '100%',\r\n\r\n      backgroundColor: theme.palette.background.paper,\r\n      // border: '2px solid #000',\r\n      boxShadow: theme.shadows[5],\r\n      padding: theme.spacing(2, 4, 3),\r\n      maxHeight: 'calc(100vh - 100px)',\r\n      overflow: 'auto !important',\r\n      top: '50%',\r\n    },\r\n    multilineColor: {\r\n      color: 'white',\r\n    },\r\n    formControl: {\r\n      // margin: theme.spacing(1),\r\n      minWidth: 120,\r\n      width: '100%',\r\n    },\r\n    selectEmpty: {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n    root: {\r\n      width: '100%',\r\n      '& > * + *': {\r\n        marginTop: theme.spacing(2),\r\n      },\r\n    },\r\n    rooot: {\r\n      position: 'fixed',\r\n      top: '50%',\r\n      left: '50%',\r\n      transform: 'translate(-50%, -50%)',\r\n    },\r\n    fieldroot: {\r\n      '& .MuiTextField-root': {\r\n        margin: theme.spacing(1),\r\n        width: '25ch',\r\n      },\r\n    },\r\n  }))\r\n\r\n  const classes = useStyles()\r\n  const logout = () => {\r\n    dispatch(OauthLogout())\r\n    history.push('/')\r\n  }\r\n\r\n  const body = (\r\n    <div style={modalStyle} className={classes.paper}>\r\n      <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n        <h2 style={{ textAlign: 'center' }} id='simple-modal-title'>\r\n          Limit Reached\r\n        </h2>\r\n        <IconButton\r\n          onClick={handleClose}\r\n          color='inherit'\r\n          aria-label='open drawer'\r\n          style={{ marginTop: -10, marginBottom: 10 }}\r\n        >\r\n          <ClearIcon style={{ color: 'grey' }} />\r\n        </IconButton>\r\n      </div>\r\n      <p style={{ fontWeight: 400, fontSize: 19 }}>\r\n        Please upgrade your subsciption limit has been reached,please upgrade or\r\n        wait for your quota limit to be refreshed\r\n      </p>\r\n      <div style={{ display: 'flex', justifyContent: 'center', marginTop: 20 }}>\r\n        <Link to='/payment'>\r\n          <Button\r\n            style={{ backgroundColor: 'rgb(32, 32, 32)', color: 'white' }}\r\n          >\r\n            Upgrade\r\n          </Button>\r\n        </Link>\r\n        <Button\r\n          onClick={handleClose}\r\n          style={{\r\n            backgroundColor: 'rgb(32, 32, 32)',\r\n            color: 'white',\r\n            marginLeft: '18px',\r\n          }}\r\n        >\r\n          Close\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  )\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    if (oauth?.AIQueries < oauth?.packageid?.AIQueries) {\r\n      console.log('submitted')\r\n      dispatch(AIQueriesfetch(oauth?._id, queryparams))\r\n    } else handleOpen()\r\n  }\r\n  console.log('he', oauth)\r\n\r\n  return (\r\n    <>\r\n      <Navbar setVisiblity={setVisiblity} logout={logout} />\r\n      <div\r\n        className='feedviewside'\r\n        style={{\r\n          display: 'flex',\r\n          flexDirection: 'row',\r\n          justifyContent: 'flex-start',\r\n          height: 'calc(100vh - 70px)',\r\n          backgroundColor: 'rgba(230, 230, 230,1)',\r\n        }}\r\n      >\r\n        <Sidebar visible={visible} />\r\n        <div\r\n          style={{\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n            flex: 1,\r\n          }}\r\n        >\r\n          <div className='queryform'>\r\n            <form onSubmit={submitHandler}>\r\n              <FormControl\r\n                className={classes.formControl}\r\n                variant='outlined'\r\n                size='small'\r\n              >\r\n                <InputLabel id='demo-simple-select-label'>Query</InputLabel>\r\n                <Select\r\n                  labelId='demo-simple-select-label'\r\n                  value={query}\r\n                  onChange={(e) => setQuery(e.target.value)}\r\n                >\r\n                  {/* {selectimport.map((si) => (\r\n                  // <MenuItem value={idd._id}>{idd.id}</MenuItem>\r\n                ))} */}\r\n                </Select>\r\n              </FormControl>\r\n\r\n              <div style={{ height: 9 }}></div>\r\n              <TextField\r\n                style={{ color: 'black', width: '100%', marginTop: 9 }}\r\n                id='outlined-basic'\r\n                size='small'\r\n                label='Query Params'\r\n                value={queryparams}\r\n                onChange={(e) => setQueryparams(e.target.value)}\r\n                variant='outlined'\r\n              />\r\n              <div style={{ height: 9 }}></div>\r\n              <TextField\r\n                style={{\r\n                  color: 'black',\r\n                  width: '100%',\r\n                  marginTop: 9,\r\n\r\n                  pointerEvents: 'none',\r\n                }}\r\n                className={classes.fieldroot}\r\n                id='outlined-multiline-static'\r\n                multiline\r\n                rows={4}\r\n                label='Waiting for response'\r\n                value={oauth.msg ? oauth?.msg?.message : null}\r\n                // defaultValue='Default Value'\r\n                variant='outlined'\r\n              />\r\n              <div style={{ height: 9 }}></div>\r\n              <div style={{ display: 'flex', justifyContent: 'flex-end' }}>\r\n                <Button\r\n                  type='submit'\r\n                  style={{\r\n                    backgroundColor: 'rgb(32,32,32)',\r\n                    color: 'white',\r\n                    marginTop: 9,\r\n                  }}\r\n                >\r\n                  Ask\r\n                </Button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <Modal\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby='simple-modal-title'\r\n      >\r\n        {body}\r\n      </Modal>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Query\r\n","E:\\mob-app1\\netbook-client\\src\\components\\PublicRoute.js",["140","141"],"import React from 'react'\r\nimport { Route, Redirect } from 'react-router-dom'\r\nimport { useSelector } from 'react-redux'\r\n\r\nconst PublicRoute = ({ component: Component, ...rest }) => {\r\n  const getOauth = useSelector((state) => state.getOauth)\r\n  const { loading, oauth, error } = getOauth\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        oauth ? <Redirect to='/graph' /> : <Component {...props} />\r\n      }\r\n    />\r\n  )\r\n}\r\n\r\nexport default PublicRoute\r\n","E:\\mob-app1\\netbook-client\\src\\screens\\Payment.js",["142","143","144","145","146","147","148","149","150","151","152"],"import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport ClearIcon from '@material-ui/icons/Clear'\r\nimport Card from '@material-ui/core/Card'\r\nimport CardActions from '@material-ui/core/CardActions'\r\nimport CardContent from '@material-ui/core/CardContent'\r\nimport { Route } from 'react-router-dom'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport CheckIcon from '@material-ui/icons/Check'\r\nimport StripeCheckout from 'react-stripe-checkout'\r\nimport CircularProgress from '@material-ui/core/CircularProgress'\r\nimport HomePage from '../components/HomePage'\r\nimport { Elements } from '@stripe/react-stripe-js'\r\nimport { loadStripe } from '@stripe/stripe-js'\r\nimport {\r\n  Grid,\r\n  Container,\r\n  Modal,\r\n  TextField,\r\n  Button,\r\n  Fab,\r\n} from '@material-ui/core'\r\nimport {\r\n  ThemeProvider,\r\n  createMuiTheme,\r\n  makeStyles,\r\n} from '@material-ui/core/styles'\r\n\r\nconst stripePromise = loadStripe('pk_test_IdCqGO7sona7aWZqqiXTs3MN00vl1vkEQa')\r\n\r\nconst Payment = () => {\r\n  const [paymentdata, setPaymentdata] = useState([])\r\n  const [showloader, setShowloader] = useState(true)\r\n  const premiumid = 'price_1IMpnpLSi7LM2Y4Gj69OcvqC'\r\n  const basicid = 'price_1IMazjLSi7LM2Y4Gg8zEo3FY'\r\n  const [open, setOpen] = useState(false)\r\n\r\n  const { innerWidth, innerHeight } = window\r\n  const [modalStyle] = useState(getModalStyle)\r\n\r\n  function getModalStyle() {\r\n    const { innerWidth, innerHeight } = window\r\n\r\n    let top = 50,\r\n      left = innerWidth < 600 ? 0 : 50\r\n    return {\r\n      top: `${top}%`,\r\n      left: `${left}%`,\r\n      transform: `translate(-${left}%, -${top}%)`,\r\n    }\r\n  }\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true)\r\n  }\r\n  const handleClose = () => {\r\n    setOpen(false)\r\n  }\r\n\r\n  useEffect(() => {\r\n    const paymentAPI = async () => {\r\n      const { data } = await axios.get(\r\n        'https://netbook-server.herokuapp.com/packages'\r\n      )\r\n      setPaymentdata(data)\r\n      console.log('apidata', data)\r\n      console.log('data', paymentdata)\r\n      if (data) {\r\n        setShowloader(false)\r\n      }\r\n    }\r\n\r\n    paymentAPI()\r\n  }, [])\r\n  const [paymentone, setPaymentone] = useState(paymentdata[1])\r\n  const useStyles = makeStyles((theme) => ({\r\n    bullet: {\r\n      display: 'inline-block',\r\n      margin: '0 2px',\r\n      transform: 'scale(0.8)',\r\n    },\r\n    title: {\r\n      fontSize: 14,\r\n    },\r\n    loaderroot: {\r\n      display: 'flex',\r\n      '& > * + *': {\r\n        marginLeft: theme.spacing(2),\r\n      },\r\n    },\r\n    pos: {\r\n      marginBottom: 12,\r\n    },\r\n    paper: {\r\n      position: 'absolute',\r\n      width: innerWidth > 600 ? 600 : '100%',\r\n      height: '400px',\r\n      backgroundColor: theme.palette.background.paper,\r\n      // border: '2px solid #000',\r\n      boxShadow: theme.shadows[5],\r\n      padding: theme.spacing(2, 4, 3),\r\n      maxHeight: 'calc(100vh - 200px)',\r\n      // overflow: 'auto !important',\r\n      top: '50%',\r\n    },\r\n    multilineColor: {\r\n      color: 'white',\r\n    },\r\n    formControl: {\r\n      // margin: theme.spacing(1),\r\n      minWidth: 120,\r\n      width: '100%',\r\n    },\r\n    selectEmpty: {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n    root: {\r\n      width: '100%',\r\n      '& > * + *': {\r\n        marginTop: theme.spacing(2),\r\n      },\r\n    },\r\n    rooot: {\r\n      position: 'fixed',\r\n      top: '50%',\r\n      left: '50%',\r\n      transform: 'translate(-50%, -50%)',\r\n    },\r\n  }))\r\n  const classes = useStyles()\r\n  const bull = <span className={classes.bullet}>•</span>\r\n  const handletoken = (token, addresses) => {\r\n    console.log(token, addresses)\r\n  }\r\n\r\n  const body = (\r\n    <div style={modalStyle} className={classes.paper}>\r\n      <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n        <h2 style={{ textAlign: 'center' }} id='simple-modal-title'>\r\n          Payment\r\n        </h2>\r\n        <IconButton\r\n          onClick={handleClose}\r\n          color='inherit'\r\n          aria-label='open drawer'\r\n          style={{ marginTop: -10, marginBottom: 10 }}\r\n        >\r\n          <ClearIcon style={{ color: 'grey' }} />\r\n        </IconButton>\r\n      </div>\r\n      <div style={{ marginTop: '-215px' }}>\r\n        <Elements stripe={stripePromise}>\r\n          <Route\r\n            render={({ history }) => (\r\n              <HomePage packageid={paymentone} history={history} />\r\n            )}\r\n          />\r\n        </Elements>\r\n      </div>\r\n    </div>\r\n  )\r\n\r\n  return (\r\n    <div className='pmtresp'>\r\n      {showloader ? (\r\n        <div className={classes.loaderroot}>\r\n          <CircularProgress\r\n            style={{\r\n              top: '50%',\r\n\r\n              position: 'absolute',\r\n              left: '50%',\r\n            }}\r\n          />\r\n        </div>\r\n      ) : (\r\n        <Container>\r\n          <Grid container spacing={3}>\r\n            <Grid item md={4} xs={12}>\r\n              <Card onClick={handleOpen} className='roooot'>\r\n                <Container>\r\n                  <CardContent>\r\n                    <Typography\r\n                      style={{\r\n                        fontSize: 25,\r\n                        textAlign: 'center',\r\n                        color: 'rgb(133,176,229)',\r\n                        fontWeight: 'normal',\r\n                        marginBottom: 15,\r\n                      }}\r\n                    >\r\n                      {paymentdata[0]?.type}\r\n                    </Typography>\r\n\r\n                    <Typography\r\n                      style={{\r\n                        position: 'relative',\r\n                        fontSize: 35,\r\n                        textAlign: 'center',\r\n                      }}\r\n                    >\r\n                      {' '}\r\n                      <span\r\n                        style={{ color: 'rgb(133,176,229)' }}\r\n                        className='euros'\r\n                      >\r\n                        €\r\n                      </span>\r\n                      {paymentdata[0]?.price}\r\n                      <span style={{ fontSize: 30 }}>/</span>\r\n                      <span className='month'>mo</span>\r\n                    </Typography>\r\n\r\n                    <div\r\n                      style={{\r\n                        display: 'flex',\r\n                        justifyContent: 'space-between',\r\n                        marginTop: 18,\r\n                      }}\r\n                    >\r\n                      {''}\r\n\r\n                      <div style={{ display: 'flex' }}>\r\n                        <CheckIcon\r\n                          style={{ marginRight: 20, color: 'rgb(133,176,229)' }}\r\n                        />\r\n                        <p style={{ fontSize: 15 }}>Nodes</p>\r\n                      </div>\r\n                      <p style={{ fontSize: 15 }}> {paymentdata[0]?.Nodes}</p>\r\n                    </div>\r\n                    <div\r\n                      style={{\r\n                        display: 'flex',\r\n                        justifyContent: 'space-between',\r\n                        marginTop: 18,\r\n                      }}\r\n                    >\r\n                      {''}\r\n\r\n                      <div style={{ display: 'flex' }}>\r\n                        <CheckIcon\r\n                          style={{ marginRight: 20, color: 'rgb(133,176,229)' }}\r\n                        />\r\n                        <p style={{ fontSize: 15 }}>Edges</p>\r\n                      </div>\r\n                      <p style={{ fontSize: 15 }}>{paymentdata[0]?.Edges}</p>\r\n                    </div>\r\n                    <div\r\n                      style={{\r\n                        display: 'flex',\r\n                        justifyContent: 'space-between',\r\n                        marginTop: 18,\r\n                      }}\r\n                    >\r\n                      {''}\r\n\r\n                      <div style={{ display: 'flex' }}>\r\n                        <CheckIcon\r\n                          style={{ marginRight: 20, color: 'rgb(133,176,229)' }}\r\n                        />\r\n                        <p style={{ fontSize: 15 }}>AI Queries</p>\r\n                      </div>\r\n                      <p style={{ fontSize: 15 }}>\r\n                        {paymentdata[0]?.AIQueries}\r\n                      </p>\r\n                    </div>\r\n                  </CardContent>\r\n                  <CardActions>\r\n                    <Button size='small'></Button>\r\n                  </CardActions>\r\n                </Container>\r\n              </Card>\r\n            </Grid>\r\n            <Grid item md={4} xs={12}>\r\n              <Card\r\n                onClick={() => {\r\n                  setPaymentone(basicid)\r\n                  console.log('one', paymentone)\r\n                  handleOpen()\r\n                }}\r\n                className='roooot'\r\n              >\r\n                <Container>\r\n                  <CardContent>\r\n                    <Typography\r\n                      style={{\r\n                        fontSize: 25,\r\n                        textAlign: 'center',\r\n                        color: 'rgb(230,77,95)',\r\n                        fontWeight: 'normal',\r\n                        marginBottom: 15,\r\n                      }}\r\n                    >\r\n                      {paymentdata[1]?.type}\r\n                    </Typography>\r\n\r\n                    <Typography\r\n                      style={{\r\n                        position: 'relative',\r\n                        fontSize: 35,\r\n                        textAlign: 'center',\r\n                      }}\r\n                    >\r\n                      {' '}\r\n                      <span\r\n                        style={{ color: 'rgb(230,77,95)' }}\r\n                        className='euros'\r\n                      >\r\n                        €\r\n                      </span>\r\n                      {paymentdata[1]?.price}\r\n                      <span style={{ fontSize: 30 }}>/</span>\r\n                      <span className='month'>mo</span>\r\n                    </Typography>\r\n\r\n                    <div\r\n                      style={{\r\n                        display: 'flex',\r\n                        justifyContent: 'space-between',\r\n                        marginTop: 18,\r\n                      }}\r\n                    >\r\n                      {''}\r\n                      <div style={{ display: 'flex' }}>\r\n                        <CheckIcon\r\n                          style={{ marginRight: 20, color: 'rgb(230,77,95)' }}\r\n                        />\r\n                        <p style={{ fontSize: 15 }}>Nodes</p>\r\n                      </div>\r\n                      <p style={{ fontSize: 15 }}>{paymentdata[1]?.Nodes}</p>\r\n                    </div>\r\n                    <div\r\n                      style={{\r\n                        display: 'flex',\r\n                        justifyContent: 'space-between',\r\n                        marginTop: 18,\r\n                      }}\r\n                    >\r\n                      {''}\r\n\r\n                      <div style={{ display: 'flex' }}>\r\n                        <CheckIcon\r\n                          style={{ marginRight: 20, color: 'rgb(230,77,95)' }}\r\n                        />\r\n                        <p style={{ fontSize: 15 }}>Edges</p>\r\n                      </div>\r\n                      <p style={{ fontSize: 15 }}>{paymentdata[1]?.Edges}</p>\r\n                    </div>\r\n                    <div\r\n                      style={{\r\n                        display: 'flex',\r\n                        justifyContent: 'space-between',\r\n                        marginTop: 18,\r\n                      }}\r\n                    >\r\n                      {''}\r\n\r\n                      <div style={{ display: 'flex' }}>\r\n                        <CheckIcon\r\n                          style={{ marginRight: 20, color: 'rgb(230,77,95)' }}\r\n                        />\r\n                        <p style={{ fontSize: 15 }}>AI Queries</p>\r\n                      </div>\r\n                      <p style={{ fontSize: 15 }}>\r\n                        {paymentdata[1]?.AIQueries}\r\n                      </p>\r\n                    </div>\r\n                  </CardContent>\r\n                  <CardActions>\r\n                    <Button size='small'></Button>\r\n                  </CardActions>\r\n                </Container>\r\n              </Card>\r\n            </Grid>\r\n            <Grid item md={4} xs={12}>\r\n              <Card\r\n                onClick={() => {\r\n                  setPaymentone(premiumid)\r\n                  console.log('second', paymentone)\r\n                  handleOpen()\r\n                }}\r\n                className='roooot'\r\n              >\r\n                <Container>\r\n                  <CardContent>\r\n                    <Typography\r\n                      style={{\r\n                        fontSize: 25,\r\n                        textAlign: 'center',\r\n                        color: 'rgb(170,219,124)',\r\n                        fontWeight: 'normal',\r\n                        marginBottom: 15,\r\n                      }}\r\n                    >\r\n                      {paymentdata[2]?.type}\r\n                    </Typography>\r\n\r\n                    <Typography\r\n                      style={{\r\n                        position: 'relative',\r\n                        fontSize: 35,\r\n                        textAlign: 'center',\r\n                      }}\r\n                    >\r\n                      {' '}\r\n                      <span\r\n                        style={{ color: 'rgb(170,219,124)' }}\r\n                        className='euros'\r\n                      >\r\n                        €\r\n                      </span>\r\n                      {paymentdata[2]?.price}\r\n                      <span style={{ fontSize: 30 }}>/</span>\r\n                      <span className='month'>mo</span>\r\n                    </Typography>\r\n\r\n                    <div\r\n                      style={{\r\n                        display: 'flex',\r\n                        justifyContent: 'space-between',\r\n                        marginTop: 18,\r\n                      }}\r\n                    >\r\n                      {''}\r\n\r\n                      <div style={{ display: 'flex' }}>\r\n                        <CheckIcon\r\n                          style={{ marginRight: 20, color: 'rgb(170,219,124)' }}\r\n                        />\r\n                        <p style={{ fontSize: 15 }}>Nodes</p>\r\n                      </div>\r\n                      <p style={{ fontSize: 15 }}>{paymentdata[2]?.Nodes}</p>\r\n                    </div>\r\n                    <div\r\n                      style={{\r\n                        display: 'flex',\r\n                        justifyContent: 'space-between',\r\n                        marginTop: 18,\r\n                      }}\r\n                    >\r\n                      {''}\r\n\r\n                      <div style={{ display: 'flex' }}>\r\n                        <CheckIcon\r\n                          style={{ marginRight: 20, color: 'rgb(170,219,124)' }}\r\n                        />\r\n                        <p style={{ fontSize: 15 }}>Edges</p>\r\n                      </div>\r\n                      <p style={{ fontSize: 15 }}>{paymentdata[2]?.Edges}</p>\r\n                    </div>\r\n                    <div\r\n                      style={{\r\n                        display: 'flex',\r\n                        justifyContent: 'space-between',\r\n                        marginTop: 18,\r\n                      }}\r\n                    >\r\n                      {''}\r\n\r\n                      <div style={{ display: 'flex' }}>\r\n                        <CheckIcon\r\n                          style={{ marginRight: 20, color: 'rgb(170,219,124)' }}\r\n                        />\r\n                        <p style={{ fontSize: 15 }}>AI Queries</p>\r\n                      </div>\r\n                      <p style={{ fontSize: 15 }}>\r\n                        {paymentdata[2]?.AIQueries}\r\n                      </p>\r\n                    </div>\r\n                  </CardContent>\r\n                  <CardActions>\r\n                    <Button size='small'></Button>\r\n                  </CardActions>\r\n                </Container>\r\n              </Card>\r\n            </Grid>\r\n          </Grid>\r\n          <Modal\r\n            open={open}\r\n            onClose={handleClose}\r\n            aria-labelledby='simple-modal-title'\r\n          >\r\n            {body}\r\n          </Modal>\r\n          {/* {paymentone ? (\r\n            <Elements stripe={stripePromise}>\r\n              <HomePage packageid={paymentone} />\r\n            </Elements>\r\n          ) : null} */}\r\n        </Container>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Payment\r\n","E:\\mob-app1\\netbook-client\\src\\components\\PrivateRoute.js",["153","154"],"import React from 'react'\r\nimport { Route, Redirect } from 'react-router-dom'\r\nimport { useSelector } from 'react-redux'\r\n\r\nconst PublicRoute = ({ component: Component, ...rest }) => {\r\n  const getOauth = useSelector((state) => state.getOauth)\r\n  const { loading, oauth, error } = getOauth\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        !oauth ? <Redirect to='/' /> : <Component {...props} />\r\n      }\r\n    />\r\n  )\r\n}\r\n\r\nexport default PublicRoute\r\n","E:\\mob-app1\\netbook-client\\src\\screens\\FeedView.js",["155","156","157","158","159","160","161","162","163","164"],"E:\\mob-app1\\netbook-client\\src\\reducers\\oauthReducer.js",["165","166"],"E:\\mob-app1\\netbook-client\\src\\components\\HomePage.js",["167","168","169","170"],"import React, { useState } from 'react'\r\nimport axios from 'axios'\r\n// MUI Components\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport Button from '@material-ui/core/Button'\r\nimport Card from '@material-ui/core/Card'\r\nimport CardContent from '@material-ui/core/CardContent'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport CircularProgress from '@material-ui/core/CircularProgress'\r\nimport { OauthUpdatePackageid } from '../actions/oauthAction'\r\n// stripe\r\nimport { useStripe, useElements, CardElement } from '@stripe/react-stripe-js'\r\n// Util imports\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n// Custom Components\r\nimport CardInput from './CardInput'\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    maxWidth: 500,\r\n    margin: '35vh auto',\r\n    boxShadow: '3px 3px 5px -3px rgba(0, 0, 0, 0.2)',\r\n  },\r\n  content: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignContent: 'flex-start',\r\n  },\r\n  div: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    alignContent: 'flex-start',\r\n    justifyContent: 'space-between',\r\n  },\r\n  button: {\r\n    margin: '2em auto 1em',\r\n  },\r\n  rooot: {\r\n    position: 'fixed',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n  },\r\n})\r\n\r\nfunction HomePage({ history, packageid }) {\r\n  const classes = useStyles()\r\n  // State\r\n  const [email, setEmail] = useState('')\r\n  const [resloading, setResloading] = useState(false)\r\n  const stripe = useStripe()\r\n  const elements = useElements()\r\n  const dispatch = useDispatch()\r\n  const getOauth = useSelector((state) => state.getOauth)\r\n  const { loading, oauth, error } = getOauth\r\n  const handleSubmitPay = async (event) => {\r\n    if (!stripe || !elements) {\r\n      // Stripe.js has not yet loaded.\r\n      // Make sure to disable form submission until Stripe.js has loaded.\r\n      return\r\n    }\r\n\r\n    const res = await axios.post(\r\n      'https://netbook-server.herokuapp.com/packages',\r\n      {\r\n        email: email,\r\n      }\r\n    )\r\n\r\n    const clientSecret = res.data['client_secret']\r\n\r\n    const result = await stripe.confirmCardPayment(clientSecret, {\r\n      payment_method: {\r\n        card: elements.getElement(CardElement),\r\n        billing_details: {\r\n          email: email,\r\n        },\r\n      },\r\n    })\r\n\r\n    if (result.error) {\r\n      // Show error to your customer (e.g., insufficient funds)\r\n      console.log(result.error.message)\r\n    } else {\r\n      // The payment has been processed!\r\n      if (result.paymentIntent.status === 'succeeded') {\r\n        console.log('Money is in the bank!')\r\n        // Show a success message to your customer\r\n        // There's a risk of the customer closing the window before callback\r\n        // execution. Set up a webhook or plugin to listen for the\r\n        // payment_intent.succeeded event that handles any business critical\r\n        // post-payment actions.\r\n      }\r\n    }\r\n  }\r\n\r\n  const handleSubmitSub = async (event) => {\r\n    let abc\r\n    if (!stripe || !elements) {\r\n      // Stripe.js has not yet loaded.\r\n      // Make sure to disable form submission until Stripe.js has loaded.\r\n      return\r\n    }\r\n\r\n    const result = await stripe.createPaymentMethod({\r\n      type: 'card',\r\n      card: elements.getElement(CardElement),\r\n      billing_details: {\r\n        email: email,\r\n      },\r\n    })\r\n\r\n    if (result.error) {\r\n      console.log(result.error.message)\r\n    } else {\r\n      setResloading(true)\r\n      const res = await axios.post(\r\n        'https://netbook-server.herokuapp.com/packages/subscription',\r\n        { payment_method: result.paymentMethod.id, email: email, packageid }\r\n      )\r\n      // eslint-disable-next-line camelcase\r\n      const { client_secret, status } = res.data\r\n\r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          // 'Access-Control-Allow-Origin': '*',\r\n        },\r\n      }\r\n\r\n      if (packageid === 'price_1IMpnpLSi7LM2Y4Gj69OcvqC') {\r\n        abc = '602f98ff8be78a84324eeb1c'\r\n      } else if (packageid === 'price_1IMazjLSi7LM2Y4Gg8zEo3FY') {\r\n        abc = '602f98868be78a84324eeb1b'\r\n      }\r\n      if (res) {\r\n        setResloading(false)\r\n      }\r\n      packageid = abc\r\n      console.log('packageid', packageid)\r\n      // const { data } = await axios.put(\r\n      //   `http://localhost:5000/items/up/${oauth._id}`,\r\n      //   { packageid },\r\n      //   config\r\n      // )\r\n\r\n      dispatch(OauthUpdatePackageid(oauth._id, packageid))\r\n      // console.log('updatedpackagedata', data)\r\n      if (res) {\r\n        history.push('/profile')\r\n      }\r\n      if (status === 'requires_action') {\r\n        stripe.confirmCardPayment(client_secret).then(function (result) {\r\n          if (result.error) {\r\n            console.log('There was an issue!')\r\n            console.log(result.error)\r\n            // Display error message in your UI.\r\n            // The card was declined (i.e. insufficient funds, card has expired, etc)\r\n          } else {\r\n            console.log('You got the money!')\r\n            // Show a success message to your customer\r\n          }\r\n        })\r\n      } else {\r\n        console.log('You got the money!', res.data)\r\n\r\n        // No additional information was needed\r\n        // Show a success message to your customer\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Card className={classes.root}>\r\n        <CardContent className={classes.content}>\r\n          <TextField\r\n            label='Email'\r\n            id='outlined-email-input'\r\n            helperText={`Email you'll recive updates and receipts on`}\r\n            margin='normal'\r\n            variant='outlined'\r\n            type='email'\r\n            required\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            fullWidth\r\n          />\r\n          <CardInput />\r\n          <div className={classes.div}>\r\n            {/* <Button\r\n            variant='contained'\r\n            color='primary'\r\n            className={classes.button}\r\n            onClick={handleSubmitPay}\r\n          >\r\n            Pay\r\n          </Button> */}\r\n            <Button\r\n              variant='contained'\r\n              color='primary'\r\n              className={classes.button}\r\n              onClick={handleSubmitSub}\r\n            >\r\n              Subscribe\r\n            </Button>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n      {resloading ? (\r\n        <div className={classes.rooot}>\r\n          <CircularProgress />\r\n        </div>\r\n      ) : null}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default HomePage\r\n","E:\\mob-app1\\netbook-client\\src\\reducers\\nodeReducer.js",["171","172","173","174","175","176","177","178","179","180","181","182","183","184","185","186","187","188","189","190","191","192","193"],"import { indigo } from '@material-ui/core/colors'\r\nimport {\r\n  GET_NODE_FAIL,\r\n  GET_NODE_REQUEST,\r\n  GET_NODE_SUCCESS,\r\n  GET_NODE_SUCCESSES,\r\n  GET_EDGE_SUCCESSES,\r\n  HAVE_NODE_REQUEST,\r\n  SEARCH_NODE_OR,\r\n  CLEAR_EDGE,\r\n  HAVE_NODE_SUCCESS,\r\n  HAVE_NODE_FAIL,\r\n  SEARCH_NODE_EDGE,\r\n  GET_EDGE_FAIL,\r\n  GET_EDGE_REQUEST,\r\n  SEARCH_EDGE_OR,\r\n  CLEAR_NODE,\r\n  GET_EDGE_SUCCESS,\r\n  HAVE_EDGE_FAIL,\r\n  SEARCH_EDGE_REQUEST,\r\n  SEARCH_EDGE_SUCCESS,\r\n  SEARCH_NODE_FAIL,\r\n  SEARCH_NODE_REQUEST,\r\n  SEARCH_EDGE_AND,\r\n  SEARCH_NODE_AND,\r\n  SEARCH_NODE_SUCCESS,\r\n  SEARCH_EDGE_FAIL,\r\n  HAVE_EDGE_REQUEST,\r\n  HAVE_EDGE_SUCCESS,\r\n  HAVE_NODE_SUCCESESS,\r\n  UPDATE_EDGE_FAIL,\r\n  UPDATE_EDGE_REQUEST,\r\n  UPDATE_EDGE_SUCCESS,\r\n  UPDATE_NODE_FAIL,\r\n  UPDATE_NODE_REQUEST,\r\n  UPDATE_NODE_SUCCESS,\r\n  REMOVE_EDGE_FAIL,\r\n  REMOVE_EDGE_REQUEST,\r\n  REMOVE_EDGE_SUCCESS,\r\n  REMOVE_NODE_FAIL,\r\n  REMOVE_NODE_REQUEST,\r\n  REMOVE_NODE_SUCCESS,\r\n  GET_AIQUERIES_FAIL,\r\n  GET_AIQUERIES_REQUEST,\r\n  GET_AIQUERIES_SUCCESS,\r\n} from '../constants/nodeConstant'\r\n\r\n// export const putNodeReducer = (state = {}, action) => {\r\n//   switch (action.type) {\r\n//     case GET_NODE_REQUEST:\r\n//       return { loading: true }\r\n//     // case GET_NODE_SUCCESS:\r\n//     //   return { loading: false, node: action.payload }\r\n//     case GET_NODE_FAIL:\r\n//       return { loading: false, error: action.payload }\r\n//     default:\r\n//       return state\r\n//   }\r\n// }\r\n\r\nexport const getNodeReducer = (state = {}, action) => {\r\n  let checkedEdgeData\r\n  let checkedNodeData\r\n  switch (action.type) {\r\n    case HAVE_NODE_REQUEST:\r\n      return { ...state, loading: true }\r\n\r\n    case HAVE_NODE_SUCCESS:\r\n      console.log('action.payload', action.payload)\r\n      return { ...state, loading: false, nodde: action.payload }\r\n\r\n    case HAVE_NODE_SUCCESESS:\r\n      console.log('action.payload', action.payload.nodes, action.payload.links)\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        nodde: {\r\n          nodes: [...state.nodde.nodes, ...action.payload.nodes],\r\n          links: [...state.nodde.links, ...action.payload.links],\r\n        },\r\n      }\r\n    case GET_NODE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        nodde: {\r\n          ...state.nodde,\r\n          nodes: [...state.nodde.nodes, action.payload],\r\n        },\r\n        loading: false,\r\n      }\r\n    // case GET_NODE_SUCCESSES:\r\n    //   return {\r\n    //     ...state,\r\n    //     nodde: {\r\n    //       ...state.nodde,\r\n    //       nodes: [...state.nodde.nodes, ...action.payload],\r\n    //     },\r\n    //     loading: false,\r\n    //   }\r\n\r\n    case HAVE_NODE_FAIL:\r\n      return { loading: false, error: action.payload }\r\n\r\n    case UPDATE_NODE_REQUEST:\r\n      return { ...state, loading: true }\r\n\r\n    case UPDATE_NODE_SUCCESS:\r\n      const indexNode = state.nodde.nodes.findIndex(\r\n        (node) => node._id === action.payload._id\r\n      )\r\n      let newArrayNode = state.nodde.nodes\r\n\r\n      newArrayNode[indexNode] = action.payload\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        nodde: { ...state.nodde, nodes: newArrayNode },\r\n      }\r\n\r\n    case UPDATE_NODE_FAIL:\r\n      console.log('getting in update node failed')\r\n      return { loading: false, error: action.payload }\r\n\r\n    case REMOVE_NODE_REQUEST:\r\n      return { ...state, loading: true }\r\n\r\n    case SEARCH_NODE_SUCCESS:\r\n      let checkededge1\r\n      let checkednode1\r\n      // console.log('filtered node', state.filterednode)\r\n      const old = state.filterednode\r\n        ? state.filterednode\r\n        : state.nodde.nodes\r\n        ? state.nodde.nodes\r\n        : []\r\n      // const old = state.nodde.nodes\r\n      // console.log('filter node', filtered)\r\n      const filtered = old.filter((xd) => {\r\n        const regex = new RegExp(`${action.payload.text}`, 'gi')\r\n        const abc = xd.id.match(regex)\r\n        if (abc) {\r\n          return abc\r\n        } else {\r\n          return null\r\n        }\r\n      })\r\n      console.log('actionpayloadnode', action.payload)\r\n      const filtersedge = state.nodde.links.filter((xi, index) => {\r\n        let flag1 = false\r\n        let flag2 = false\r\n        let flag = false\r\n        for (let item of filtered) {\r\n          if (xi.target === item.id) {\r\n            flag1 = true\r\n            // console.log('abc', xi.target, item.id)\r\n          }\r\n          if (xi.source === item.id) {\r\n            flag2 = true\r\n            // console.log('bcs', xi.source, item.id)\r\n          }\r\n          if (flag1 === true && flag2 === true) flag = true\r\n        }\r\n        return flag\r\n      })\r\n      console.log('filtered -- >', filtersedge)\r\n      if (action.payload.checked === true) {\r\n        let checkedFilter = neighbourFilter(\r\n          state.nodde.nodes,\r\n          state.nodde.links,\r\n          filtered\r\n        )\r\n        checkedEdgeData = checkedFilter.edgechecked\r\n        checkedNodeData = checkedFilter.nodechecked\r\n        // checkededge1 = state.node.links.filter((si) => {\r\n        //   let flag1 = false\r\n        //   let flag2 = false\r\n        //   let flag = false\r\n        //   for (let item of filtered) {\r\n        //     if (xi.target === item.id) {\r\n        //       flag1 = true\r\n        //       // console.log('abc', xi.target, item.id)\r\n        //     }\r\n        //     if (xi.source === item.id) {\r\n        //       flag2 = true\r\n        //       // console.log('bcs', xi.source, item.id)\r\n        //     }\r\n        //     if (flag1 === true && flag2 === true) flag = true\r\n        //   }\r\n        //   return flag\r\n        // })\r\n        // console.log('checkededge', checkededge1)\r\n        // checkednode1 = state.nodde.nodes.filter((xi, index) => {\r\n        //   let flag = false\r\n        //   for (let item of checkededge1) {\r\n        //     if (item.source === xi.id || item.target === xi.id) {\r\n        //       flag = true\r\n        //     }\r\n        //   }\r\n        //   return flag\r\n        // })\r\n        // console.log('checkednode1', checkednode1)\r\n      }\r\n      return {\r\n        ...state,\r\n        filterednode: action.payload.checked ? checkedNodeData : filtered,\r\n        filterededge: action.payload.checked ? checkedEdgeData : filtersedge,\r\n      }\r\n\r\n    case SEARCH_EDGE_SUCCESS:\r\n      console.log('filter edge', state.filterededge)\r\n      let filter = state.filterededge\r\n        ? state.filterededge\r\n        : state.nodde.links\r\n        ? state.nodde.links\r\n        : []\r\n      console.log('filter object', filter)\r\n      filter = filter.filter((xxd, ind) => {\r\n        const regex = new RegExp(`${action.payload.text}`, 'gi')\r\n        const abc = xxd.tags.map((s) => {\r\n          return s.match(regex)\r\n        })\r\n        console.log('abc', abc)\r\n        return !abc.every((element) => element === null)\r\n      })\r\n      console.log('filtered result', filter)\r\n      const filtersnode = state.nodde.nodes.filter((xi, index) => {\r\n        let flag = false\r\n        for (let item of filter) {\r\n          if (item.source === xi.id || item.target === xi.id) {\r\n            flag = true\r\n          }\r\n        }\r\n        return flag\r\n      })\r\n      console.log('filternode -- >', filtersnode)\r\n      if (action.payload.checked === true) {\r\n        let checkedFilter = neighbourFilter(\r\n          state.nodde.nodes,\r\n          state.nodde.links,\r\n          filtersnode\r\n        )\r\n        checkedEdgeData = checkedFilter.edgechecked\r\n        checkedNodeData = checkedFilter.nodechecked\r\n      }\r\n      return {\r\n        ...state,\r\n        filterededge: action.payload.checked ? checkedEdgeData : filter,\r\n        filterednode: action.payload.checked ? checkedNodeData : filtersnode,\r\n      }\r\n    case SEARCH_NODE_AND:\r\n      // console.log('filtered node', state.filterednode)\r\n      let filternodeee = state.filterednode\r\n        ? state.filterednode\r\n        : state.nodde.nodes\r\n        ? state.nodde.nodes\r\n        : []\r\n\r\n      // const old = state.nodde.nodes\r\n      // console.log('filter node', filtered)\r\n      if (action.payload.nodeand1 !== '') {\r\n        filternodeee = filternodeee.filter((xd) => {\r\n          const regex = new RegExp(`${action.payload.nodeand1}`, 'gi')\r\n          const abc = xd.id.match(regex)\r\n          if (abc) {\r\n            return abc\r\n          } else {\r\n            return null\r\n          }\r\n        })\r\n      }\r\n      if (action.payload.nodeand2 !== '') {\r\n        filternodeee = filternodeee.filter((xd) => {\r\n          const regex = new RegExp(`${action.payload.nodeand2}`, 'gi')\r\n          const abc = xd.id.match(regex)\r\n          if (abc) {\r\n            return abc\r\n          } else {\r\n            return null\r\n          }\r\n        })\r\n      }\r\n      const filtersssedge = state.nodde.links.filter((xi, index) => {\r\n        let flag1 = false\r\n        let flag2 = false\r\n        let flag = false\r\n        for (let item of filternodeee) {\r\n          if (xi.target === item.id) {\r\n            flag1 = true\r\n            // console.log('abc', xi.target, item.id)\r\n          }\r\n          if (xi.source === item.id) {\r\n            flag2 = true\r\n            // console.log('bcs', xi.source, item.id)\r\n          }\r\n          if (flag1 === true && flag2 === true) flag = true\r\n        }\r\n        return flag\r\n      })\r\n      console.log('filtered -- >', filtersssedge)\r\n      if (action.payload.checked === true) {\r\n        let checkedFilter = neighbourFilter(\r\n          state.nodde.nodes,\r\n          state.nodde.links,\r\n          filternodeee\r\n        )\r\n        checkedEdgeData = checkedFilter.edgechecked\r\n        checkedNodeData = checkedFilter.nodechecked\r\n      }\r\n      return {\r\n        ...state,\r\n        filterednode: action.payload.checked ? checkedNodeData : filternodeee,\r\n        filterededge: action.payload.checked ? checkedEdgeData : filtersssedge,\r\n      }\r\n\r\n    case SEARCH_EDGE_AND:\r\n      console.log('filter edge', state.filterededge)\r\n      let filterss = state.filterededge\r\n        ? state.filterededge\r\n        : state.nodde.links\r\n        ? state.nodde.links\r\n        : []\r\n      console.log('filter object', filterss)\r\n      if (action.payload.edgeand1 !== '') {\r\n        filterss = filterss.filter((xxd, ind) => {\r\n          const regex = new RegExp(`${action.payload.edgeand1}`, 'gi')\r\n          const abc = xxd.tags.map((s) => {\r\n            return s.match(regex)\r\n          })\r\n          console.log('actionpayloaddd', action.payload)\r\n          console.log('abc', abc)\r\n          return !abc.every((element) => element === null)\r\n        })\r\n        console.log('filtered resultt', filterss)\r\n      }\r\n      if (action.payload.edgeand2 !== '') {\r\n        filterss = filterss.filter((xxd, ind) => {\r\n          const regex = new RegExp(`${action.payload.edgeand2}`, 'gi')\r\n          const abc = xxd.tags.map((s) => {\r\n            return s.match(regex)\r\n          })\r\n          console.log('abc', abc)\r\n          return !abc.every((element) => element === null)\r\n        })\r\n        console.log('actionpayloaddd2', action.payload)\r\n      }\r\n      console.log('filtered result2', filterss)\r\n      const filtersnodee = state.nodde.nodes.filter((xi, index) => {\r\n        let flag = false\r\n        for (let item of filterss) {\r\n          if (item.source === xi.id || item.target === xi.id) {\r\n            flag = true\r\n          }\r\n        }\r\n        return flag\r\n      })\r\n      console.log('filternode -- >', filtersnodee)\r\n      console.log('filteredddd', filterss, filtersnodee)\r\n      if (action.payload.checked === true) {\r\n        let checkedFilter = neighbourFilter(\r\n          state.nodde.nodes,\r\n          state.nodde.links,\r\n          filtersnodee\r\n        )\r\n        checkedEdgeData = checkedFilter.edgechecked\r\n        checkedNodeData = checkedFilter.nodechecked\r\n      }\r\n      return {\r\n        ...state,\r\n        filterededge: action.payload.checked ? checkedEdgeData : filterss,\r\n        filterednode: action.payload.checked ? checkedNodeData : filtersnodee,\r\n      }\r\n    case SEARCH_NODE_OR:\r\n      // console.log('filtered node', state.filterednode)\r\n      let filternodeees = state.filterednode\r\n        ? state.filterednode\r\n        : state.nodde.nodes\r\n        ? state.nodde.nodes\r\n        : []\r\n      let nodesorof1 = null\r\n      let nodesorof2 = null\r\n      let ornewnodes = null\r\n      // const old = state.nodde.nodes\r\n      // console.log('filter node', filtered)\r\n      if (action.payload.nodeor1 !== '') {\r\n        nodesorof1 = state.nodde.nodes.filter((xd) => {\r\n          const regex = new RegExp(`${action.payload.nodeor1}`, 'gi')\r\n          const abc = xd.id.match(regex)\r\n          console.log('actionpayload of node or', action.payload)\r\n          if (abc) {\r\n            return abc\r\n          } else {\r\n            return null\r\n          }\r\n        })\r\n        console.log('filterd result of edgeor1', nodesorof1)\r\n      }\r\n\r\n      if (action.payload.nodeor2 !== '') {\r\n        nodesorof2 = state.nodde.nodes.filter((xd) => {\r\n          const regex = new RegExp(`${action.payload.nodeor2}`, 'gi')\r\n          const abc = xd.id.match(regex)\r\n\r\n          console.log('actionpayload of nodeor2', action.payload)\r\n          if (abc) {\r\n            return abc\r\n          } else {\r\n            return null\r\n          }\r\n        })\r\n        console.log('filterd result of edgeor1', nodesorof2)\r\n      }\r\n      if (action.payload.nodeor1 !== '' && action.payload.nodeor2 !== '') {\r\n        ornewnodes = [...nodesorof1, ...nodesorof2]\r\n        console.log('ornewnodes', ornewnodes)\r\n      }\r\n      const filtersssedges = state.nodde.links.filter((xi, index) => {\r\n        let flag1 = false\r\n        let flag2 = false\r\n        let flag = false\r\n        for (let item of ornewnodes) {\r\n          if (xi.target === item.id) {\r\n            flag1 = true\r\n            // console.log('abc', xi.target, item.id)\r\n          }\r\n          if (xi.source === item.id) {\r\n            flag2 = true\r\n            // console.log('bcs', xi.source, item.id)\r\n          }\r\n          if (flag1 === true && flag2 === true) flag = true\r\n        }\r\n        return flag\r\n      })\r\n      console.log(\r\n        'filtered -- >',\r\n        filtersssedges,\r\n        ornewnodes,\r\n        nodesorof1,\r\n        nodesorof2\r\n      )\r\n      if (action.payload.checked === true) {\r\n        let checkedFilter = neighbourFilter(\r\n          state.nodde.nodes,\r\n          state.nodde.links,\r\n          ornewnodes\r\n        )\r\n        checkedEdgeData = checkedFilter.edgechecked\r\n        checkedNodeData = checkedFilter.nodechecked\r\n      }\r\n      return {\r\n        ...state,\r\n        filterednode: action.payload.checked ? checkedNodeData : ornewnodes,\r\n        filterededge: action.payload.checked ? checkedEdgeData : filtersssedges,\r\n      }\r\n    case SEARCH_EDGE_OR:\r\n      console.log('filterss edges', state.filterededge)\r\n      let edgesorof1 = null\r\n      let edgesorof2 = null\r\n      let nodesoforedges = null\r\n      let ornewedges = null\r\n      let filtereds = state.filterededge\r\n        ? state.filterededge\r\n        : state.nodde.links\r\n        ? state.nodde.links\r\n        : []\r\n      console.log('filterss objects', filtereds)\r\n      if (action.payload.edgeor1 !== '') {\r\n        edgesorof1 = state.nodde.links.filter((xxd, ind) => {\r\n          const regex = new RegExp(`${action.payload.edgeor1}`, 'gi')\r\n          const abc = xxd.tags.map((s) => {\r\n            return s.match(regex)\r\n          })\r\n          console.log('actionpayload of edge or', action.payload)\r\n          console.log('abc', abc)\r\n          return !abc.every((element) => element === null)\r\n        })\r\n        console.log('filterd result of edgeor1', edgesorof1)\r\n      }\r\n      if (action.payload.edgeor2 !== '') {\r\n        edgesorof2 = state.nodde.links.filter((xxd, ind) => {\r\n          const regex = new RegExp(`${action.payload.edgeor2}`, 'gi')\r\n          const abc = xxd.tags.map((s) => {\r\n            return s.match(regex)\r\n          })\r\n          console.log('abc', abc)\r\n          return !abc.every((element) => element === null)\r\n        })\r\n        console.log('actionpayloaddd2', action.payload)\r\n      }\r\n      console.log('filtered result2', edgesorof2)\r\n      if (action.payload.edgeor1 !== '' && action.payload.edgeor2 !== '') {\r\n        ornewedges = [...edgesorof1, ...edgesorof2]\r\n        console.log('ornewedges', ornewedges)\r\n      }\r\n\r\n      // if (ornewedges !== null && edgesorof1 !== null && edgesorof2 !== null) {\r\n      //   console.log('first')\r\n      //   nodesoforedges = [...ornewedges]\r\n      //   return nodesoforedges\r\n      // }\r\n      // if (ornewedges === null && edgesorof1 === null && edgesorof2 !== null) {\r\n      //   console.log('second')\r\n      //   nodesoforedges = [...edgesorof2]\r\n      //   return nodesoforedges\r\n      // }\r\n      // if (ornewedges === null && edgesorof2 === null && edgesorof1 !== null) {\r\n      //   console.log('third')\r\n      //   nodesoforedges = [...edgesorof1]\r\n      //   return nodesoforedges\r\n      // }\r\n      console.log('ornewedges', ornewedges)\r\n      const filtersnodees = state.nodde.nodes.filter((xi, index) => {\r\n        let flag = false\r\n        for (let item of ornewedges) {\r\n          if (item.source === xi.id || item.target === xi.id) {\r\n            flag = true\r\n          }\r\n        }\r\n        return flag\r\n      })\r\n      console.log('filternode -- >', filtersnodees)\r\n      console.log('filteredddd', ornewedges, edgesorof2, edgesorof1)\r\n      if (action.payload.checked === true) {\r\n        let checkedFilter = neighbourFilter(\r\n          state.nodde.nodes,\r\n          state.nodde.links,\r\n          filtersnodees\r\n        )\r\n        checkedEdgeData = checkedFilter.edgechecked\r\n        checkedNodeData = checkedFilter.nodechecked\r\n      }\r\n      return {\r\n        ...state,\r\n        filterededge: action.payload.checked ? checkedEdgeData : ornewedges,\r\n        filterednode: action.payload.checked ? checkedNodeData : filtersnodees,\r\n      }\r\n\r\n    case SEARCH_NODE_EDGE:\r\n      let nodesdata = state.nodde.nodes\r\n      let edgesdata = state.nodde.links\r\n      // console.log('filtered node', state.filterednode)\r\n\r\n      // const old = state.nodde.nodes\r\n      // console.log('filter node', filtered)\r\n      if (action.payload.text !== '') {\r\n        console.log('first action')\r\n        const filteredd = state.nodde.nodes.filter((xd) => {\r\n          const regex = new RegExp(`${action.payload.text}`, 'gi')\r\n          const abc = xd.id.match(regex)\r\n          if (abc) {\r\n            return abc\r\n          } else {\r\n            return null\r\n          }\r\n        })\r\n        nodesdata = filteredd\r\n        console.log('actionpayload', action.payload)\r\n        console.log('filteredd', nodesdata)\r\n        const filtersedgee = state.nodde.links.filter((xi, index) => {\r\n          let flag1 = false\r\n          let flag2 = false\r\n          let flag = false\r\n          for (let item of filteredd) {\r\n            if (xi.target === item.id) {\r\n              flag1 = true\r\n              // console.log('abc', xi.target, item.id)\r\n            }\r\n            if (xi.source === item.id) {\r\n              flag2 = true\r\n              // console.log('bcs', xi.source, item.id)\r\n            }\r\n            if (flag1 === true && flag2 === true) flag = true\r\n          }\r\n          return flag\r\n        })\r\n        edgesdata = filtersedgee\r\n        console.log('filtered edge', edgesdata)\r\n      }\r\n      if (action.payload.texts !== '') {\r\n        console.log('second action')\r\n        let filterr = edgesdata\r\n          ? edgesdata\r\n          : state.nodde.links\r\n          ? state.nodde.links\r\n          : []\r\n        console.log('filter object', filterr)\r\n        filterr = filterr.filter((xxd, ind) => {\r\n          const regex = new RegExp(`${action.payload.texts}`, 'gi')\r\n          const abc = xxd.tags.map((s) => {\r\n            return s.match(regex)\r\n          })\r\n          console.log('abc', abc)\r\n          return !abc.every((element) => element === null)\r\n        })\r\n        console.log('filtered result', filterr)\r\n        edgesdata = filterr\r\n        console.log('edgesdata', edgesdata)\r\n        console.log('actionpaaylaod2', action.payload)\r\n        const cde = nodesdata\r\n          ? nodesdata\r\n          : state.nodde.nodes\r\n          ? state.nodde.nodes\r\n          : []\r\n        const filtersnodee = cde.filter((xi, index) => {\r\n          let flag = false\r\n          for (let item of filterr) {\r\n            if (item.source === xi.id || item.target === xi.id) {\r\n              flag = true\r\n            }\r\n          }\r\n          return flag\r\n        })\r\n        console.log('filtered -- >', edgesdata)\r\n        nodesdata = filtersnodee\r\n        console.log('filternode -- >', nodesdata)\r\n      }\r\n      if (action.payload.checked === true) {\r\n        let checkedFilter = neighbourFilter(\r\n          state.nodde.nodes,\r\n          state.nodde.links,\r\n          nodesdata\r\n        )\r\n        checkedEdgeData = checkedFilter.edgechecked\r\n        checkedNodeData = checkedFilter.nodechecked\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        filterednode: action.payload.checked ? checkedNodeData : nodesdata,\r\n        filterededge: action.payload.checked ? checkedEdgeData : edgesdata,\r\n      }\r\n\r\n    case CLEAR_NODE:\r\n      return {\r\n        ...state,\r\n        filterednode: null,\r\n      }\r\n    case CLEAR_EDGE:\r\n      return {\r\n        ...state,\r\n        filterededge: null,\r\n      }\r\n    case REMOVE_NODE_SUCCESS:\r\n      console.log('node id', action.payload)\r\n      let updatedNodeArray = state.nodde.nodes.filter(\r\n        (node) => node._id != action.payload\r\n      )\r\n      let deletedNode = state.nodde.nodes.filter(\r\n        (node) => node._id == action.payload\r\n      )\r\n      console.log('state.nodde.links -->', state.nodde.links)\r\n      console.log('deleted node -->', deletedNode)\r\n      let updatedEdges = state.nodde.links.filter(\r\n        (link) =>\r\n          link.source != deletedNode[0].id && link.target != deletedNode[0].id\r\n      )\r\n      console.log(\r\n        'updated edge and node array',\r\n        updatedEdges,\r\n        updatedNodeArray,\r\n        state\r\n      )\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        nodde: {\r\n          links: updatedEdges,\r\n          nodes: updatedNodeArray,\r\n        },\r\n      }\r\n\r\n    case REMOVE_NODE_FAIL:\r\n      return { loading: false, error: action.payload }\r\n\r\n    case GET_EDGE_REQUEST:\r\n      return { ...state, loading: true }\r\n\r\n    case GET_EDGE_SUCCESS:\r\n      console.log('state.nodde -->', state.nodde)\r\n      console.log('action.payload -->', action.payload)\r\n      return {\r\n        ...state,\r\n        nodde: {\r\n          ...state.nodde,\r\n          links: [...state.nodde.links, action.payload],\r\n        },\r\n        loading: false,\r\n      }\r\n    case GET_EDGE_SUCCESSES:\r\n      console.log('state.nodde -->', state.nodde)\r\n      console.log('action.payload -->', action.payload)\r\n      return {\r\n        ...state,\r\n        nodde: {\r\n          ...state.nodde,\r\n          links: [...state.nodde.links, ...action.payload],\r\n        },\r\n        loading: false,\r\n      }\r\n\r\n    case GET_EDGE_FAIL:\r\n      return { loading: false, error: action.payload }\r\n\r\n    case UPDATE_EDGE_REQUEST:\r\n      return { ...state, loading: true }\r\n\r\n    case UPDATE_EDGE_SUCCESS:\r\n      const indexEdge = state.nodde.links.findIndex(\r\n        (link) => link._id === action.payload._id\r\n      )\r\n      console.log('index edge', indexEdge)\r\n      let newArrayEdge = state.nodde.links\r\n      newArrayEdge[indexEdge] = action.payload\r\n      console.log('new Array -->', newArrayEdge)\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        nodde: { ...state.nodde, links: newArrayEdge },\r\n      }\r\n\r\n    case UPDATE_EDGE_FAIL:\r\n      return { loading: false, error: action.payload }\r\n\r\n    case REMOVE_EDGE_REQUEST:\r\n      return { ...state, loading: true }\r\n\r\n    case REMOVE_EDGE_SUCCESS:\r\n      let updatedEdgeArray = state.nodde.links.filter(\r\n        (link) => link._id != action.payload\r\n      )\r\n      console.log('updated edge array', updatedEdgeArray)\r\n      return {\r\n        loading: false,\r\n        nodde: { ...state.nodde, links: updatedEdgeArray },\r\n      }\r\n\r\n    case REMOVE_EDGE_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n// export const putEdgeReducer = (state = {}, action) => {\r\n//   switch (action.type) {\r\n\r\n//     default:\r\n//       return state\r\n//   }\r\n// }\r\n// export const updateNodeReducer = (state = {}, action) => {\r\n//   switch (action.type) {\r\n\r\n//     default:\r\n//       return state\r\n//   }\r\n// }\r\n// export const updateEdgeReducer = (state = {}, action) => {\r\n//   switch (action.type) {\r\n\r\n//     default:\r\n//       return state\r\n//   }\r\n// }\r\n// export const getEdgeReducer = (state = {}, action) => {\r\n//   switch (action.type) {\r\n//     case HAVE_EDGE_REQUEST:\r\n//       return { loading: true }\r\n//     case HAVE_EDGE_SUCCESS:\r\n//       return { loading: false, eddge: action.payload }\r\n//     case HAVE_EDGE_FAIL:\r\n//       return { loading: false, error: action.payload }\r\n//     default:\r\n//       return state\r\n//   }\r\n// }\r\n// export const deleteEdgeReducer = (state = {}, action) => {\r\n//   switch (action.type) {\r\n\r\n//     default:\r\n//       return state\r\n//   }\r\n// }\r\n// export const deleteNodeReducer = (state = {}, action) => {\r\n//   switch (action.type) {\r\n\r\n//     default:\r\n//       return state\r\n//   }\r\n// }\r\nconst neighbourFilter = (nodesarg, edgesarg, nodesfilter) => {\r\n  let edgechecked\r\n  let nodechecked\r\n\r\n  edgechecked = edgesarg.filter((xi) => {\r\n    let flag = false\r\n    for (let item of nodesfilter) {\r\n      if (xi.target === item.id) {\r\n        flag = true\r\n        // console.log('abc', xi.target, item.id)\r\n      }\r\n      if (xi.source === item.id) {\r\n        flag = true\r\n        // console.log('bcs', xi.source, item.id)\r\n      }\r\n    }\r\n    return flag\r\n  })\r\n  console.log('lalalala checkededge', edgechecked)\r\n  nodechecked = nodesarg.filter((xi, index) => {\r\n    let flag = false\r\n    for (let item of edgechecked) {\r\n      if (item.source === xi.id || item.target === xi.id) {\r\n        flag = true\r\n      }\r\n    }\r\n    return flag\r\n  })\r\n  console.log('lalalala checkednode1', nodechecked)\r\n  return { nodechecked, edgechecked }\r\n}\r\n","E:\\mob-app1\\netbook-client\\src\\screens\\Links.js",["194","195","196","197","198","199","200","201","202","203","204","205","206","207","208","209","210","211","212","213","214","215","216","217","218","219","220","221","222","223","224","225","226","227","228","229","230","231","232","233","234","235","236","237","238","239"],"E:\\mob-app1\\netbook-client\\src\\components\\Sidebar.js",["240"],"import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { IconButton } from '@material-ui/core'\r\nimport TimelineIcon from '@material-ui/icons/Timeline'\r\nimport SearchIcon from '@material-ui/icons/Search'\r\nimport FormatListBulletedIcon from '@material-ui/icons/FormatListBulleted'\r\nimport AddIcon from '@material-ui/icons/Add'\r\nimport PersonIcon from '@material-ui/icons/Person'\r\nimport './../screens/home.css'\r\n\r\nconst Sidebar = (props) => {\r\n  return (\r\n    <div\r\n      className={props.visible ? 'showsidebar' : 'hidesidebar'}\r\n      style={{\r\n        marginTop: props.vissible ? 102 : 15,\r\n        marginLeft: 12,\r\n        borderRadius: 8,\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'start',\r\n        height: props.vissible ? 'calc(100vh - 186px)' : 'calc(100vh - 100px)',\r\n        transition: '0.3s',\r\n        backgroundColor: 'white',\r\n      }}\r\n    >\r\n      <Link className='link' to='/graph'>\r\n        <div\r\n          className='firsticon'\r\n          style={{ display: 'flex', alignItems: 'center', marginTop: 10 }}\r\n        >\r\n          <IconButton color='inherit' aria-label='open drawer'>\r\n            <TimelineIcon style={{ color: 'grey' }} />\r\n          </IconButton>\r\n          <p className={props.visible ? 'slide' : 'hidetext'}>Graph View</p>\r\n        </div>\r\n      </Link>\r\n\r\n      {/* <div\r\n        style={{ display: 'flex', alignItems: 'center' }}\r\n        onClick={props.showimportview}\r\n      >\r\n        <IconButton color='inherit' aria-label='open drawer'>\r\n          <AddIcon style={{ color: 'grey' }} />\r\n        </IconButton>\r\n        <p className={props.visible ? 'slide' : 'hidetext'}>Import View</p>\r\n      </div> */}\r\n\r\n      <Link className='link' to='/query'>\r\n        <div style={{ display: 'flex', alignItems: 'center' }}>\r\n          <IconButton color='inherit' aria-label='open drawer'>\r\n            <SearchIcon style={{ color: 'grey' }} />\r\n          </IconButton>\r\n          <p className={props.visible ? 'slide' : 'hidetext'}>Queries</p>\r\n        </div>\r\n      </Link>\r\n      <Link className='link' to='/feed'>\r\n        <div style={{ display: 'flex', alignItems: 'center' }}>\r\n          <IconButton color='inherit' aria-label='open drawer'>\r\n            <FormatListBulletedIcon style={{ color: 'grey' }} />\r\n          </IconButton>\r\n          <p className={props.visible ? 'slide' : 'hidetext'}>Feed View</p>\r\n        </div>\r\n      </Link>\r\n      <Link className='link' to='/profile'>\r\n        <div style={{ display: 'flex', alignItems: 'center' }}>\r\n          <IconButton color='inherit' aria-label='open drawer'>\r\n            <PersonIcon style={{ color: 'grey' }} />\r\n          </IconButton>\r\n          <p className={props.visible ? 'slide' : 'hidetext'}>Profile</p>\r\n        </div>\r\n      </Link>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Sidebar\r\n","E:\\mob-app1\\netbook-client\\src\\components\\CardInput.js",[],"E:\\mob-app1\\netbook-client\\src\\constants\\nodeConstant.js",[],"E:\\mob-app1\\netbook-client\\src\\actions\\oauthAction.js",[],"E:\\mob-app1\\netbook-client\\src\\constants\\oauthConstant.js",[],"E:\\mob-app1\\netbook-client\\src\\actions\\nodeAction.js",["241","242","243","244","245","246","247","248","249"],"import axios from 'axios'\r\nimport {\r\n  GET_NODE_FAIL,\r\n  GET_NODE_REQUEST,\r\n  GET_NODE_SUCCESS,\r\n  HAVE_NODE_FAIL,\r\n  SEARCH_NODE_OR,\r\n  HAVE_NODE_SUCCESS,\r\n  SEARCH_EDGE_OR,\r\n  HAVE_NODE_REQUEST,\r\n  GET_EDGE_FAIL,\r\n  SEARCH_EDGE_SUCCESS,\r\n  GET_EDGE_REQUEST,\r\n  GET_EDGE_SUCCESSES,\r\n  SEARCH_NODE_AND,\r\n  SEARCH_NODE_EDGE,\r\n  GET_EDGE_SUCCESS,\r\n  CLEAR_EDGE,\r\n  HAVE_NODE_SUCCESESS,\r\n  CLEAR_NODE,\r\n  HAVE_EDGE_FAIL,\r\n  HAVE_EDGE_REQUEST,\r\n  HAVE_EDGE_SUCCESS,\r\n  GET_AIQUERIES_REQUEST,\r\n  GET_AIQUERIES_SUCCESS,\r\n  GET_AIQUERIES_FAIL,\r\n  GET_NODE_SUCCESSES,\r\n  SEARCH_NODE_SUCCESS,\r\n  UPDATE_EDGE_SUCCESS,\r\n  SEARCH_EDGE_AND,\r\n  UPDATE_EDGE_REQUEST,\r\n  UPDATE_EDGE_FAIL,\r\n  UPDATE_NODE_SUCCESS,\r\n  UPDATE_NODE_REQUEST,\r\n  UPDATE_NODE_FAIL,\r\n  REMOVE_NODE_SUCCESS,\r\n  REMOVE_NODE_REQUEST,\r\n  REMOVE_NODE_FAIL,\r\n  REMOVE_EDGE_SUCCESS,\r\n  REMOVE_EDGE_REQUEST,\r\n  REMOVE_EDGE_FAIL,\r\n} from '../constants/nodeConstant'\r\n\r\nexport const NodeAdd = (nodeid, id, type, tags, attributes, color) => async (\r\n  dispatch\r\n) => {\r\n  try {\r\n    dispatch({\r\n      type: HAVE_NODE_REQUEST,\r\n    })\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.post(\r\n      'https://netbook-server.herokuapp.com/nodes',\r\n      { nodeid, id, type, tags, attributes, color },\r\n      config\r\n    )\r\n\r\n    dispatch({\r\n      type: GET_NODE_SUCCESS,\r\n      payload: data,\r\n    })\r\n    localStorage.setItem('nodehave', JSON.stringify(data))\r\n  } catch (error) {\r\n    console.log('error', error)\r\n    dispatch({\r\n      type: GET_NODE_FAIL,\r\n      payload: error,\r\n    })\r\n  }\r\n}\r\n\r\nexport const NodeAdded = (node) => async (dispatch) => {\r\n  console.log('nodesaction', node)\r\n\r\n  try {\r\n    dispatch({\r\n      type: HAVE_NODE_REQUEST,\r\n    })\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.post(\r\n      'https://netbook-server.herokuapp.com/nodes/many',\r\n      node,\r\n      config\r\n    )\r\n    console.log('dataofnodes', data)\r\n    dispatch({\r\n      type: GET_NODE_SUCCESSES,\r\n      payload: data,\r\n    })\r\n    localStorage.setItem('nodehave', JSON.stringify(data))\r\n  } catch (error) {\r\n    console.log('error', error)\r\n    dispatch({\r\n      type: GET_NODE_FAIL,\r\n      payload: error,\r\n    })\r\n  }\r\n}\r\n\r\nexport const Nodefetch = (nodeid) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: HAVE_NODE_REQUEST,\r\n    })\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.post(\r\n      'https://netbook-server.herokuapp.com/nodes/get',\r\n      { nodeid },\r\n      config\r\n    )\r\n    console.log('dataaa', data)\r\n    const links = []\r\n\r\n    if (data.links?.length > 0) {\r\n      data.links.map((link) => {\r\n        links.push({\r\n          edgeid: link.edgeid,\r\n          tags: link.tags,\r\n          source: link.source.id,\r\n          target: link.target.id,\r\n          _id: link._id,\r\n        })\r\n      })\r\n    }\r\n\r\n    dispatch({\r\n      type: HAVE_NODE_SUCCESS,\r\n      payload: { ...data, links },\r\n    })\r\n    localStorage.setItem('nodehave', JSON.stringify({ ...data, links }))\r\n  } catch (error) {\r\n    dispatch({\r\n      type: HAVE_NODE_FAIL,\r\n      payload: error,\r\n    })\r\n  }\r\n}\r\nexport const NodeEdgefetch = (nodes, newedge) => async (dispatch) => {\r\n  console.log('nodes and newedge', nodes, newedge)\r\n  try {\r\n    dispatch({\r\n      type: HAVE_NODE_REQUEST,\r\n    })\r\n    console.log('actionpayload12', nodes, newedge)\r\n    const links = []\r\n\r\n    if (newedge?.length > 0) {\r\n      newedge.map((link) => {\r\n        links.push({\r\n          edgeid: link.edgeid,\r\n          tags: link.tags,\r\n          source: link.source.id,\r\n          target: link.target.id,\r\n          _id: link._id,\r\n        })\r\n      })\r\n    }\r\n    console.log('newedge', newedge, links)\r\n    dispatch({\r\n      type: HAVE_NODE_SUCCESESS,\r\n      payload: { nodes, links },\r\n    })\r\n    // localStorage.setItem('nodehave', JSON.stringify({ nodes, links }))\r\n  } catch (error) {\r\n    dispatch({\r\n      type: HAVE_NODE_FAIL,\r\n      payload: error,\r\n    })\r\n  }\r\n}\r\n\r\nexport const EdgeAdd = (edgeid, source, target, tags) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: GET_EDGE_REQUEST,\r\n    })\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.post(\r\n      'https://netbook-server.herokuapp.com/edges',\r\n      { edgeid, source, target, tags },\r\n      config\r\n    )\r\n\r\n    dispatch({\r\n      type: GET_EDGE_SUCCESS,\r\n      payload: {\r\n        edgeid: data.edgeid,\r\n        tags: data.tags,\r\n        source: data.source.id,\r\n        target: data.target.id,\r\n        _id: data._id,\r\n      },\r\n    })\r\n    localStorage.setItem(\r\n      'edgeadded',\r\n      JSON.stringify({\r\n        edgeid: data.edgeid,\r\n        tags: data.tags,\r\n        source: data.source.id,\r\n        target: data.target.id,\r\n        _id: data._id,\r\n      })\r\n    )\r\n  } catch (error) {\r\n    dispatch({\r\n      type: GET_EDGE_FAIL,\r\n      payload: error,\r\n    })\r\n  }\r\n}\r\nexport const EdgeAdded = (edge) => async (dispatch) => {\r\n  console.log('edgesaction', edge)\r\n  try {\r\n    dispatch({\r\n      type: GET_EDGE_REQUEST,\r\n    })\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.post(\r\n      'http://localhost:5000/edges/many',\r\n      // 'https://netbook-server.herokuapp.com/edges/many',\r\n      [...edge],\r\n      config\r\n    )\r\n    console.log('dataofedges', data)\r\n    dispatch({\r\n      type: GET_EDGE_SUCCESSES,\r\n      payload: data,\r\n    })\r\n    localStorage.setItem('edgeadded', JSON.stringify(data))\r\n  } catch (error) {\r\n    dispatch({\r\n      type: GET_EDGE_FAIL,\r\n      payload: error,\r\n    })\r\n  }\r\n}\r\n\r\nexport const EdgeUpdate = (id, edgeid, source, target, tags) => async (\r\n  dispatch\r\n) => {\r\n  try {\r\n    dispatch({\r\n      type: UPDATE_EDGE_REQUEST,\r\n    })\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.put(\r\n      `https://netbook-server.herokuapp.com/edges/${id}`,\r\n      { edgeid, source, target, tags },\r\n      config\r\n    )\r\n\r\n    console.log('added data', data)\r\n\r\n    dispatch({\r\n      type: UPDATE_EDGE_SUCCESS,\r\n      payload: {\r\n        edgeid: data.edgeid,\r\n        tags: data.tags,\r\n        source: data.source.id,\r\n        target: data.target.id,\r\n        _id: data._id,\r\n      },\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: UPDATE_EDGE_FAIL,\r\n      payload: error,\r\n    })\r\n  }\r\n}\r\n\r\nexport const NodeUpdate = (_id, nodeid, id, type, tags, attributes) => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  try {\r\n    dispatch({\r\n      type: UPDATE_NODE_REQUEST,\r\n    })\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.put(\r\n      `https://netbook-server.herokuapp.com/nodes/${_id}`,\r\n      { nodeid, id, type, tags, attributes },\r\n      config\r\n    )\r\n\r\n    const [oldNode] = getState().getNode.nodde.nodes.filter(\r\n      (node) => node._id == _id\r\n    )\r\n\r\n    let updatedLinks = getState().getNode.nodde.links\r\n\r\n    if (id !== oldNode.id) {\r\n      for (let i = 0; i < updatedLinks.length; i++) {\r\n        if (updatedLinks[i].target == oldNode.id) {\r\n          updatedLinks[i].target = data.id\r\n        }\r\n        if (updatedLinks[i].source == oldNode.id) {\r\n          updatedLinks[i].source = data.id\r\n        }\r\n      }\r\n    }\r\n\r\n    dispatch({\r\n      type: UPDATE_NODE_SUCCESS,\r\n      payload: data,\r\n    })\r\n    localStorage.setItem('nodehave', JSON.stringify(data))\r\n  } catch (error) {\r\n    dispatch({\r\n      type: UPDATE_NODE_FAIL,\r\n      payload: error,\r\n    })\r\n  }\r\n}\r\n\r\nexport const NodeDeletion = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: REMOVE_NODE_REQUEST,\r\n    })\r\n\r\n    const { data } = await axios.delete(\r\n      `https://netbook-server.herokuapp.com/nodes/${id}`\r\n    )\r\n\r\n    dispatch({\r\n      type: REMOVE_NODE_SUCCESS,\r\n      payload: id,\r\n    })\r\n    localStorage.removeItem('nodehave', JSON.stringify(data))\r\n  } catch (error) {\r\n    dispatch({\r\n      type: REMOVE_NODE_FAIL,\r\n      payload: error,\r\n    })\r\n  }\r\n}\r\n\r\nexport const EdgeDeletion = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: REMOVE_EDGE_REQUEST,\r\n    })\r\n\r\n    await axios.delete(`https://netbook-server.herokuapp.com/edges/${id}`)\r\n\r\n    dispatch({\r\n      type: REMOVE_EDGE_SUCCESS,\r\n      payload: id,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: REMOVE_EDGE_FAIL,\r\n      payload: error,\r\n    })\r\n  }\r\n}\r\n\r\nexport const Edgefetch = (edgeid) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: HAVE_EDGE_REQUEST,\r\n    })\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.post(\r\n      'https://netbook-server.herokuapp.com/edges/get',\r\n      { edgeid },\r\n      config\r\n    )\r\n\r\n    dispatch({\r\n      type: HAVE_EDGE_SUCCESS,\r\n      payload: data,\r\n    })\r\n    localStorage.setItem('edgehave', JSON.stringify(data))\r\n  } catch (error) {\r\n    dispatch({\r\n      type: HAVE_EDGE_FAIL,\r\n      payload: error,\r\n    })\r\n  }\r\n}\r\nexport const Searchnode = (text, checked) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: SEARCH_NODE_SUCCESS,\r\n      payload: { text: text, checked: checked },\r\n    })\r\n  } catch (error) {\r\n    console.log('error', error)\r\n  }\r\n}\r\nexport const Searchnodeedge = (text = '', texts = '', checked) => async (\r\n  dispatch\r\n) => {\r\n  try {\r\n    dispatch({\r\n      type: SEARCH_NODE_EDGE,\r\n      payload: { text: text, texts: texts, checked: checked },\r\n    })\r\n    console.log('heeeel')\r\n  } catch (error) {\r\n    console.log('error', error)\r\n  }\r\n}\r\n\r\nexport const Searchedge = (text, checked) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: SEARCH_EDGE_SUCCESS,\r\n      payload: { text: text, checked: checked },\r\n    })\r\n    console.log('payload', text)\r\n  } catch (error) {\r\n    console.log('error', error)\r\n  }\r\n}\r\nexport const Searchedgeand = (edgeand1 = '', edgeand2 = '', checked) => async (\r\n  dispatch\r\n) => {\r\n  try {\r\n    dispatch({\r\n      type: SEARCH_EDGE_AND,\r\n      payload: {\r\n        edgeand1: edgeand1,\r\n        edgeand2: edgeand2,\r\n        checked: checked,\r\n      },\r\n    })\r\n    console.log('payloaddd', edgeand1, edgeand2)\r\n  } catch (error) {\r\n    console.log('error', error)\r\n  }\r\n}\r\nexport const Searchedgeor = (edgeor1 = '', edgeor2 = '', checked) => async (\r\n  dispatch\r\n) => {\r\n  try {\r\n    dispatch({\r\n      type: SEARCH_EDGE_OR,\r\n      payload: {\r\n        edgeor1: edgeor1,\r\n        edgeor2: edgeor2,\r\n        checked: checked,\r\n      },\r\n    })\r\n    console.log('payloaddd', edgeor1, edgeor2)\r\n  } catch (error) {\r\n    console.log('error', error)\r\n  }\r\n}\r\nexport const Searchnodeor = (nodeor1 = '', nodeor2 = '', checked) => async (\r\n  dispatch\r\n) => {\r\n  try {\r\n    dispatch({\r\n      type: SEARCH_NODE_OR,\r\n      payload: {\r\n        nodeor1: nodeor1,\r\n        nodeor2: nodeor2,\r\n        checked: checked,\r\n      },\r\n    })\r\n    console.log('payloaddd', nodeor1, nodeor2)\r\n  } catch (error) {\r\n    console.log('error', error)\r\n  }\r\n}\r\nexport const Searchnodeand = (nodeand1 = '', nodeand2 = '', checked) => async (\r\n  dispatch\r\n) => {\r\n  try {\r\n    dispatch({\r\n      type: SEARCH_NODE_AND,\r\n      payload: {\r\n        nodeand1: nodeand1,\r\n        nodeand2: nodeand2,\r\n        checked: checked,\r\n      },\r\n    })\r\n    console.log('payloaddd', nodeand1, nodeand2)\r\n  } catch (error) {\r\n    console.log('error', error)\r\n  }\r\n}\r\n\r\nexport const Clearnode = () => async (dispatch) => {\r\n  dispatch({\r\n    type: CLEAR_NODE,\r\n  })\r\n}\r\nexport const Clearedge = () => async (dispatch) => {\r\n  dispatch({\r\n    type: CLEAR_EDGE,\r\n  })\r\n}\r\n","E:\\mob-app1\\netbook-client\\src\\components\\Navbar.js",["250","251","252","253","254","255","256","257","258","259","260","261","262","263","264","265","266","267","268","269"],"import React, { useState, useRef, useEffect } from 'react'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport MenuIcon from '@material-ui/icons/Menu'\r\nimport { makeStyles, TextField } from '@material-ui/core'\r\nimport InputAdornment from '@material-ui/core/InputAdornment'\r\nimport SearchIcon from '@material-ui/icons/Search'\r\nimport TuneIcon from '@material-ui/icons/Tune'\r\nimport Checkbox from '@material-ui/core/Checkbox'\r\nimport Alert from '@material-ui/lab/Alert'\r\nimport { ToastContainer, toast } from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css'\r\n\r\nimport { GoogleLogout } from 'react-google-login'\r\nimport './../screens/home.css'\r\nimport {\r\n  Searchnode,\r\n  Clearnode,\r\n  Searchedge,\r\n  Clearedge,\r\n  Searchnodeedge,\r\n  Searchedgeand,\r\n  Searchnodeand,\r\n  Searchedgeor,\r\n  Searchnodeor,\r\n} from '../actions/nodeAction'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nconst Navbar = (props) => {\r\n  const getNode = useSelector((state) => state.getNode)\r\n  const {\r\n    loading: nodeloading,\r\n    filterednode,\r\n    filterededge,\r\n    nodde,\r\n    error: errror,\r\n  } = getNode\r\n\r\n  const { innerWidth, innerHeight } = window\r\n\r\n  const nodesearch = useRef('')\r\n  const edgesearch = useRef('')\r\n\r\n  const nodesimpsearch = useRef('')\r\n\r\n  const [edgeval, setEdgeval] = useState('')\r\n  const [nodeval, setNodeval] = useState('')\r\n  const [searchedge, setSearchedge] = useState('')\r\n  const [msgg, setMsgg] = useState('')\r\n\r\n  const [msggg, setMsggg] = useState('')\r\n  const [checked, setChecked] = useState(false)\r\n  const [checker, setChecker] = useState(false)\r\n  const dispatch = useDispatch()\r\n  useEffect(() => {\r\n    if (filterednode === null) {\r\n      nodesearch.current.value = ''\r\n    }\r\n  })\r\n  useEffect(() => {\r\n    if (filterededge === null) {\r\n      edgesearch.current.value = ''\r\n    }\r\n  })\r\n  useEffect(() => {\r\n    console.log('checked', checked)\r\n  }, [checked])\r\n  const useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n      position: 'absolute',\r\n      width: innerWidth > 600 ? 600 : '100%',\r\n\r\n      backgroundColor: theme.palette.background.paper,\r\n      // border: '2px solid #000',\r\n      boxShadow: theme.shadows[5],\r\n      padding: theme.spacing(2, 4, 3),\r\n      maxHeight: 'calc(100vh - 200px)',\r\n      overflow: 'auto !important',\r\n      top: '50%',\r\n    },\r\n    alertroot: {\r\n      width: '100%',\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      marginTop: theme.spacing(2),\r\n      position: 'fixed',\r\n      top: innerWidth > 600 ? '23%' : '19%',\r\n      left: innerWidth > 600 ? '29%' : '19%',\r\n    },\r\n    multilineColor: {\r\n      color: 'white',\r\n    },\r\n    multilineColors: {\r\n      color: 'black',\r\n    },\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: 120,\r\n      width: '100%',\r\n    },\r\n    selectEmpty: {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n    root: {\r\n      width: '100%',\r\n      '& > * + *': {\r\n        marginTop: theme.spacing(2),\r\n      },\r\n    },\r\n    rooot: {\r\n      display: 'flex',\r\n      '& > * + *': {\r\n        marginLeft: theme.spacing(2),\r\n\r\n        justifyContent: 'center !important',\r\n      },\r\n    },\r\n  }))\r\n  const handleChange = (event) => {\r\n    setChecked(event.target.checked)\r\n  }\r\n\r\n  const classes = useStyles()\r\n\r\n  const onnodeChange = (e) => {\r\n    nodesearch.current.value = e.target.value\r\n    if (e.nativeEvent.data === null) {\r\n      dispatch(\r\n        Searchnodeedge(nodesearch.current.value, edgesearch.current.value)\r\n      )\r\n      console.log('delete')\r\n    } else if (nodesearch.current.value !== '') {\r\n      dispatch(Searchnode(e.target.value))\r\n    }\r\n  }\r\n\r\n  const onChange = (e) => {\r\n    nodesearch.current.value = e.target.value\r\n    console.log('1', nodesearch.current.value, edgesearch.current.value)\r\n    let namess = nodesearch.current.value\r\n    let node1\r\n    let node2\r\n    let numnod\r\n    if (namess.includes('^')) {\r\n      var charRepeats = function (str) {\r\n        return (numnod = (str.match(/\\^/g) || []).length)\r\n      }\r\n      charRepeats(namess)\r\n      console.log('numnod', numnod)\r\n      if (numnod > 1) {\r\n        toast.error('You can only type ^ once', {\r\n          position: 'bottom-center',\r\n          autoClose: 5000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n        })\r\n\r\n        // setMsgg('You can only type ^ once')\r\n\r\n        console.log('abbc')\r\n      }\r\n      node1 = namess.split('^')[0]\r\n      node2 = namess.split('^')[1]\r\n\r\n      dispatch(Searchnodeand(node1, node2, checked))\r\n      console.log('names', node1, node2)\r\n    }\r\n    if (namess.includes('|')) {\r\n      var charRepeats = function (str) {\r\n        return (numnod = (str.match(/\\|/g) || []).length)\r\n      }\r\n      charRepeats(namess)\r\n      console.log('numnod', numnod)\r\n      if (numnod > 1) {\r\n        toast.error('You can only type | once', {\r\n          position: 'bottom-center',\r\n          autoClose: 5000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n        })\r\n\r\n        console.log('abbbc')\r\n      }\r\n      node1 = namess.split('|')[0]\r\n      node2 = namess.split('|')[1]\r\n\r\n      if (!!node1 && !!node2) {\r\n        dispatch(Searchnodeor(node1, node2, checked))\r\n      }\r\n      console.log('namesss', node1, node2)\r\n    } else if (e.nativeEvent.data === null) {\r\n      dispatch(\r\n        Searchnodeedge(\r\n          nodesearch.current.value,\r\n          edgesearch.current.value,\r\n          checked\r\n        )\r\n      )\r\n      console.log('delete')\r\n    } else if (\r\n      nodesearch.current.value !== '' &&\r\n      !nodesearch.current.value.includes('^') &&\r\n      !nodesearch.current.value.includes('|')\r\n    ) {\r\n      dispatch(Searchnode(e.target.value, checked))\r\n    } else {\r\n      // dispatch(Clearnode())\r\n    }\r\n  }\r\n  const onedgeChange = (e) => {\r\n    edgesearch.current.value = e.target.value\r\n    console.log('2', nodesearch.current.value, edgesearch.current.value)\r\n    let names = edgesearch.current.value\r\n    let edge1\r\n    let edge2\r\n    let numedg\r\n    if (names.includes('^')) {\r\n      var charRepeats = function (str) {\r\n        return (numedg = (str.match(/\\^/g) || []).length)\r\n      }\r\n      charRepeats(names)\r\n      console.log('numedg', numedg)\r\n      if (numedg > 1) {\r\n        toast.error('You can only type ^ once', {\r\n          position: 'bottom-center',\r\n          autoClose: 5000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n        })\r\n        console.log('abbc')\r\n      }\r\n      edge1 = names.split('^')[0]\r\n      edge2 = names.split('^')[1]\r\n\r\n      dispatch(Searchedgeand(edge1, edge2, checked))\r\n      console.log('names', edge1, edge2)\r\n    }\r\n    if (names.includes('|')) {\r\n      var charRepeats = function (str) {\r\n        return (numedg = (str.match(/\\|/g) || []).length)\r\n      }\r\n      charRepeats(names)\r\n      console.log('numedg', numedg)\r\n      if (numedg > 1) {\r\n        toast.error('You can only type | once', {\r\n          position: 'bottom-center',\r\n          autoClose: 5000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n        })\r\n\r\n        console.log('abbbc')\r\n      }\r\n      edge1 = names.split('|')[0]\r\n      edge2 = names.split('|')[1]\r\n\r\n      if (!!edge1 && !!edge2) {\r\n        dispatch(Searchedgeor(edge1, edge2, checked))\r\n      }\r\n      console.log('namesss', edge1, edge2)\r\n    }\r\n\r\n    if (e.nativeEvent.data === null) {\r\n      dispatch(\r\n        Searchnodeedge(\r\n          nodesearch.current.value,\r\n          edgesearch.current.value,\r\n          checked\r\n        )\r\n      )\r\n      console.log('delete')\r\n    } else if (\r\n      edgesearch.current.value !== '' &&\r\n      !edgesearch.current.value.includes('^') &&\r\n      !edgesearch.current.value.includes('|')\r\n    ) {\r\n      dispatch(Searchedge(e.target.value, checked))\r\n    } else {\r\n      // dispatch(Clearedge())\r\n    }\r\n  }\r\n\r\n  const onkeydownEdge = (e) => {\r\n    if (e.keyCode === 8) {\r\n      console.log('delete')\r\n    } else if (edgesearch.current.value !== '') {\r\n      dispatch(Searchedge(e.target.value))\r\n    } else {\r\n      dispatch(Clearedge())\r\n    }\r\n  }\r\n  const onkeydownNode = (e) => {\r\n    if (e.keyCode === 8) {\r\n      console.log('delete')\r\n    } else if (nodesearch.current.value !== '') {\r\n      dispatch(Searchnode(e.target.value))\r\n    } else {\r\n      dispatch(Clearnode())\r\n    }\r\n  }\r\n  return (\r\n    <>\r\n      <nav\r\n        className='navbar'\r\n        style={{\r\n          backgroundColor: 'rgb(32,32,32)',\r\n          width: '100%',\r\n          height: 70,\r\n          display: 'flex',\r\n          justifyContent: 'space-between',\r\n          alignItems: 'center',\r\n        }}\r\n      >\r\n        <div style={{ display: 'flex' }}>\r\n          <IconButton\r\n            className='menuicons'\r\n            onClick={() => props.setVisiblity((visiblity) => !visiblity)}\r\n            color='inherit'\r\n            aria-label='open drawer'\r\n          >\r\n            <MenuIcon style={{ color: 'grey' }} />\r\n          </IconButton>\r\n          <h3\r\n            className='netbook'\r\n            style={{ color: 'white', display: 'flex', alignItems: 'center' }}\r\n          >\r\n            Netbook\r\n          </h3>\r\n        </div>\r\n        {(props.page === 'Links' || props.page === 'Feed') && (\r\n          <div style={{ display: 'flex' }} className='filterfield'>\r\n            <TextField\r\n              style={{\r\n                color: 'white',\r\n                backgroundColor: 'rgb(18,18,18)',\r\n                display: 'flex',\r\n              }}\r\n              label='Node Filter'\r\n              fullWidth\r\n              margin='normal'\r\n              ref={nodesimpsearch}\r\n              onChange={onnodeChange}\r\n              // onChange={}\r\n              size='small'\r\n              variant='outlined'\r\n              InputProps={{\r\n                className: classes.multilineColor,\r\n\r\n                endAdornment: (\r\n                  <InputAdornment position='end'>\r\n                    <SearchIcon />\r\n                  </InputAdornment>\r\n                ),\r\n              }}\r\n            />\r\n            {props.page === 'Links' && (\r\n              <IconButton\r\n                className='menuicon'\r\n                onClick={() => props.setVissiblity((vissiblity) => !vissiblity)}\r\n                color='inherit'\r\n                aria-label='open drawer'\r\n              >\r\n                <TuneIcon style={{ color: 'grey' }} />\r\n              </IconButton>\r\n            )}\r\n          </div>\r\n        )}\r\n\r\n        <div className='gbtn' style={{ display: 'flex', alignItems: 'center' }}>\r\n          <GoogleLogout\r\n            className='gg'\r\n            color='white'\r\n            theme='dark'\r\n            clientId='542443202716-1162el1e1nqk02h64h08frl40vsl5hgp.apps.googleusercontent.com'\r\n            buttonText='Logout'\r\n            onLogoutSuccess={props.logout}\r\n          ></GoogleLogout>\r\n        </div>\r\n      </nav>\r\n      {/* <div className={classes.alertroot}>\r\n        {msgg ? (\r\n          <Alert severity='error'>{msgg}</Alert>\r\n        ) : msggg ? (\r\n          <Alert severity='error'>{msggg}</Alert>\r\n        ) : null}\r\n      </div> */}\r\n      <ToastContainer\r\n        position='bottom-center'\r\n        autoClose={5000}\r\n        hideProgressBar={false}\r\n        newestOnTop={false}\r\n        closeOnClick\r\n        rtl={false}\r\n        pauseOnFocusLoss\r\n        draggable\r\n        pauseOnHover\r\n      />\r\n\r\n      <div\r\n        className={props.vissible ? 'searchbars' : 'searchbars hidesearchbars'}\r\n      >\r\n        <div style={{ flex: 1 }}>\r\n          <TextField\r\n            style={{ width: 'calc(100% - 7px)' }}\r\n            label='Filter Node'\r\n            margin='normal'\r\n            type='text'\r\n            ref={nodesearch}\r\n            onChange={onChange}\r\n            // onKeyDown={onkeydownNode}\r\n            // onChange={}\r\n            size='small'\r\n            variant='outlined'\r\n            InputProps={{\r\n              className: classes.multilineColors,\r\n\r\n              endAdornment: (\r\n                <InputAdornment position='end'>\r\n                  <SearchIcon />\r\n                </InputAdornment>\r\n              ),\r\n            }}\r\n          />\r\n        </div>\r\n        <div style={{ flex: 1 }}>\r\n          <TextField\r\n            style={{ width: 'calc(100% - 7px)' }}\r\n            label='Filter Edge'\r\n            margin='normal'\r\n            ref={edgesearch}\r\n            onChange={onedgeChange}\r\n            disabled={checker}\r\n            // onKeyDown={onkeydownEdge}\r\n            // onChange={}\r\n            size='small'\r\n            variant='outlined'\r\n            InputProps={{\r\n              className: classes.multilineColors,\r\n\r\n              endAdornment: (\r\n                <InputAdornment position='end'>\r\n                  <SearchIcon />\r\n                </InputAdornment>\r\n              ),\r\n            }}\r\n          />\r\n        </div>\r\n        <div>\r\n          <Checkbox\r\n            checked={checked}\r\n            onChange={handleChange}\r\n            color='default'\r\n            inputProps={{ 'aria-label': 'checkbox with default color' }}\r\n          />\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Navbar\r\n",{"ruleId":"270","replacedBy":"271"},{"ruleId":"272","replacedBy":"273"},{"ruleId":"274","severity":1,"message":"275","line":9,"column":8,"nodeType":"276","messageId":"277","endLine":9,"endColumn":14},{"ruleId":"274","severity":1,"message":"278","line":3,"column":10,"nodeType":"276","messageId":"277","endLine":3,"endColumn":14},{"ruleId":"274","severity":1,"message":"279","line":4,"column":8,"nodeType":"276","messageId":"277","endLine":4,"endColumn":17},{"ruleId":"274","severity":1,"message":"280","line":13,"column":11,"nodeType":"276","messageId":"277","endLine":13,"endColumn":18},{"ruleId":"274","severity":1,"message":"281","line":13,"column":20,"nodeType":"276","messageId":"277","endLine":13,"endColumn":25},{"ruleId":"274","severity":1,"message":"282","line":13,"column":27,"nodeType":"276","messageId":"277","endLine":13,"endColumn":32},{"ruleId":"274","severity":1,"message":"283","line":4,"column":8,"nodeType":"276","messageId":"277","endLine":4,"endColumn":12},{"ruleId":"274","severity":1,"message":"278","line":17,"column":3,"nodeType":"276","messageId":"277","endLine":17,"endColumn":7},{"ruleId":"274","severity":1,"message":"284","line":18,"column":3,"nodeType":"276","messageId":"277","endLine":18,"endColumn":12},{"ruleId":"274","severity":1,"message":"285","line":20,"column":3,"nodeType":"276","messageId":"277","endLine":20,"endColumn":12},{"ruleId":"274","severity":1,"message":"286","line":22,"column":3,"nodeType":"276","messageId":"277","endLine":22,"endColumn":6},{"ruleId":"274","severity":1,"message":"287","line":30,"column":23,"nodeType":"276","messageId":"277","endLine":30,"endColumn":34},{"ruleId":"274","severity":1,"message":"287","line":33,"column":25,"nodeType":"276","messageId":"277","endLine":33,"endColumn":36},{"ruleId":"274","severity":1,"message":"280","line":46,"column":11,"nodeType":"276","messageId":"277","endLine":46,"endColumn":18},{"ruleId":"274","severity":1,"message":"282","line":46,"column":27,"nodeType":"276","messageId":"277","endLine":46,"endColumn":32},{"ruleId":"274","severity":1,"message":"288","line":48,"column":20,"nodeType":"276","messageId":"277","endLine":48,"endColumn":31},{"ruleId":"274","severity":1,"message":"289","line":48,"column":47,"nodeType":"276","messageId":"277","endLine":48,"endColumn":53},{"ruleId":"274","severity":1,"message":"290","line":9,"column":8,"nodeType":"276","messageId":"277","endLine":9,"endColumn":24},{"ruleId":"274","severity":1,"message":"291","line":14,"column":3,"nodeType":"276","messageId":"277","endLine":14,"endColumn":16},{"ruleId":"274","severity":1,"message":"292","line":15,"column":3,"nodeType":"276","messageId":"277","endLine":15,"endColumn":17},{"ruleId":"274","severity":1,"message":"278","line":24,"column":3,"nodeType":"276","messageId":"277","endLine":24,"endColumn":7},{"ruleId":"274","severity":1,"message":"284","line":25,"column":3,"nodeType":"276","messageId":"277","endLine":25,"endColumn":12},{"ruleId":"274","severity":1,"message":"286","line":29,"column":3,"nodeType":"276","messageId":"277","endLine":29,"endColumn":6},{"ruleId":"274","severity":1,"message":"282","line":41,"column":27,"nodeType":"276","messageId":"277","endLine":41,"endColumn":32},{"ruleId":"274","severity":1,"message":"288","line":43,"column":20,"nodeType":"276","messageId":"277","endLine":43,"endColumn":31},{"ruleId":"274","severity":1,"message":"293","line":43,"column":33,"nodeType":"276","messageId":"277","endLine":43,"endColumn":38},{"ruleId":"274","severity":1,"message":"289","line":43,"column":47,"nodeType":"276","messageId":"277","endLine":43,"endColumn":53},{"ruleId":"274","severity":1,"message":"287","line":44,"column":23,"nodeType":"276","messageId":"277","endLine":44,"endColumn":34},{"ruleId":"274","severity":1,"message":"287","line":47,"column":25,"nodeType":"276","messageId":"277","endLine":47,"endColumn":36},{"ruleId":"294","severity":1,"message":"295","line":58,"column":12,"nodeType":"276","messageId":"296","endLine":58,"endColumn":25},{"ruleId":"274","severity":1,"message":"287","line":59,"column":25,"nodeType":"276","messageId":"277","endLine":59,"endColumn":36},{"ruleId":"297","severity":1,"message":"298","line":79,"column":6,"nodeType":"299","endLine":79,"endColumn":15,"suggestions":"300"},{"ruleId":"274","severity":1,"message":"280","line":7,"column":11,"nodeType":"276","messageId":"277","endLine":7,"endColumn":18},{"ruleId":"274","severity":1,"message":"282","line":7,"column":27,"nodeType":"276","messageId":"277","endLine":7,"endColumn":32},{"ruleId":"274","severity":1,"message":"301","line":3,"column":8,"nodeType":"276","messageId":"277","endLine":3,"endColumn":13},{"ruleId":"274","severity":1,"message":"302","line":12,"column":8,"nodeType":"276","messageId":"277","endLine":12,"endColumn":22},{"ruleId":"274","severity":1,"message":"285","line":21,"column":3,"nodeType":"276","messageId":"277","endLine":21,"endColumn":12},{"ruleId":"274","severity":1,"message":"286","line":23,"column":3,"nodeType":"276","messageId":"277","endLine":23,"endColumn":6},{"ruleId":"274","severity":1,"message":"291","line":26,"column":3,"nodeType":"276","messageId":"277","endLine":26,"endColumn":16},{"ruleId":"274","severity":1,"message":"292","line":27,"column":3,"nodeType":"276","messageId":"277","endLine":27,"endColumn":17},{"ruleId":"274","severity":1,"message":"287","line":40,"column":23,"nodeType":"276","messageId":"277","endLine":40,"endColumn":34},{"ruleId":"274","severity":1,"message":"287","line":44,"column":25,"nodeType":"276","messageId":"277","endLine":44,"endColumn":36},{"ruleId":"297","severity":1,"message":"303","line":76,"column":6,"nodeType":"299","endLine":76,"endColumn":8,"suggestions":"304"},{"ruleId":"274","severity":1,"message":"305","line":133,"column":9,"nodeType":"276","messageId":"277","endLine":133,"endColumn":13},{"ruleId":"274","severity":1,"message":"306","line":134,"column":9,"nodeType":"276","messageId":"277","endLine":134,"endColumn":20},{"ruleId":"274","severity":1,"message":"280","line":7,"column":11,"nodeType":"276","messageId":"277","endLine":7,"endColumn":18},{"ruleId":"274","severity":1,"message":"282","line":7,"column":27,"nodeType":"276","messageId":"277","endLine":7,"endColumn":32},{"ruleId":"274","severity":1,"message":"284","line":9,"column":16,"nodeType":"276","messageId":"277","endLine":9,"endColumn":25},{"ruleId":"274","severity":1,"message":"289","line":35,"column":47,"nodeType":"276","messageId":"277","endLine":35,"endColumn":53},{"ruleId":"274","severity":1,"message":"307","line":38,"column":20,"nodeType":"276","messageId":"277","endLine":38,"endColumn":32},{"ruleId":"274","severity":1,"message":"308","line":38,"column":48,"nodeType":"276","messageId":"277","endLine":38,"endColumn":58},{"ruleId":"274","severity":1,"message":"309","line":39,"column":12,"nodeType":"276","messageId":"277","endLine":39,"endColumn":16},{"ruleId":"274","severity":1,"message":"287","line":42,"column":23,"nodeType":"276","messageId":"277","endLine":42,"endColumn":34},{"ruleId":"274","severity":1,"message":"287","line":49,"column":25,"nodeType":"276","messageId":"277","endLine":49,"endColumn":36},{"ruleId":"310","severity":1,"message":"311","line":339,"column":19,"nodeType":"312","endLine":339,"endColumn":41},{"ruleId":"310","severity":1,"message":"311","line":350,"column":19,"nodeType":"312","endLine":350,"endColumn":42},{"ruleId":"310","severity":1,"message":"311","line":361,"column":19,"nodeType":"312","endLine":361,"endColumn":41},{"ruleId":"274","severity":1,"message":"313","line":7,"column":3,"nodeType":"276","messageId":"277","endLine":7,"endColumn":26},{"ruleId":"274","severity":1,"message":"314","line":9,"column":3,"nodeType":"276","messageId":"277","endLine":9,"endColumn":23},{"ruleId":"274","severity":1,"message":"280","line":56,"column":11,"nodeType":"276","messageId":"277","endLine":56,"endColumn":18},{"ruleId":"274","severity":1,"message":"282","line":56,"column":27,"nodeType":"276","messageId":"277","endLine":56,"endColumn":32},{"ruleId":"274","severity":1,"message":"315","line":57,"column":9,"nodeType":"276","messageId":"277","endLine":57,"endColumn":24},{"ruleId":"274","severity":1,"message":"316","line":125,"column":13,"nodeType":"276","messageId":"277","endLine":125,"endColumn":19},{"ruleId":"274","severity":1,"message":"317","line":1,"column":10,"nodeType":"276","messageId":"277","endLine":1,"endColumn":16},{"ruleId":"274","severity":1,"message":"318","line":3,"column":3,"nodeType":"276","messageId":"277","endLine":3,"endColumn":16},{"ruleId":"274","severity":1,"message":"319","line":4,"column":3,"nodeType":"276","messageId":"277","endLine":4,"endColumn":19},{"ruleId":"274","severity":1,"message":"320","line":6,"column":3,"nodeType":"276","messageId":"277","endLine":6,"endColumn":21},{"ruleId":"274","severity":1,"message":"321","line":19,"column":3,"nodeType":"276","messageId":"277","endLine":19,"endColumn":17},{"ruleId":"274","severity":1,"message":"322","line":20,"column":3,"nodeType":"276","messageId":"277","endLine":20,"endColumn":22},{"ruleId":"274","severity":1,"message":"323","line":22,"column":3,"nodeType":"276","messageId":"277","endLine":22,"endColumn":19},{"ruleId":"274","severity":1,"message":"324","line":23,"column":3,"nodeType":"276","messageId":"277","endLine":23,"endColumn":22},{"ruleId":"274","severity":1,"message":"325","line":27,"column":3,"nodeType":"276","messageId":"277","endLine":27,"endColumn":19},{"ruleId":"274","severity":1,"message":"326","line":28,"column":3,"nodeType":"276","messageId":"277","endLine":28,"endColumn":20},{"ruleId":"274","severity":1,"message":"327","line":29,"column":3,"nodeType":"276","messageId":"277","endLine":29,"endColumn":20},{"ruleId":"274","severity":1,"message":"328","line":43,"column":3,"nodeType":"276","messageId":"277","endLine":43,"endColumn":21},{"ruleId":"274","severity":1,"message":"329","line":44,"column":3,"nodeType":"276","messageId":"277","endLine":44,"endColumn":24},{"ruleId":"274","severity":1,"message":"330","line":45,"column":3,"nodeType":"276","messageId":"277","endLine":45,"endColumn":24},{"ruleId":"274","severity":1,"message":"331","line":128,"column":11,"nodeType":"276","messageId":"277","endLine":128,"endColumn":23},{"ruleId":"274","severity":1,"message":"332","line":129,"column":11,"nodeType":"276","messageId":"277","endLine":129,"endColumn":23},{"ruleId":"274","severity":1,"message":"333","line":374,"column":11,"nodeType":"276","messageId":"277","endLine":374,"endColumn":24},{"ruleId":"274","severity":1,"message":"334","line":458,"column":11,"nodeType":"276","messageId":"277","endLine":458,"endColumn":25},{"ruleId":"335","severity":1,"message":"336","line":645,"column":28,"nodeType":"337","messageId":"338","endLine":645,"endColumn":30},{"ruleId":"335","severity":1,"message":"339","line":648,"column":28,"nodeType":"337","messageId":"338","endLine":648,"endColumn":30},{"ruleId":"335","severity":1,"message":"336","line":654,"column":23,"nodeType":"337","messageId":"338","endLine":654,"endColumn":25},{"ruleId":"335","severity":1,"message":"336","line":654,"column":59,"nodeType":"337","messageId":"338","endLine":654,"endColumn":61},{"ruleId":"335","severity":1,"message":"336","line":728,"column":28,"nodeType":"337","messageId":"338","endLine":728,"endColumn":30},{"ruleId":"274","severity":1,"message":"340","line":18,"column":10,"nodeType":"276","messageId":"277","endLine":18,"endColumn":24},{"ruleId":"274","severity":1,"message":"284","line":22,"column":3,"nodeType":"276","messageId":"277","endLine":22,"endColumn":12},{"ruleId":"274","severity":1,"message":"291","line":29,"column":3,"nodeType":"276","messageId":"277","endLine":29,"endColumn":16},{"ruleId":"274","severity":1,"message":"341","line":45,"column":3,"nodeType":"276","messageId":"277","endLine":45,"endColumn":12},{"ruleId":"274","severity":1,"message":"342","line":50,"column":3,"nodeType":"276","messageId":"277","endLine":50,"endColumn":12},{"ruleId":"274","severity":1,"message":"343","line":51,"column":3,"nodeType":"276","messageId":"277","endLine":51,"endColumn":12},{"ruleId":"274","severity":1,"message":"344","line":58,"column":10,"nodeType":"276","messageId":"277","endLine":58,"endColumn":21},{"ruleId":"274","severity":1,"message":"345","line":96,"column":10,"nodeType":"276","messageId":"277","endLine":96,"endColumn":15},{"ruleId":"274","severity":1,"message":"346","line":98,"column":10,"nodeType":"276","messageId":"277","endLine":98,"endColumn":17},{"ruleId":"274","severity":1,"message":"347","line":99,"column":19,"nodeType":"276","messageId":"277","endLine":99,"endColumn":29},{"ruleId":"274","severity":1,"message":"348","line":100,"column":10,"nodeType":"276","messageId":"277","endLine":100,"endColumn":17},{"ruleId":"274","severity":1,"message":"349","line":100,"column":19,"nodeType":"276","messageId":"277","endLine":100,"endColumn":29},{"ruleId":"274","severity":1,"message":"350","line":103,"column":10,"nodeType":"276","messageId":"277","endLine":103,"endColumn":21},{"ruleId":"274","severity":1,"message":"351","line":109,"column":10,"nodeType":"276","messageId":"277","endLine":109,"endColumn":20},{"ruleId":"274","severity":1,"message":"352","line":109,"column":22,"nodeType":"276","messageId":"277","endLine":109,"endColumn":35},{"ruleId":"274","severity":1,"message":"353","line":112,"column":10,"nodeType":"276","messageId":"277","endLine":112,"endColumn":22},{"ruleId":"274","severity":1,"message":"354","line":112,"column":24,"nodeType":"276","messageId":"277","endLine":112,"endColumn":39},{"ruleId":"274","severity":1,"message":"355","line":113,"column":20,"nodeType":"276","messageId":"277","endLine":113,"endColumn":31},{"ruleId":"274","severity":1,"message":"356","line":134,"column":10,"nodeType":"276","messageId":"277","endLine":134,"endColumn":21},{"ruleId":"274","severity":1,"message":"357","line":134,"column":23,"nodeType":"276","messageId":"277","endLine":134,"endColumn":37},{"ruleId":"274","severity":1,"message":"358","line":139,"column":10,"nodeType":"276","messageId":"277","endLine":139,"endColumn":26},{"ruleId":"274","severity":1,"message":"359","line":139,"column":28,"nodeType":"276","messageId":"277","endLine":139,"endColumn":47},{"ruleId":"274","severity":1,"message":"307","line":157,"column":20,"nodeType":"276","messageId":"277","endLine":157,"endColumn":32},{"ruleId":"274","severity":1,"message":"308","line":157,"column":48,"nodeType":"276","messageId":"277","endLine":157,"endColumn":58},{"ruleId":"274","severity":1,"message":"289","line":167,"column":12,"nodeType":"276","messageId":"277","endLine":167,"endColumn":18},{"ruleId":"297","severity":1,"message":"360","line":177,"column":6,"nodeType":"299","endLine":177,"endColumn":8,"suggestions":"361"},{"ruleId":"297","severity":1,"message":"362","line":181,"column":18,"nodeType":"363","endLine":181,"endColumn":69},{"ruleId":"297","severity":1,"message":"364","line":190,"column":19,"nodeType":"363","endLine":190,"endColumn":70},{"ruleId":"297","severity":1,"message":"365","line":198,"column":20,"nodeType":"363","endLine":198,"endColumn":77},{"ruleId":"297","severity":1,"message":"366","line":206,"column":21,"nodeType":"363","endLine":206,"endColumn":78},{"ruleId":"297","severity":1,"message":"367","line":264,"column":6,"nodeType":"299","endLine":264,"endColumn":34,"suggestions":"368"},{"ruleId":"274","severity":1,"message":"309","line":305,"column":12,"nodeType":"276","messageId":"277","endLine":305,"endColumn":16},{"ruleId":"274","severity":1,"message":"287","line":308,"column":23,"nodeType":"276","messageId":"277","endLine":308,"endColumn":34},{"ruleId":"274","severity":1,"message":"287","line":311,"column":25,"nodeType":"276","messageId":"277","endLine":311,"endColumn":36},{"ruleId":"274","severity":1,"message":"369","line":397,"column":9,"nodeType":"276","messageId":"277","endLine":397,"endColumn":27},{"ruleId":"370","severity":1,"message":"371","line":463,"column":33,"nodeType":"372","messageId":"373","endLine":463,"endColumn":35},{"ruleId":"274","severity":1,"message":"374","line":755,"column":9,"nodeType":"276","messageId":"277","endLine":755,"endColumn":19},{"ruleId":"310","severity":1,"message":"311","line":817,"column":19,"nodeType":"312","endLine":817,"endColumn":41},{"ruleId":"310","severity":1,"message":"311","line":828,"column":19,"nodeType":"312","endLine":828,"endColumn":42},{"ruleId":"310","severity":1,"message":"311","line":839,"column":19,"nodeType":"312","endLine":839,"endColumn":41},{"ruleId":"310","severity":1,"message":"311","line":1287,"column":19,"nodeType":"312","endLine":1287,"endColumn":41},{"ruleId":"310","severity":1,"message":"311","line":1298,"column":19,"nodeType":"312","endLine":1298,"endColumn":42},{"ruleId":"310","severity":1,"message":"311","line":1309,"column":19,"nodeType":"312","endLine":1309,"endColumn":41},{"ruleId":"274","severity":1,"message":"375","line":1593,"column":9,"nodeType":"276","messageId":"277","endLine":1593,"endColumn":25},{"ruleId":"274","severity":1,"message":"376","line":1597,"column":9,"nodeType":"276","messageId":"277","endLine":1597,"endColumn":18},{"ruleId":"274","severity":1,"message":"377","line":1601,"column":9,"nodeType":"276","messageId":"277","endLine":1601,"endColumn":21},{"ruleId":"274","severity":1,"message":"378","line":7,"column":8,"nodeType":"276","messageId":"277","endLine":7,"endColumn":15},{"ruleId":"274","severity":1,"message":"319","line":4,"column":3,"nodeType":"276","messageId":"277","endLine":4,"endColumn":19},{"ruleId":"274","severity":1,"message":"329","line":24,"column":3,"nodeType":"276","messageId":"277","endLine":24,"endColumn":24},{"ruleId":"274","severity":1,"message":"330","line":25,"column":3,"nodeType":"276","messageId":"277","endLine":25,"endColumn":24},{"ruleId":"274","severity":1,"message":"328","line":26,"column":3,"nodeType":"276","messageId":"277","endLine":26,"endColumn":21},{"ruleId":"370","severity":1,"message":"379","line":133,"column":29,"nodeType":"372","messageId":"380","endLine":133,"endColumn":31},{"ruleId":"370","severity":1,"message":"379","line":166,"column":26,"nodeType":"372","messageId":"380","endLine":166,"endColumn":28},{"ruleId":"335","severity":1,"message":"339","line":330,"column":26,"nodeType":"337","messageId":"338","endLine":330,"endColumn":28},{"ruleId":"335","severity":1,"message":"339","line":337,"column":36,"nodeType":"337","messageId":"338","endLine":337,"endColumn":38},{"ruleId":"335","severity":1,"message":"339","line":340,"column":36,"nodeType":"337","messageId":"338","endLine":340,"endColumn":38},{"ruleId":"274","severity":1,"message":"381","line":9,"column":8,"nodeType":"276","messageId":"277","endLine":9,"endColumn":13},{"ruleId":"274","severity":1,"message":"288","line":30,"column":14,"nodeType":"276","messageId":"277","endLine":30,"endColumn":25},{"ruleId":"274","severity":1,"message":"293","line":33,"column":5,"nodeType":"276","messageId":"277","endLine":33,"endColumn":10},{"ruleId":"274","severity":1,"message":"289","line":34,"column":12,"nodeType":"276","messageId":"277","endLine":34,"endColumn":18},{"ruleId":"274","severity":1,"message":"287","line":37,"column":23,"nodeType":"276","messageId":"277","endLine":37,"endColumn":34},{"ruleId":"274","severity":1,"message":"382","line":44,"column":10,"nodeType":"276","messageId":"277","endLine":44,"endColumn":17},{"ruleId":"274","severity":1,"message":"383","line":44,"column":19,"nodeType":"276","messageId":"277","endLine":44,"endColumn":29},{"ruleId":"274","severity":1,"message":"384","line":45,"column":10,"nodeType":"276","messageId":"277","endLine":45,"endColumn":17},{"ruleId":"274","severity":1,"message":"385","line":45,"column":19,"nodeType":"276","messageId":"277","endLine":45,"endColumn":29},{"ruleId":"274","severity":1,"message":"386","line":46,"column":10,"nodeType":"276","messageId":"277","endLine":46,"endColumn":20},{"ruleId":"274","severity":1,"message":"387","line":46,"column":22,"nodeType":"276","messageId":"277","endLine":46,"endColumn":35},{"ruleId":"274","severity":1,"message":"388","line":47,"column":10,"nodeType":"276","messageId":"277","endLine":47,"endColumn":14},{"ruleId":"274","severity":1,"message":"389","line":47,"column":16,"nodeType":"276","messageId":"277","endLine":47,"endColumn":23},{"ruleId":"274","severity":1,"message":"390","line":49,"column":10,"nodeType":"276","messageId":"277","endLine":49,"endColumn":15},{"ruleId":"274","severity":1,"message":"391","line":49,"column":17,"nodeType":"276","messageId":"277","endLine":49,"endColumn":25},{"ruleId":"274","severity":1,"message":"392","line":51,"column":19,"nodeType":"276","messageId":"277","endLine":51,"endColumn":29},{"ruleId":"294","severity":1,"message":"393","line":170,"column":11,"nodeType":"276","messageId":"296","endLine":170,"endColumn":22},{"ruleId":"294","severity":1,"message":"393","line":246,"column":11,"nodeType":"276","messageId":"296","endLine":246,"endColumn":22},{"ruleId":"274","severity":1,"message":"394","line":293,"column":9,"nodeType":"276","messageId":"277","endLine":293,"endColumn":22},{"ruleId":"274","severity":1,"message":"395","line":302,"column":9,"nodeType":"276","messageId":"277","endLine":302,"endColumn":22},"no-native-reassign",["396"],"no-negated-in-lhs",["397"],"no-unused-vars","'Import' is defined but never used.","Identifier","unusedVar","'Grid' is defined but never used.","'googleimg' is defined but never used.","'loading' is assigned a value but never used.","'oauth' is assigned a value but never used.","'error' is assigned a value but never used.","'Link' is defined but never used.","'Container' is defined but never used.","'TextField' is defined but never used.","'Fab' is defined but never used.","'innerHeight' is assigned a value but never used.","'nodeloading' is assigned a value but never used.","'errror' is assigned a value but never used.","'TextareaAutosize' is defined but never used.","'ThemeProvider' is defined but never used.","'createMuiTheme' is defined but never used.","'nodde' is assigned a value but never used.","no-redeclare","'getModalStyle' is already defined.","redeclared","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'oauth'. Either include it or remove the dependency array.","ArrayExpression",["398"],"'Paper' is defined but never used.","'StripeCheckout' is defined but never used.","React Hook useEffect has a missing dependency: 'paymentdata'. Either include it or remove the dependency array.",["399"],"'bull' is assigned a value but never used.","'handletoken' is assigned a value but never used.","'oauthloading' is assigned a value but never used.","'oautherror' is assigned a value but never used.","'rand' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'GET_OAUTHUPDATE_REQUEST' is defined but never used.","'GET_OAUTHUPDATE_FAIL' is defined but never used.","'handleSubmitPay' is assigned a value but never used.","'config' is assigned a value but never used.","'indigo' is defined but never used.","'GET_NODE_FAIL' is defined but never used.","'GET_NODE_REQUEST' is defined but never used.","'GET_NODE_SUCCESSES' is defined but never used.","'HAVE_EDGE_FAIL' is defined but never used.","'SEARCH_EDGE_REQUEST' is defined but never used.","'SEARCH_NODE_FAIL' is defined but never used.","'SEARCH_NODE_REQUEST' is defined but never used.","'SEARCH_EDGE_FAIL' is defined but never used.","'HAVE_EDGE_REQUEST' is defined but never used.","'HAVE_EDGE_SUCCESS' is defined but never used.","'GET_AIQUERIES_FAIL' is defined but never used.","'GET_AIQUERIES_REQUEST' is defined but never used.","'GET_AIQUERIES_SUCCESS' is defined but never used.","'checkededge1' is defined but never used.","'checkednode1' is defined but never used.","'filternodeees' is assigned a value but never used.","'nodesoforedges' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","'ToastContainer' is defined but never used.","'Edgefetch' is defined but never used.","'NodeAdded' is defined but never used.","'EdgeAdded' is defined but never used.","'NewReleases' is defined but never used.","'popup' is assigned a value but never used.","'popdown' is assigned a value but never used.","'setNewnode' is assigned a value but never used.","'newedge' is assigned a value but never used.","'setNewedge' is assigned a value but never used.","'sidebarOpen' is assigned a value but never used.","'searchdata' is assigned a value but never used.","'setSearchdata' is assigned a value but never used.","'filtereddata' is assigned a value but never used.","'setFiltereddata' is assigned a value but never used.","'setApilabel' is assigned a value but never used.","'randomcolor' is assigned a value but never used.","'setRandomcolor' is assigned a value but never used.","'sendinggraphdata' is assigned a value but never used.","'setSendinggraphdata' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'nodde', and 'oauth'. Either include them or remove the dependency array.",["400"],"Assignments to the 'nodefilt' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","ChainExpression","Assignments to the 'nodefilts' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Assignments to the 'nodefiltss' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Assignments to the 'nodefiltsss' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","React Hook useEffect has a missing dependency: 'nodde?.nodes'. Either include it or remove the dependency array.",["401"],"'handlesearchchange' is assigned a value but never used.","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'blackTheme' is assigned a value but never used.","'onSetSidebarOpen' is assigned a value but never used.","'showmodal' is assigned a value but never used.","'addedgemodal' is assigned a value but never used.","'AddIcon' is defined but never used.","Array.prototype.map() expects a return value from arrow function.","expectedInside","'Alert' is defined but never used.","'edgeval' is assigned a value but never used.","'setEdgeval' is assigned a value but never used.","'nodeval' is assigned a value but never used.","'setNodeval' is assigned a value but never used.","'searchedge' is assigned a value but never used.","'setSearchedge' is assigned a value but never used.","'msgg' is assigned a value but never used.","'setMsgg' is assigned a value but never used.","'msggg' is assigned a value but never used.","'setMsggg' is assigned a value but never used.","'setChecker' is assigned a value but never used.","'charRepeats' is already defined.","'onkeydownEdge' is assigned a value but never used.","'onkeydownNode' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"402","fix":"403"},{"desc":"404","fix":"405"},{"desc":"406","fix":"407"},{"desc":"408","fix":"409"},"Update the dependencies array to be: [loading, oauth]",{"range":"410","text":"411"},"Update the dependencies array to be: [paymentdata]",{"range":"412","text":"413"},"Update the dependencies array to be: [dispatch, nodde, oauth]",{"range":"414","text":"415"},"Update the dependencies array to be: [haveedgedetails, nodde?.nodes, nodepopup]",{"range":"416","text":"417"},[2203,2212],"[loading, oauth]",[2203,2205],"[paymentdata]",[6307,6309],"[dispatch, nodde, oauth]",[8911,8939],"[haveedgedetails, nodde?.nodes, nodepopup]"]