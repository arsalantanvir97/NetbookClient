[{"E:\\mob-app1\\netbook-client\\src\\index.js":"1","E:\\mob-app1\\netbook-client\\src\\reportWebVitals.js":"2","E:\\mob-app1\\netbook-client\\src\\theme.js":"3","E:\\mob-app1\\netbook-client\\src\\App.js":"4","E:\\mob-app1\\netbook-client\\src\\store.js":"5","E:\\mob-app1\\netbook-client\\src\\screens\\Home.js":"6","E:\\mob-app1\\netbook-client\\src\\screens\\FeedView.js":"7","E:\\mob-app1\\netbook-client\\src\\screens\\Links.js":"8","E:\\mob-app1\\netbook-client\\src\\reducers\\oauthReducer.js":"9","E:\\mob-app1\\netbook-client\\src\\components\\PrivateRoute.js":"10","E:\\mob-app1\\netbook-client\\src\\screens\\Profile.js":"11","E:\\mob-app1\\netbook-client\\src\\screens\\Query.js":"12","E:\\mob-app1\\netbook-client\\src\\components\\PublicRoute.js":"13","E:\\mob-app1\\netbook-client\\src\\reducers\\nodeReducer.js":"14","E:\\mob-app1\\netbook-client\\src\\components\\Sidebar.js":"15","E:\\mob-app1\\netbook-client\\src\\components\\Navbar.js":"16","E:\\mob-app1\\netbook-client\\src\\constants\\oauthConstant.js":"17","E:\\mob-app1\\netbook-client\\src\\constants\\nodeConstant.js":"18","E:\\mob-app1\\netbook-client\\src\\actions\\oauthAction.js":"19","E:\\mob-app1\\netbook-client\\src\\actions\\nodeAction.js":"20","E:\\mob-app1\\netbook-client\\src\\screens\\Payment.js":"21","E:\\mob-app1\\netbook-client\\src\\components\\HomePage.js":"22","E:\\mob-app1\\netbook-client\\src\\components\\CardInput.js":"23"},{"size":720,"mtime":1612859642697,"results":"24","hashOfConfig":"25"},{"size":375,"mtime":1612859642713,"results":"26","hashOfConfig":"25"},{"size":176,"mtime":1612859642791,"results":"27","hashOfConfig":"25"},{"size":1254,"mtime":1613825070645,"results":"28","hashOfConfig":"25"},{"size":1829,"mtime":1614086177135,"results":"29","hashOfConfig":"25"},{"size":2371,"mtime":1614089179491,"results":"30","hashOfConfig":"25"},{"size":14707,"mtime":1612859642744,"results":"31","hashOfConfig":"25"},{"size":42158,"mtime":1615362558970,"results":"32","hashOfConfig":"25"},{"size":1250,"mtime":1614098516884,"results":"33","hashOfConfig":"25"},{"size":480,"mtime":1612860520503,"results":"34","hashOfConfig":"25"},{"size":2852,"mtime":1613572344345,"results":"35","hashOfConfig":"25"},{"size":7645,"mtime":1614154307952,"results":"36","hashOfConfig":"25"},{"size":484,"mtime":1612860464603,"results":"37","hashOfConfig":"25"},{"size":25060,"mtime":1615472778200,"results":"38","hashOfConfig":"25"},{"size":2778,"mtime":1613553802444,"results":"39","hashOfConfig":"25"},{"size":11117,"mtime":1615466050347,"results":"40","hashOfConfig":"25"},{"size":388,"mtime":1614086048335,"results":"41","hashOfConfig":"25"},{"size":1955,"mtime":1615368835661,"results":"42","hashOfConfig":"25"},{"size":1963,"mtime":1614157544331,"results":"43","hashOfConfig":"25"},{"size":9537,"mtime":1615472522289,"results":"44","hashOfConfig":"25"},{"size":16399,"mtime":1613992179412,"results":"45","hashOfConfig":"25"},{"size":4929,"mtime":1614062671746,"results":"46","hashOfConfig":"25"},{"size":597,"mtime":1613824454082,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"1gqpamk",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"50"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"50"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"50"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":30,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"50"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"50"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"50"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"50"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"50"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"50"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"50"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"50"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"E:\\mob-app1\\netbook-client\\src\\index.js",[],["106","107"],"E:\\mob-app1\\netbook-client\\src\\reportWebVitals.js",[],"E:\\mob-app1\\netbook-client\\src\\theme.js",[],"E:\\mob-app1\\netbook-client\\src\\App.js",["108"],"import React from 'react'\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\r\nimport Home from './screens/Home'\r\nimport Links from './screens/Links'\r\nimport PublicRoute from './components/PublicRoute'\r\nimport FeedView from './screens/FeedView'\r\nimport Profile from './screens/Profile'\r\nimport PrivateRoute from './components/PrivateRoute'\r\nimport Import from './screens/Query'\r\nimport Query from './screens/Query'\r\nimport HomePage from './components/HomePage'\r\nimport Payment from './screens/Payment'\r\nimport { Elements } from '@stripe/react-stripe-js'\r\nimport { loadStripe } from '@stripe/stripe-js'\r\nconst stripePromise = loadStripe('pk_test_IdCqGO7sona7aWZqqiXTs3MN00vl1vkEQa')\r\n\r\nconst App = () => {\r\n  return (\r\n    <Router>\r\n      <PublicRoute path='/' component={Home} exact />\r\n      <PrivateRoute path='/graph' component={Links} />\r\n      <PrivateRoute path='/feed' component={FeedView} />\r\n      <PrivateRoute path='/profile' component={Profile} />\r\n      <PrivateRoute path='/query' component={Query} />\r\n      <PrivateRoute path='/payment' component={Payment} />\r\n      <Elements stripe={stripePromise}>\r\n        <Route path='/homepage' component={HomePage} />\r\n      </Elements>\r\n    </Router>\r\n  )\r\n}\r\n\r\nexport default App\r\n","E:\\mob-app1\\netbook-client\\src\\store.js",[],"E:\\mob-app1\\netbook-client\\src\\screens\\Home.js",["109","110","111","112","113"],"import React from 'react'\r\nimport GoogleLogin from 'react-google-login'\r\nimport { Grid, Container } from '@material-ui/core'\r\nimport googleimg from '../images/google.png'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport './home.css'\r\nimport { OauthLogin } from '../actions/oauthAction'\r\n\r\nconst Home = ({ history }) => {\r\n  const dispatch = useDispatch()\r\n  const package = '602f94f28be78a84324eeb1a'\r\n  const getOauth = useSelector((state) => state.getOauth)\r\n  const { loading, oauth, error } = getOauth\r\n  const resgoogle = (response) => {\r\n    console.log(response)\r\n    console.log(\r\n      response.profileObj.email,\r\n      response.profileObj.name,\r\n      response.profileObj.imageUrl,\r\n      response.tokenObj.access_token,\r\n      response.tokenObj.expires_at,\r\n      response.tokenObj.expires_in\r\n    )\r\n    console.log(response.profileObj)\r\n    if (response) {\r\n      dispatch(\r\n        OauthLogin(\r\n          response.profileObj.name,\r\n          response.profileObj.email,\r\n          response.profileObj.imageUrl,\r\n          response.tokenObj.access_token,\r\n          response.tokenObj.expires_in,\r\n          response.tokenObj.expires_at,\r\n          package\r\n        )\r\n      )\r\n      history.push('/graph')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div style={{ display: 'flex' }}>\r\n      <div className='hhh'>\r\n        <Container>\r\n          <div style={{ textAlign: 'center', height: 20 }}>\r\n            <h1>Netbook</h1>\r\n          </div>\r\n          <div\r\n            style={{\r\n              display: 'flex',\r\n              flexDirection: 'column',\r\n\r\n              justifyContent: 'center',\r\n              height: 'calc(100vh - 20px)',\r\n            }}\r\n          >\r\n            <h2>Login to your account</h2>\r\n            <div style={{ height: 15 }}></div>\r\n            <GoogleLogin\r\n              theme='dark'\r\n              className='button'\r\n              clientId='542443202716-1162el1e1nqk02h64h08frl40vsl5hgp.apps.googleusercontent.com'\r\n              buttonText='Login with Google'\r\n              onSuccess={resgoogle}\r\n              onFailure={resgoogle}\r\n              isSignedIn={true}\r\n              cookiePolicy={'single_host_origin'}\r\n            />\r\n          </div>\r\n        </Container>\r\n      </div>\r\n\r\n      <div style={{ flex: 1 }}>\r\n        <div className='img'></div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Home\r\n","E:\\mob-app1\\netbook-client\\src\\screens\\FeedView.js",["114","115","116","117","118","119","120","121","122","123"],"import React, { useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport ClearIcon from '@material-ui/icons/Clear'\r\nimport CircularProgress from '@material-ui/core/CircularProgress'\r\nimport DeleteIcon from '@material-ui/icons/Delete'\r\nimport TagsInput from 'react-tagsinput'\r\nimport { OauthLogout } from '../actions/oauthAction'\r\nimport { Grid, Container, Modal, TextField, Button } from '@material-ui/core'\r\n\r\nimport 'react-tagsinput/react-tagsinput.css' // If using WebPack and style-loader.\r\nimport { NodeUpdate, NodeDeletion, Nodefetch } from '../actions/nodeAction'\r\nimport './home.css'\r\nimport {\r\n  makeStyles,\r\n} from '@material-ui/core/styles'\r\nimport Navbar from '../components/Navbar'\r\nimport Sidebar from '../components/Sidebar'\r\n\r\nconst FeedView = ({ history }) => {\r\n  const [visible, setVisiblity] = useState(false)\r\n  const [modalStyle] = useState(getModalStyle)\r\n  const [openViewNode, setOpenViewNode] = useState(false)\r\n  const [haveupdatenode, setHaveupdatenode] = useState(false)\r\n\r\n  const [updatenodeid, setUpdatenodeid] = useState('')\r\n  const [updatenodetype, setUpdatenodetype] = useState('')\r\n  const [updatenodetags, setUpdatenodetags] = useState([])\r\n  const [updateattributes, setUpdateattributes] = useState([])\r\n\r\n  const [updateinputfields, setUpdateinputfields] = useState([])\r\n\r\n  const [nodepopup, setNodepopup] = useState([])\r\n  const dispatch = useDispatch()\r\n\r\n  const getNode = useSelector((state) => state.getNode)\r\n  const { loading: nodeloading, nodde, error: errror } = getNode\r\n\r\n  const getOauth = useSelector((state) => state.getOauth)\r\n  const { loading: oauthloading, oauth, error: oautherror } = getOauth\r\n  function rand() {\r\n    return Math.round(Math.random() * 20) - 10\r\n  }\r\n  const { innerWidth, innerHeight } = window\r\n\r\n  function getModalStyle() {\r\n    const { innerWidth, innerHeight } = window\r\n\r\n    console.log(innerWidth)\r\n    let top = 50,\r\n      left = innerWidth < 600 ? 0 : 50\r\n    return {\r\n      top: `${top}%`,\r\n      left: `${left}%`,\r\n      transform: `translate(-${left}%, -${top}%)`,\r\n    }\r\n  }\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n      position: 'absolute',\r\n      width: innerWidth > 600 ? 600 : '100%',\r\n\r\n      backgroundColor: theme.palette.background.paper,\r\n      // border: '2px solid #000',\r\n      boxShadow: theme.shadows[5],\r\n      padding: theme.spacing(2, 4, 3),\r\n      maxHeight: 'calc(100vh - 200px)',\r\n      overflow: 'auto !important',\r\n      top: '50%',\r\n    },\r\n    multilineColor: {\r\n      color: 'white',\r\n    },\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: 120,\r\n      width: '100%',\r\n    },\r\n    selectEmpty: {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n    root: {\r\n      width: '100%',\r\n      '& > * + *': {\r\n        marginTop: theme.spacing(2),\r\n      },\r\n    },\r\n    rooot: {\r\n      display: 'flex',\r\n      '& > * + *': {\r\n        marginLeft: theme.spacing(2),\r\n\r\n        justifyContent: 'center !important',\r\n      },\r\n    },\r\n  }))\r\n  const handleOpenViewNode = () => {\r\n    setOpenViewNode(true)\r\n  }\r\n  const handleClose = () => {\r\n    setOpenViewNode(false)\r\n    setHaveupdatenode(false)\r\n  }\r\n\r\n  const handleupdatenode = () => {\r\n    updatethenode()\r\n  }\r\n  const deleteanode = () => {\r\n    dispatch(NodeDeletion(nodepopup?._id))\r\n    handleClose()\r\n  }\r\n  const updatethenode = () => {\r\n    setHaveupdatenode(true)\r\n  }\r\n  const handlenodeChange = (updatenodetags) => {\r\n    setUpdatenodetags(updatenodetags)\r\n  }\r\n  const handlechangeupdateinput = (index, event) => {\r\n    const values = [...updateinputfields]\r\n    values[index][event.target.name] = event.target.value\r\n    setUpdateinputfields(values)\r\n    setUpdateattributes(updateinputfields)\r\n  }\r\n  const updateinputfieldsremove = (index) => {\r\n    const values = [...updateinputfields]\r\n    values.splice(index, 1)\r\n    setUpdateinputfields(values)\r\n  }\r\n  const handleclickupdatefields = () => {\r\n    setUpdateinputfields([\r\n      ...updateinputfields,\r\n      { attributeName: '', attributeValue: '', attributeType: '' },\r\n    ])\r\n  }\r\n  const showdetails = (nodeid) => {\r\n    const filterednode = nodde?.nodes.filter((node) => node._id === nodeid)[0]\r\n    console.log('ho', filterednode)\r\n    setNodepopup(filterednode)\r\n    console.log('hiii', nodepopup)\r\n    handleOpenViewNode()\r\n  }\r\n  const submitupdatenodehandler = (e) => {\r\n    e.preventDefault()\r\n\r\n    dispatch(\r\n      NodeUpdate(\r\n        nodepopup?._id,\r\n        oauth?._id,\r\n        updatenodeid,\r\n        updatenodetype,\r\n        updatenodetags,\r\n        updateattributes\r\n      )\r\n    )\r\n    dispatch(Nodefetch(oauth._id))\r\n    handleClose()\r\n  }\r\n\r\n  const classes = useStyles()\r\n\r\n  const boddy = (\r\n    <div style={modalStyle} className={classes.paper}>\r\n      <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n        <h2 id='simple-modal-title'>View Node</h2>\r\n        <IconButton\r\n          onClick={handleClose}\r\n          color='inherit'\r\n          aria-label='open drawer'\r\n          style={{ marginTop: -10, marginBottom: 10 }}\r\n        >\r\n          <ClearIcon style={{ color: 'grey' }} />\r\n        </IconButton>\r\n      </div>\r\n      <Grid container>\r\n        <Grid xs={6}>\r\n          <p style={{ fontSize: 15 }}>\r\n            Name:\r\n            <span style={{ fontSize: 17, fontWeight: 500 }}>\r\n              {' '}\r\n              {nodepopup?.id}\r\n            </span>\r\n          </p>\r\n        </Grid>\r\n        <Grid xs={6}>\r\n          <p style={{ fontSize: 14 }}>\r\n            Type:{' '}\r\n            <span style={{ fontSize: 17, fontWeight: 500 }}>\r\n              {' '}\r\n              {nodepopup?.type}\r\n            </span>\r\n          </p>\r\n        </Grid>\r\n      </Grid>\r\n      <div style={{ height: 17 }}></div>\r\n      <p>\r\n        <span style={{ fontSize: 15 }}>Tags:</span>{' '}\r\n        {nodepopup?.tags?.map((tagg) => (\r\n          <>\r\n            <span\r\n              style={{\r\n                display: 'inline !important',\r\n                backgroundColor: 'black',\r\n                color: 'white',\r\n                padding: 3.1,\r\n                paddingLeft: 9,\r\n                paddingRight: 9,\r\n                minWidth: 400,\r\n                marginRight: 3.8,\r\n                borderRadius: 3.3,\r\n                textAlign: 'center',\r\n              }}\r\n            >\r\n              {tagg}\r\n            </span>\r\n          </>\r\n        ))}\r\n      </p>\r\n      <div style={{ height: 17 }}></div>\r\n      {nodepopup?.attributes?.length > 0 ? (\r\n        <table style={{ width: '100%' }}>\r\n          <thead>\r\n            <tr>\r\n              <th style={{ fontWeight: 400, textAlign: 'left', fontSize: 16 }}>\r\n                Attribute Name\r\n              </th>\r\n              <th style={{ fontWeight: 400, textAlign: 'left', fontSize: 16 }}>\r\n                Attribute Value\r\n              </th>\r\n              <th style={{ fontWeight: 400, textAlign: 'left', fontSize: 16 }}>\r\n                Attribute Type\r\n              </th>\r\n            </tr>\r\n            <div style={{ height: 8 }}></div>\r\n          </thead>\r\n          <tbody>\r\n            {nodepopup?.attributes?.map((att) => (\r\n              <>\r\n                <tr>\r\n                  <td style={{ fontSize: 22 }}>{att.attributeName}</td>\r\n                  <td style={{ fontSize: 22 }}>{att.attributeType}</td>\r\n                  <td style={{ fontSize: 22 }}>{att.attributeValue}</td>\r\n                </tr>\r\n\r\n                {/* <Grid\r\n              style={{ display: 'flex', justifyContent: 'space-between' }}\r\n              container\r\n            >\r\n              <Grid item xs={4}>\r\n                <p style={{ fontSize: 20 }}>\r\n                  Attribute Name:\r\n                  <span style={{ fontWeight: 500 }}> {att.attributeName} </span>\r\n                </p>\r\n              </Grid>\r\n              <Grid item xs={4}>\r\n                <p style={{ fontSize: 20 }}>\r\n                  Attribute Type:\r\n                  <span style={{ fontWeight: 500 }}> {att.attributeType}</span>\r\n                </p>\r\n              </Grid>\r\n              <Grid item xs={4}>\r\n                <p style={{ fontSize: 20 }}>\r\n                  Attribute Value:\r\n                  <span style={{ fontWeight: 500 }}> {att.attributeValue}</span>\r\n                </p>\r\n              </Grid>\r\n            </Grid> */}\r\n                <div style={{ height: 12 }}></div>\r\n              </>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      ) : null}\r\n      <Button type='button' onClick={handleupdatenode}>\r\n        Edit Node\r\n      </Button>\r\n      <Button type='button' onClick={deleteanode}>\r\n        Delete Node\r\n      </Button>\r\n    </div>\r\n  )\r\n\r\n  const bodddddddy = (\r\n    <div style={modalStyle} className={classes.paper}>\r\n      <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n        <h2 id='simple-modal-title'>Update Node</h2>\r\n        <IconButton\r\n          onClick={handleClose}\r\n          color='inherit'\r\n          aria-label='open drawer'\r\n        >\r\n          <ClearIcon style={{ color: 'grey' }} />\r\n        </IconButton>\r\n      </div>\r\n      <form onSubmit={submitupdatenodehandler}>\r\n        <Grid container spacing={1}>\r\n          <Grid item xs={6}>\r\n            <TextField\r\n              style={{ color: 'black', width: '100%', marginTop: 9 }}\r\n              id='outlined-basic'\r\n              size='small'\r\n              label='Name'\r\n              value={updatenodeid}\r\n              onChange={(e) => setUpdatenodeid(e.target.value)}\r\n              variant='outlined'\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <TextField\r\n              style={{ width: '100%', marginTop: 9 }}\r\n              id='outlined-basic'\r\n              label='Type'\r\n              size='small'\r\n              value={updatenodetype}\r\n              onChange={(e) => setUpdatenodetype(e.target.value)}\r\n              variant='outlined'\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n        <div style={{ height: 9 }}></div>\r\n        <TagsInput\r\n          style={{ color: 'black' }}\r\n          value={updatenodetags ? updatenodetags : null}\r\n          onChange={handlenodeChange}\r\n        />\r\n        <div style={{ height: 9 }}></div>\r\n        {updateinputfields?.map((updateinputfield, index) => (\r\n          <div\r\n            style={{ width: '100%', display: 'flex', marginBottom: 8 }}\r\n            key={index}\r\n          >\r\n            <Grid container spacing={1} style={{ flex: 1 }}>\r\n              <Grid item xs={4}>\r\n                <TextField\r\n                  name='attributeName'\r\n                  label='Type'\r\n                  size='small'\r\n                  variant='outlined'\r\n                  label='Attribute Name'\r\n                  value={updateinputfield.attributeName}\r\n                  onChange={(event) => handlechangeupdateinput(index, event)}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={4}>\r\n                <TextField\r\n                  name='attributeValue'\r\n                  label='Type'\r\n                  size='small'\r\n                  variant='outlined'\r\n                  label='Attribute Value'\r\n                  value={updateinputfield.attributeValue}\r\n                  onChange={(event) => handlechangeupdateinput(index, event)}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={4}>\r\n                <TextField\r\n                  name='attributeType'\r\n                  label='Type'\r\n                  size='small'\r\n                  variant='outlined'\r\n                  label='Attribute Type'\r\n                  value={updateinputfield.attributeType}\r\n                  onChange={(event) => handlechangeupdateinput(index, event)}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n            <IconButton\r\n              size='small'\r\n              type='button'\r\n              onClick={() => updateinputfieldsremove(index)}\r\n            >\r\n              <DeleteIcon />\r\n            </IconButton>\r\n          </div>\r\n        ))}\r\n        <Button type='button' onClick={handleclickupdatefields} color='primary'>\r\n          Update Attribute\r\n        </Button>\r\n        <Button\r\n          type='submit'\r\n          disabled={\r\n            updatenodeid === '' ||\r\n            updatenodetype === '' ||\r\n            updatenodetags.length <= 0\r\n          }\r\n        >\r\n          <div>Edit Node</div>\r\n        </Button>\r\n      </form>\r\n    </div>\r\n  )\r\n\r\n  const logout = () => {\r\n    dispatch(OauthLogout())\r\n    history.push('/')\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Navbar setVisiblity={setVisiblity} logout={logout} />\r\n\r\n      <div\r\n        className='feedviewside'\r\n        style={{\r\n          display: 'flex',\r\n          flexDirection: 'row',\r\n          justifyContent: 'flex-start',\r\n          height: 'calc(100vh - 70px)',\r\n          backgroundColor: 'rgba(230, 230, 230,1)',\r\n        }}\r\n      >\r\n        <Sidebar visible={visible} />\r\n        {nodeloading ? (\r\n          <div className={classes.rooot}>\r\n            <CircularProgress />\r\n          </div>\r\n        ) : (\r\n            <div style={{ marginTop: 15, marginLeft: 16 }}>\r\n              {nodde?.nodes?.map((node, id) => (\r\n                <div key={id} onClick={() => showdetails(node._id)}>\r\n                  <div\r\n                    style={{\r\n                      display: 'flex',\r\n                      alignItems: 'center',\r\n                      marginBottom: 10,\r\n                      cursor: 'pointer'\r\n                    }}\r\n                  >\r\n                    <div\r\n                      style={{\r\n                        backgroundColor: 'black',\r\n                        borderRadius: 20,\r\n                        height: 40,\r\n                        width: 40,\r\n                        display: 'flex',\r\n                        justifyContent: 'center',\r\n                        alignItems: 'center',\r\n                        color: 'white',\r\n\r\n                      }}\r\n                    >\r\n                      <p style={{ fontWeight: 500, fontSize: 18 }} >{node.id[0]}</p>\r\n                    </div>\r\n                    <h5 style={{ marginLeft: 8 }}>{node.id}</h5>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          )}\r\n        <Modal\r\n          open={openViewNode}\r\n          onClose={handleClose}\r\n          aria-labelledby='simple-modal-title'\r\n        >\r\n          {boddy}\r\n        </Modal>\r\n        <Modal\r\n          open={haveupdatenode}\r\n          onClose={handleClose}\r\n          aria-labelledby='simple-modal-title'\r\n        >\r\n          {bodddddddy}\r\n        </Modal>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default FeedView\r\n","E:\\mob-app1\\netbook-client\\src\\screens\\Links.js",["124","125","126","127","128","129","130","131","132","133","134","135","136","137","138","139","140","141","142","143","144","145","146","147","148","149","150","151","152","153"],"import React, { useState, useEffect } from 'react'\r\n// import Sidebar from 'react-sidebar'\r\n// import SlidingPanel from 'react-sliding-side-panel'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport ClearIcon from '@material-ui/icons/Clear'\r\nimport DeleteIcon from '@material-ui/icons/Delete'\r\nimport InputLabel from '@material-ui/core/InputLabel'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport FormControl from '@material-ui/core/FormControl'\r\nimport CircularProgress from '@material-ui/core/CircularProgress'\r\n\r\nimport AddIcon from '@material-ui/icons/Add'\r\nimport TrendingFlatIcon from '@material-ui/icons/TrendingFlat'\r\n\r\nimport Select from '@material-ui/core/Select'\r\n\r\nimport {\r\n  Grid,\r\n  Container,\r\n  Modal,\r\n  TextField,\r\n  Button,\r\n  Fab,\r\n} from '@material-ui/core'\r\nimport {\r\n  ThemeProvider,\r\n  createMuiTheme,\r\n  makeStyles,\r\n} from '@material-ui/core/styles'\r\n\r\n// import DeleteIcon from '@material-ui/icons/Delete'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { OauthLogout } from '../actions/oauthAction'\r\nimport { Link } from 'react-router-dom'\r\nimport TagsInput from 'react-tagsinput'\r\nimport './home.css'\r\nimport 'react-tagsinput/react-tagsinput.css' // If using WebPack and style-loader.\r\nimport {\r\n  NodeAdd,\r\n  Nodefetch,\r\n  EdgeAdd,\r\n  Edgefetch,\r\n  EdgeUpdate,\r\n  NodeUpdate,\r\n  NodeDeletion,\r\n  EdgeDeletion,\r\n} from '../actions/nodeAction'\r\nimport { Graph } from 'react-d3-graph'\r\nimport Navbar from '../components/Navbar'\r\nimport axios from 'axios'\r\nimport Sidebar from '../components/Sidebar'\r\n\r\nconst Links = ({ history }) => {\r\n  // const [hid, setHid] = useState(false)\r\n  const [open, setOpen] = useState(false)\r\n  const [openViewNode, setOpenViewNode] = useState(false)\r\n  const [openViewEdge, setOpenViewEdge] = useState(false)\r\n  const [openAddEdge, setOpenAddEdge] = useState(false)\r\n  const [haveupdateedge, setHaveupdateedge] = useState(false)\r\n  const [haveupdatenode, setHaveupdatenode] = useState(false)\r\n  const [openimportview, setOpenimportview] = useState(false)\r\n  const [tags, setTags] = useState([])\r\n  // const [visi, setVisi] = useState(false)\r\n  const [visible, setVisiblity] = useState(false)\r\n  const [payvisi, setPayvisi] = useState(false)\r\n  const [id, setId] = useState('')\r\n  const [updatenodeid, setUpdatenodeid] = useState('')\r\n  const [author_data, setAuthor_data] = useState('')\r\n  const [institution_data, setInstitution_data] = useState('')\r\n  const [limit_data, setLimit_data] = useState(-1)\r\n  const [pubs_data, setPubs_data] = useState(-1)\r\n  const [co_author_data, setCo_author_data] = useState(-1)\r\n\r\n  const [updatenodetype, setUpdatenodetype] = useState('')\r\n  const [updatenodetags, setUpdatenodetags] = useState([])\r\n  const [selectimport, setSelectimport] = useState([])\r\n  const [updateinputfields, setUpdateinputfields] = useState([])\r\n\r\n  const [haveedgedetails, setHaveedgedetails] = useState([])\r\n  const [type, setType] = useState('')\r\n  const [inputfields, setInputfields] = useState([])\r\n  // const [openPanel, setOpenPanel] = useState(false)\r\n  const [popup, setPopup] = useState(false)\r\n  // const [update, setUpdate] = useState(false)\r\n  const [popdown, setPopdown] = useState(false)\r\n  const [attributes, setAttributes] = useState([])\r\n  const [updateattributes, setUpdateattributes] = useState([])\r\n  const [sidebarOpen, setSidebarOpen] = useState(false)\r\n  const [source, setSource] = useState('')\r\n  const [target, setTarget] = useState('')\r\n  const [edgetags, setEdgetags] = useState([])\r\n  const [searchdata, setSearchdata] = useState([])\r\n  const [searchvalue, setSearchvalue] = useState('')\r\n  // const [name, setName] = useState('')\r\n  const [filtereddata, setFiltereddata] = useState([])\r\n  const [apilabel, setApilabel] = useState([\r\n    'Google Scholar',\r\n    'Imdb',\r\n    'Twitter',\r\n    'Facebook',\r\n  ])\r\n  const [updatesource, setUpdatesource] = useState('')\r\n  const [updatetarget, setUpdatetarget] = useState('')\r\n  const [updateedgetags, setUpdateedgetags] = useState([])\r\n  const [nodepopup, setNodepopup] = useState([])\r\n  // getModalStyle is not a pure function, we roll the style only on the first render\r\n  const [modalStyle] = useState(getModalStyle)\r\n  const dispatch = useDispatch()\r\n\r\n  const getOauth = useSelector((state) => state.getOauth)\r\n  const { loading: oauthloading, oauth, error: oautherror } = getOauth\r\n\r\n  // const putNode = useSelector((state) => state.putNode)\r\n  // const { loading, node, error: noderror } = putNode\r\n  const getNode = useSelector((state) => state.getNode)\r\n  const {\r\n    loading: nodeloading,\r\n    filterednode,\r\n    filterededge,\r\n    nodde,\r\n    error: errror,\r\n  } = getNode\r\n  // const deleteNode = useSelector((state) => state.deleteNode)\r\n  // const { loading: deletenodeloading, nodedelete, error: errrror } = deleteNode\r\n\r\n  useEffect(() => {\r\n    if (oauth?._id) {\r\n      dispatch(Nodefetch(oauth._id))\r\n      console.log('oauth', oauth)\r\n    }\r\n  }, [])\r\n  // useEffect(() => {\r\n  //   const apires = async () => {\r\n  //     const { data } = await axios.get(\r\n  //       'https://smart-vampirebat-89.loca.lt/api'\r\n  //     )\r\n  //   }\r\n  //   console.log('apidata', data)\r\n  //   apires()\r\n  // })\r\n  useEffect(() => {\r\n    console.log('selectimport:', selectimport)\r\n  }, [selectimport])\r\n\r\n  useEffect(() => {\r\n    console.log('searchednode:', filterednode)\r\n  }, [filterednode])\r\n\r\n  useEffect(() => {\r\n    setUpdatenodeid(nodepopup?.id)\r\n    setUpdatenodetype(nodepopup?.type)\r\n    setUpdatenodetags(nodepopup?.tags)\r\n\r\n    let sourceNode = nodde?.nodes?.filter(\r\n      (node) => node.id === haveedgedetails?.source\r\n    )[0]\r\n    let targetNode = nodde?.nodes?.filter(\r\n      (node) => node.id === haveedgedetails?.target\r\n    )[0]\r\n\r\n    setUpdatesource(sourceNode?._id)\r\n    setUpdatetarget(targetNode?._id)\r\n    setUpdateedgetags(haveedgedetails?.tags)\r\n    // setUpdatenodetags(nodepopup?.tags)\r\n\r\n    // setUpdateedgetags(haveedgedetails?.tags)\r\n  }, [haveedgedetails, nodepopup])\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true)\r\n  }\r\n  const updatetheedge = () => {\r\n    setHaveupdateedge(true)\r\n  }\r\n  const showimportview = () => {\r\n    setOpenimportview(true)\r\n  }\r\n  const updatethenode = () => {\r\n    setHaveupdatenode(true)\r\n  }\r\n  const handleOpenViewNode = () => {\r\n    setOpenViewNode(true)\r\n  }\r\n  const handlepayvisi = () => {\r\n    setPayvisi(true)\r\n  }\r\n  const handleOpenAddEdge = () => {\r\n    setOpenAddEdge(true)\r\n  }\r\n  const handleOpenViewEdge = () => {\r\n    setOpenViewEdge(true)\r\n  }\r\n\r\n  const handleClose = () => {\r\n    setOpen(false)\r\n    setOpenViewNode(false)\r\n    setOpenAddEdge(false)\r\n    setOpenViewEdge(false)\r\n    setHaveupdateedge(false)\r\n    setHaveupdatenode(false)\r\n    setOpenimportview(false)\r\n    setPayvisi(false)\r\n  }\r\n\r\n  function rand() {\r\n    return Math.round(Math.random() * 20) - 10\r\n  }\r\n  const { innerWidth, innerHeight } = window\r\n\r\n  function getModalStyle() {\r\n    const { innerWidth, innerHeight } = window\r\n\r\n    let top = 50,\r\n      left = innerWidth < 600 ? 0 : 50\r\n    return {\r\n      top: `${top}%`,\r\n      left: `${left}%`,\r\n      transform: `translate(-${left}%, -${top}%)`,\r\n    }\r\n  }\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n      position: 'absolute',\r\n      width: innerWidth > 600 ? 600 : '100%',\r\n\r\n      backgroundColor: theme.palette.background.paper,\r\n      // border: '2px solid #000',\r\n      boxShadow: theme.shadows[5],\r\n      padding: theme.spacing(2, 4, 3),\r\n      maxHeight: 'calc(100vh - 200px)',\r\n      overflow: 'auto !important',\r\n      top: '50%',\r\n    },\r\n    papper: {\r\n      position: 'absolute',\r\n      width: innerWidth > 600 ? 450 : '100%',\r\n\r\n      backgroundColor: theme.palette.background.paper,\r\n      // border: '2px solid #000',\r\n      boxShadow: theme.shadows[5],\r\n      padding: theme.spacing(2, 4, 3),\r\n      maxHeight: 'calc(100vh - 200px)',\r\n      overflow: 'auto !important',\r\n      top: '50%',\r\n    },\r\n    multilineColor: {\r\n      color: 'white',\r\n    },\r\n    formControl: {\r\n      // margin: theme.spacing(1),\r\n      minWidth: 120,\r\n      width: '100%',\r\n    },\r\n    selectEmpty: {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n    root: {\r\n      width: '100%',\r\n      '& > * + *': {\r\n        marginTop: theme.spacing(2),\r\n      },\r\n    },\r\n    rooot: {\r\n      position: 'fixed',\r\n      top: '50%',\r\n      left: '50%',\r\n      transform: 'translate(-50%, -50%)',\r\n    },\r\n  }))\r\n  const classes = useStyles()\r\n\r\n  const deleteanode = () => {\r\n    dispatch(NodeDeletion(nodepopup?._id))\r\n\r\n    handleClose()\r\n  }\r\n\r\n  const deleteaedge = () => {\r\n    dispatch(EdgeDeletion(haveedgedetails?._id))\r\n    // dispatch(Nodefetch(oauth._id))\r\n    handleClose()\r\n  }\r\n\r\n  const handlesearchchange = (event) => {\r\n    const { value } = event.target\r\n    setSearchvalue(value)\r\n    console.log('ji', searchvalue)\r\n  }\r\n\r\n  const handleChange = (tags) => {\r\n    setTags(tags)\r\n  }\r\n  const handlenodeChange = (updatenodetags) => {\r\n    setUpdatenodetags(updatenodetags)\r\n  }\r\n  const handleChanges = (edgetags) => {\r\n    setEdgetags(edgetags)\r\n  }\r\n  const handleupdateChanges = (updateedgetags) => {\r\n    setUpdateedgetags(updateedgetags)\r\n  }\r\n\r\n  const handlechangeinput = (index, event) => {\r\n    const values = [...inputfields]\r\n    values[index][event.target.name] = event.target.value\r\n    setInputfields(values)\r\n    setAttributes(inputfields)\r\n  }\r\n  const handlechangeupdateinput = (index, event) => {\r\n    const values = [...updateinputfields]\r\n    values[index][event.target.name] = event.target.value\r\n    setUpdateinputfields(values)\r\n    setUpdateattributes(updateinputfields)\r\n  }\r\n\r\n  const handleclickfields = () => {\r\n    setInputfields([\r\n      ...inputfields,\r\n      { attributeName: '', attributeValue: '', attributeType: '' },\r\n    ])\r\n  }\r\n  const handleclickupdatefields = () => {\r\n    setUpdateinputfields([\r\n      ...updateinputfields,\r\n      { attributeName: '', attributeValue: '', attributeType: '' },\r\n    ])\r\n  }\r\n  const handlgeupdateedge = () => {\r\n    updatetheedge()\r\n  }\r\n  const handleupdatenode = () => {\r\n    updatethenode()\r\n  }\r\n\r\n  const inputfieldsremove = (index) => {\r\n    const values = [...inputfields]\r\n    values.splice(index, 1)\r\n    setInputfields(values)\r\n  }\r\n  const updateinputfieldsremove = (index) => {\r\n    const values = [...updateinputfields]\r\n    values.splice(index, 1)\r\n    setUpdateinputfields(values)\r\n  }\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    if (nodde?.nodes?.length < oauth?.packageid?.Nodes) {\r\n      dispatch(NodeAdd(oauth?._id, id, type, tags, attributes))\r\n\r\n      // dispatch(Nodefetch(oauth?._id))\r\n\r\n      handleClose()\r\n      setId('')\r\n      setType('')\r\n      setTags([])\r\n      setInputfields([])\r\n    } else {\r\n      handlepayvisi()\r\n\r\n      setId('')\r\n      setType('')\r\n      setTags([])\r\n      setInputfields([])\r\n    }\r\n  }\r\n  const submitupdatenodehandler = (e) => {\r\n    e.preventDefault()\r\n\r\n    dispatch(\r\n      NodeUpdate(\r\n        nodepopup?._id,\r\n        oauth._id,\r\n        updatenodeid,\r\n        updatenodetype,\r\n        updatenodetags,\r\n        updateattributes\r\n      )\r\n    )\r\n    // dispatch(Nodefetch(oauth._id))\r\n    handleClose()\r\n    setUpdatenodeid('')\r\n    setUpdatenodetype('')\r\n    setUpdatenodetags([])\r\n    setUpdateinputfields([])\r\n  }\r\n\r\n  const submitedgehandler = (e) => {\r\n    e.preventDefault()\r\n    if (nodde?.links?.length < oauth?.packageid?.Edges) {\r\n      dispatch(EdgeAdd(oauth._id, source, target, edgetags))\r\n      // dispatch(Nodefetch(oauth._id))\r\n      handleClose()\r\n      setSource('')\r\n      setTarget('')\r\n      setEdgetags([])\r\n    } else {\r\n      handlepayvisi()\r\n      // handleClose()\r\n      setSource('')\r\n      setTarget('')\r\n      setEdgetags([])\r\n    }\r\n  }\r\n  const importviewHandler = async (e) => {\r\n    e.preventDefault()\r\n\r\n    console.log(\r\n      'respone',\r\n      author_data,\r\n      institution_data,\r\n      limit_data,\r\n      pubs_data,\r\n      co_author_data,\r\n      typeof author_data,\r\n      typeof institution_data,\r\n      typeof limit_data,\r\n      typeof pubs_data,\r\n      typeof co_author_data\r\n    )\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Access-Control-Allow-Origin': '*',\r\n      },\r\n    }\r\n    const { data } = await axios.post(\r\n      'https://ancient-cobra-61.loca.lt/api/gs_search',\r\n      {\r\n        author_data,\r\n        institution_data,\r\n        limit_data,\r\n        pubs_data,\r\n        co_author_data,\r\n      },\r\n      config\r\n    )\r\n    console.log('importview api res', data, limit_data)\r\n    // const {\r\n    //   data,\r\n    // } = await axios.post('https://yellow-termite-80.loca.lt/api/none', { name })\r\n    // console.log('apireps', data)\r\n  }\r\n\r\n  const submitupdateedgehandler = (e) => {\r\n    e.preventDefault()\r\n    dispatch(\r\n      EdgeUpdate(\r\n        haveedgedetails?._id,\r\n        oauth._id,\r\n        updatesource,\r\n        updatetarget,\r\n        updateedgetags\r\n      )\r\n    )\r\n    // dispatch(Nodefetch(oauth._id))\r\n    handleClose()\r\n  }\r\n\r\n  const blackTheme = createMuiTheme({\r\n    palette: { primary: { main: '#000000' } },\r\n  })\r\n\r\n  const body = (\r\n    <div style={modalStyle} className={classes.paper}>\r\n      <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n        <h2 id='simple-modal-title'>Add Node</h2>\r\n        <IconButton\r\n          onClick={handleClose}\r\n          color='inherit'\r\n          aria-label='open drawer'\r\n          style={{ marginTop: -10, marginBottom: 10 }}\r\n        >\r\n          <ClearIcon style={{ color: 'grey' }} />\r\n        </IconButton>\r\n      </div>\r\n\r\n      <form onSubmit={submitHandler}>\r\n        <Grid container spacing={1}>\r\n          <Grid item xs={6}>\r\n            <TextField\r\n              style={{ color: 'black', width: '100%', marginTop: 9 }}\r\n              id='outlined-basic'\r\n              size='small'\r\n              label='Name'\r\n              value={id}\r\n              onChange={(e) => setId(e.target.value)}\r\n              variant='outlined'\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <TextField\r\n              style={{ width: '100%', marginTop: 9 }}\r\n              id='outlined-basic'\r\n              label='Type'\r\n              size='small'\r\n              value={type}\r\n              onChange={(e) => setType(e.target.value)}\r\n              variant='outlined'\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n        <div style={{ height: 9 }}></div>\r\n        <TagsInput\r\n          style={{ color: 'black' }}\r\n          value={tags}\r\n          onChange={handleChange}\r\n        />\r\n        <div style={{ height: 9 }}></div>\r\n        {inputfields.map((inputfield, index) => (\r\n          <div\r\n            style={{ width: '100%', display: 'flex', marginBottom: 8 }}\r\n            key={index}\r\n          >\r\n            <Grid container spacing={1} style={{ flex: 1 }}>\r\n              <Grid item xs={4}>\r\n                <TextField\r\n                  name='attributeName'\r\n                  label='Type'\r\n                  size='small'\r\n                  variant='outlined'\r\n                  label='Attribute Name'\r\n                  value={inputfield.attributeName}\r\n                  onChange={(event) => handlechangeinput(index, event)}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={4}>\r\n                <TextField\r\n                  name='attributeValue'\r\n                  label='Type'\r\n                  size='small'\r\n                  variant='outlined'\r\n                  label='Attribute Value'\r\n                  value={inputfield.attributeValue}\r\n                  onChange={(event) => handlechangeinput(index, event)}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={4}>\r\n                <TextField\r\n                  name='attributeType'\r\n                  label='Type'\r\n                  size='small'\r\n                  variant='outlined'\r\n                  label='Attribute Type'\r\n                  value={inputfield.attributeType}\r\n                  onChange={(event) => handlechangeinput(index, event)}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n            <IconButton\r\n              size='small'\r\n              type='button'\r\n              onClick={() => inputfieldsremove(index)}\r\n            >\r\n              <DeleteIcon />\r\n            </IconButton>\r\n          </div>\r\n        ))}\r\n        <Button type='button' onClick={handleclickfields} color='primary'>\r\n          Add Attribute\r\n        </Button>\r\n\r\n        <Button type='submit' disabled={id === '' || type === ''}>\r\n          <div>Add Node</div>\r\n        </Button>\r\n        <Button type='button' onClick={showimportview} color='primary'>\r\n          Import View\r\n        </Button>\r\n      </form>\r\n    </div>\r\n  )\r\n  const boddy = (\r\n    <div style={modalStyle} className={classes.papper}>\r\n      <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n        <h2 id='simple-modal-title'>View Node</h2>\r\n        <IconButton\r\n          onClick={handleClose}\r\n          color='inherit'\r\n          aria-label='open drawer'\r\n          style={{ marginTop: -10, marginBottom: 10 }}\r\n        >\r\n          <ClearIcon style={{ color: 'grey' }} />\r\n        </IconButton>\r\n      </div>\r\n      <Grid container>\r\n        <Grid item xs={6}>\r\n          <p style={{ fontSize: 15 }}>\r\n            Name:\r\n            <span style={{ fontSize: 17, fontWeight: 500 }}>\r\n              {' '}\r\n              {nodepopup?.id}\r\n            </span>\r\n          </p>\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <p style={{ fontSize: 14 }}>\r\n            Type:{' '}\r\n            <span style={{ fontSize: 17, fontWeight: 500 }}>\r\n              {' '}\r\n              {nodepopup?.type}\r\n            </span>\r\n          </p>\r\n        </Grid>\r\n      </Grid>\r\n      {nodepopup?.tags?.length > 0 ? (\r\n        <>\r\n          <div style={{ height: 17 }}></div>\r\n          <p>\r\n            <span style={{ fontSize: 15 }}>Tags:</span>{' '}\r\n            {nodepopup?.tags?.map((tagg) => (\r\n              <>\r\n                <span\r\n                  style={{\r\n                    display: 'inline !important',\r\n                    backgroundColor: 'black',\r\n                    color: 'white',\r\n                    padding: 3.1,\r\n                    paddingLeft: 9,\r\n                    paddingRight: 9,\r\n                    minWidth: 400,\r\n                    marginRight: 3.8,\r\n                    borderRadius: 3.3,\r\n                    textAlign: 'center',\r\n                  }}\r\n                >\r\n                  {tagg}\r\n                </span>\r\n              </>\r\n            ))}\r\n          </p>\r\n        </>\r\n      ) : null}\r\n\r\n      <div style={{ height: 17 }}></div>\r\n      {nodepopup?.attributes?.length > 0 ? (\r\n        <table style={{ width: '100%' }}>\r\n          <thead>\r\n            <tr>\r\n              <th style={{ fontWeight: 400, textAlign: 'left', fontSize: 16 }}>\r\n                Attribute Name\r\n              </th>\r\n              <th style={{ fontWeight: 400, textAlign: 'left', fontSize: 16 }}>\r\n                Attribute Value\r\n              </th>\r\n              <th style={{ fontWeight: 400, textAlign: 'left', fontSize: 16 }}>\r\n                Attribute Type\r\n              </th>\r\n            </tr>\r\n            <div style={{ height: 8 }}></div>\r\n          </thead>\r\n          <tbody>\r\n            {nodepopup?.attributes?.map((att) => (\r\n              <>\r\n                <tr>\r\n                  <td style={{ fontSize: 22 }}>{att.attributeName}</td>\r\n                  <td style={{ fontSize: 22 }}>{att.attributeType}</td>\r\n                  <td style={{ fontSize: 22 }}>{att.attributeValue}</td>\r\n                </tr>\r\n\r\n                {/* <Grid\r\n              style={{ display: 'flex', justifyContent: 'space-between' }}\r\n              container\r\n            >\r\n              <Grid item xs={4}>\r\n                <p style={{ fontSize: 20 }}>\r\n                  Attribute Name:\r\n                  <span style={{ fontWeight: 500 }}> {att.attributeName} </span>\r\n                </p>\r\n              </Grid>\r\n              <Grid item xs={4}>\r\n                <p style={{ fontSize: 20 }}>\r\n                  Attribute Type:\r\n                  <span style={{ fontWeight: 500 }}> {att.attributeType}</span>\r\n                </p>\r\n              </Grid>\r\n              <Grid item xs={4}>\r\n                <p style={{ fontSize: 20 }}>\r\n                  Attribute Value:\r\n                  <span style={{ fontWeight: 500 }}> {att.attributeValue}</span>\r\n                </p>\r\n              </Grid>\r\n            </Grid> */}\r\n                <div style={{ height: 12 }}></div>\r\n              </>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      ) : null}\r\n      <Button type='button' onClick={handleupdatenode}>\r\n        Edit Node\r\n      </Button>\r\n      <Button type='button' onClick={deleteanode}>\r\n        Delete Node\r\n      </Button>\r\n    </div>\r\n  )\r\n  const boddddy = (\r\n    <div style={modalStyle} className={classes.paper}>\r\n      <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n        <h2 id='simple-modal-title'>View Edge</h2>\r\n        <IconButton\r\n          onClick={handleClose}\r\n          color='inherit'\r\n          aria-label='open drawer'\r\n          style={{ marginTop: -10, marginBottom: 10 }}\r\n        >\r\n          <ClearIcon style={{ color: 'grey' }} />\r\n        </IconButton>\r\n      </div>\r\n      <Grid container spacing={1}>\r\n        <Grid item xs={6}>\r\n          <p style={{ fontSize: 15 }}>\r\n            Source:\r\n            <span style={{ fontSize: 17, fontWeight: 500 }}>\r\n              {' '}\r\n              {haveedgedetails?.source}\r\n            </span>\r\n          </p>\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <p style={{ fontSize: 14 }}>\r\n            Target:{' '}\r\n            <span style={{ fontSize: 17, fontWeight: 500 }}>\r\n              {' '}\r\n              {haveedgedetails?.target}\r\n            </span>\r\n          </p>\r\n        </Grid>\r\n      </Grid>\r\n      {haveedgedetails?.tags?.length > 0 ? (\r\n        <>\r\n          <div style={{ height: 17 }}></div>\r\n          <p>\r\n            <span style={{ fontSize: 15 }}>Tags:</span>{' '}\r\n            {haveedgedetails?.tags?.map((tagg) => (\r\n              <>\r\n                <span\r\n                  style={{\r\n                    display: 'inline !important',\r\n                    backgroundColor: 'black',\r\n                    color: 'white',\r\n                    padding: 3.1,\r\n\r\n                    paddingLeft: 9,\r\n                    paddingRight: 9,\r\n                    minWidth: 400,\r\n                    marginRight: 3.8,\r\n                    borderRadius: 3.3,\r\n                    textAlign: 'center',\r\n                  }}\r\n                >\r\n                  {tagg}\r\n                </span>\r\n              </>\r\n            ))}\r\n          </p>\r\n        </>\r\n      ) : null}\r\n\r\n      <div style={{ height: 17 }}></div>\r\n      <Button type='button' onClick={handlgeupdateedge}>\r\n        Edit Edge\r\n      </Button>\r\n      <Button type='button' onClick={deleteaedge}>\r\n        Delete Edge\r\n      </Button>\r\n    </div>\r\n  )\r\n  const bodddy = (\r\n    <div style={modalStyle} className={classes.paper}>\r\n      <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n        <h2 id='simple-modal-title'>Add Edge</h2>\r\n        <IconButton\r\n          onClick={handleClose}\r\n          color='inherit'\r\n          aria-label='open drawer'\r\n          style={{ marginTop: -10, marginBottom: 10 }}\r\n        >\r\n          <ClearIcon style={{ color: 'grey' }} />\r\n        </IconButton>\r\n      </div>\r\n      <form onSubmit={submitedgehandler}>\r\n        <Grid container spacing={1}>\r\n          <Grid item xs={6}>\r\n            <FormControl\r\n              className={classes.formControl}\r\n              variant='outlined'\r\n              size='small'\r\n            >\r\n              <InputLabel id='demo-simple-select-label'>Source</InputLabel>\r\n              <Select\r\n                labelId='demo-simple-select-label'\r\n                value={source}\r\n                onChange={(e) => setSource(e.target.value)}\r\n              >\r\n                {nodde?.nodes?.map((idd) => (\r\n                  <MenuItem value={idd._id}>{idd.id}</MenuItem>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <FormControl\r\n              className={classes.formControl}\r\n              variant='outlined'\r\n              size='small'\r\n            >\r\n              <InputLabel id='demo-simple-select-label'>Target</InputLabel>\r\n              <Select\r\n                labelId='demo-simple-select-label'\r\n                value={target}\r\n                onChange={(e) => setTarget(e.target.value)}\r\n              >\r\n                {nodde?.nodes?.map((idd) => (\r\n                  <MenuItem value={idd._id}>{idd.id}</MenuItem>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n          </Grid>\r\n        </Grid>\r\n        <div style={{ height: 9 }}></div>\r\n        <TagsInput\r\n          style={{ color: 'black' }}\r\n          value={edgetags}\r\n          onChange={handleChanges}\r\n        />\r\n        <Button\r\n          type='submit'\r\n          disabled={source === '' || target === '' || edgetags?.length <= 0}\r\n        >\r\n          <div>Add Edge</div>\r\n        </Button>\r\n      </form>\r\n    </div>\r\n  )\r\n  const bodddddy = (\r\n    <div style={modalStyle} className={classes.paper}>\r\n      <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n        <h2 id='simple-modal-title'>Update Edge</h2>\r\n        <IconButton\r\n          onClick={handleClose}\r\n          color='inherit'\r\n          aria-label='open drawer'\r\n        >\r\n          <ClearIcon style={{ color: 'grey' }} />\r\n        </IconButton>\r\n      </div>\r\n      <form onSubmit={submitupdateedgehandler}>\r\n        <Grid container spacing={1}>\r\n          <Grid item xs={6}>\r\n            <FormControl\r\n              className={classes.formControl}\r\n              variant='outlined'\r\n              size='small'\r\n            >\r\n              <InputLabel id='demo-simple-select-label'>Edit Source</InputLabel>\r\n              <Select\r\n                labelId='demo-simple-select-label'\r\n                value={updatesource}\r\n                onChange={(e) => setUpdatesource(e.target.value)}\r\n              >\r\n                {nodde?.nodes?.map((idd) => (\r\n                  <MenuItem value={idd._id}>{idd.id}</MenuItem>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <FormControl\r\n              className={classes.formControl}\r\n              variant='outlined'\r\n              size='small'\r\n            >\r\n              <InputLabel id='demo-simple-select-label'>Edit Target</InputLabel>\r\n              <Select\r\n                labelId='demo-simple-select-label'\r\n                value={updatetarget}\r\n                onChange={(e) => setUpdatetarget(e.target.value)}\r\n              >\r\n                {nodde?.nodes?.map((idd) => (\r\n                  <MenuItem value={idd._id}>{idd.id}</MenuItem>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n          </Grid>\r\n        </Grid>\r\n        <div style={{ height: 9 }}></div>\r\n        <TagsInput\r\n          style={{ color: 'black' }}\r\n          value={updateedgetags}\r\n          onChange={handleupdateChanges}\r\n        />\r\n        <Button\r\n          type='submit'\r\n          disabled={\r\n            updatesource === '' ||\r\n            updatetarget === '' ||\r\n            updateedgetags?.length <= 0\r\n          }\r\n        >\r\n          <div>Edit Edge</div>\r\n        </Button>\r\n      </form>\r\n    </div>\r\n  )\r\n  const bodddddddy = (\r\n    <div style={modalStyle} className={classes.paper}>\r\n      <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n        <h2 id='simple-modal-title'>Update Node</h2>\r\n        <IconButton\r\n          onClick={handleClose}\r\n          color='inherit'\r\n          aria-label='open drawer'\r\n        >\r\n          <ClearIcon style={{ color: 'grey' }} />\r\n        </IconButton>\r\n      </div>\r\n      <form onSubmit={submitupdatenodehandler}>\r\n        <Grid container spacing={1}>\r\n          <Grid item xs={6}>\r\n            <TextField\r\n              style={{ color: 'black', width: '100%', marginTop: 9 }}\r\n              id='outlined-basic'\r\n              size='small'\r\n              label='Name'\r\n              value={updatenodeid}\r\n              onChange={(e) => setUpdatenodeid(e.target.value)}\r\n              variant='outlined'\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <TextField\r\n              style={{ width: '100%', marginTop: 9 }}\r\n              id='outlined-basic'\r\n              label='Type'\r\n              size='small'\r\n              value={updatenodetype}\r\n              onChange={(e) => setUpdatenodetype(e.target.value)}\r\n              variant='outlined'\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n        <div style={{ height: 9 }}></div>\r\n        <TagsInput\r\n          style={{ color: 'black' }}\r\n          value={updatenodetags ? updatenodetags : null}\r\n          onChange={handlenodeChange}\r\n        />\r\n        <div style={{ height: 9 }}></div>\r\n        {updateinputfields?.map((updateinputfield, index) => (\r\n          <div\r\n            style={{ width: '100%', display: 'flex', marginBottom: 8 }}\r\n            key={index}\r\n          >\r\n            <Grid container spacing={1} style={{ flex: 1 }}>\r\n              <Grid item xs={4}>\r\n                <TextField\r\n                  name='attributeName'\r\n                  label='Type'\r\n                  size='small'\r\n                  variant='outlined'\r\n                  label='Attribute Name'\r\n                  value={updateinputfield.attributeName}\r\n                  onChange={(event) => handlechangeupdateinput(index, event)}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={4}>\r\n                <TextField\r\n                  name='attributeValue'\r\n                  label='Type'\r\n                  size='small'\r\n                  variant='outlined'\r\n                  label='Attribute Value'\r\n                  value={updateinputfield.attributeValue}\r\n                  onChange={(event) => handlechangeupdateinput(index, event)}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={4}>\r\n                <TextField\r\n                  name='attributeType'\r\n                  label='Type'\r\n                  size='small'\r\n                  variant='outlined'\r\n                  label='Attribute Type'\r\n                  value={updateinputfield.attributeType}\r\n                  onChange={(event) => handlechangeupdateinput(index, event)}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n            <IconButton\r\n              size='small'\r\n              type='button'\r\n              onClick={() => updateinputfieldsremove(index)}\r\n            >\r\n              <DeleteIcon />\r\n            </IconButton>\r\n          </div>\r\n        ))}\r\n        <Button type='button' onClick={handleclickupdatefields} color='primary'>\r\n          Update Attribute\r\n        </Button>\r\n        <Button\r\n          type='submit'\r\n          disabled={updatenodeid === '' || updatenodetype === ''}\r\n        >\r\n          <div>Edit Node</div>\r\n        </Button>\r\n      </form>\r\n    </div>\r\n  )\r\n\r\n  const boddddddddy = (\r\n    <div style={modalStyle} className={classes.paper}>\r\n      <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n        <h2 id='simple-modal-title'>Import View</h2>\r\n        <IconButton\r\n          onClick={handleClose}\r\n          color='inherit'\r\n          aria-label='open drawer'\r\n          style={{ marginTop: -10, marginBottom: 10 }}\r\n        >\r\n          <ClearIcon style={{ color: 'grey' }} />\r\n        </IconButton>\r\n      </div>\r\n\r\n      <form onSubmit={importviewHandler}>\r\n        <Grid container spacing={1}>\r\n          <Grid item xs={12}>\r\n            <FormControl\r\n              className={classes.formControl}\r\n              variant='outlined'\r\n              size='small'\r\n            >\r\n              <InputLabel id='demo-simple-select-label'>\r\n                Select import\r\n              </InputLabel>\r\n              <Select\r\n                labelId='demo-simple-select-label'\r\n                value={selectimport}\r\n                onChange={(e) => setSelectimport(e.target.value)}\r\n              >\r\n                {apilabel.map((apilab) => (\r\n                  <MenuItem value={apilab}>{apilab}</MenuItem>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n          </Grid>\r\n          {selectimport === 'Google Scholar' && (\r\n            <>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  style={{ color: 'black', width: '100%', marginTop: 9 }}\r\n                  id='outlined-basic'\r\n                  size='small'\r\n                  label='Author'\r\n                  value={author_data}\r\n                  onChange={(e) => setAuthor_data(e.target.value)}\r\n                  variant='outlined'\r\n                />\r\n              </Grid>\r\n              {/* <Grid item xs={12}>\r\n                <TextField\r\n                  style={{ color: 'black', width: '100%', marginTop: 9 }}\r\n                  id='outlined-basic'\r\n                  size='small'\r\n                  label='Name'\r\n                  value={name}\r\n                  onChange={(e) => setName(e.target.value)}\r\n                  variant='outlined'\r\n                />\r\n              </Grid> */}\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  style={{ color: 'black', width: '100%', marginTop: 9 }}\r\n                  id='outlined-basic'\r\n                  size='small'\r\n                  label='Institution'\r\n                  value={institution_data}\r\n                  onChange={(e) => setInstitution_data(e.target.value)}\r\n                  variant='outlined'\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  style={{ color: 'black', width: '100%', marginTop: 9 }}\r\n                  id='outlined-basic'\r\n                  size='small'\r\n                  label='Limit'\r\n                  type='number'\r\n                  value={limit_data}\r\n                  onChange={(e) => setLimit_data(e.target.value)}\r\n                  variant='outlined'\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  style={{ color: 'black', width: '100%', marginTop: 9 }}\r\n                  id='outlined-basic'\r\n                  size='small'\r\n                  label='Publications'\r\n                  type='number'\r\n                  value={pubs_data}\r\n                  onChange={(e) => setPubs_data(e.target.value)}\r\n                  variant='outlined'\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  style={{ color: 'black', width: '100%', marginTop: 9 }}\r\n                  id='outlined-basic'\r\n                  size='small'\r\n                  label='Coauthor'\r\n                  type='number'\r\n                  value={co_author_data}\r\n                  onChange={(e) => setCo_author_data(e.target.value)}\r\n                  variant='outlined'\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <Button\r\n                  type='submit'\r\n                  disabled={author_data === '' || institution_data === ''}\r\n                >\r\n                  <div>Submit</div>\r\n                </Button>\r\n              </Grid>\r\n            </>\r\n          )}\r\n        </Grid>\r\n        <div style={{ height: 9 }}></div>\r\n        <div className='graph'>\r\n          {/* <Graph\r\n            id='graph-id' // id is mandatory\r\n            data={data}\r\n            config={myConfig}\r\n            onClickNode={onClickNode}\r\n            onClickLink={onClickLink}\r\n          /> */}\r\n        </div>\r\n\r\n        <div style={{ height: 9 }}></div>\r\n      </form>\r\n    </div>\r\n  )\r\n  const paymentbody = (\r\n    <div style={modalStyle} className={classes.paper}>\r\n      <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n        <h2 style={{ textAlign: 'center' }} id='simple-modal-title'>\r\n          Upgrade payment subscription\r\n        </h2>\r\n        <IconButton\r\n          onClick={handleClose}\r\n          color='inherit'\r\n          aria-label='open drawer'\r\n          style={{ marginTop: -10, marginBottom: 10 }}\r\n        >\r\n          <ClearIcon style={{ color: 'grey' }} />\r\n        </IconButton>\r\n      </div>\r\n      <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n        <Link to='/payment'>\r\n          <Button\r\n            style={{ backgroundColor: 'rgb(32, 32, 32)', color: 'white' }}\r\n          >\r\n            Upgrade\r\n          </Button>\r\n        </Link>\r\n        <Button\r\n          onClick={handleClose}\r\n          style={{ backgroundColor: 'rgb(32, 32, 32)', color: 'white' }}\r\n        >\r\n          Close\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  )\r\n\r\n  console.log(\r\n    'data in nodes -->',\r\n    filterednode ? filterednode : nodde?.nodes ? nodde?.nodes : []\r\n  )\r\n\r\n  const data = {\r\n    nodes: filterednode ? filterednode : nodde?.nodes ? nodde?.nodes : [],\r\n    links: filterededge ? filterededge : nodde?.links ? nodde?.links : [],\r\n    // { source: 'Harry', target: 'Sally' },\r\n    // { source: 'Harry', target: 'Alice' },\r\n    // links: [],\r\n  }\r\n\r\n  const myConfig = {\r\n    nodeHighlightBehavior: true,\r\n    directed: true,\r\n    node: {\r\n      color: '#3A4A57',\r\n      size: 550,\r\n      highlightStrokeColor: 'blue',\r\n      fontSize: 18,\r\n    },\r\n    link: {\r\n      highlightColor: 'lightblue',\r\n      size: 1500,\r\n      strokeWidth: 2.4,\r\n      color: '#6F93B0',\r\n    },\r\n  }\r\n\r\n  const onClickNode = (nodeId) => {\r\n    handleOpenViewNode()\r\n    setPopup(true)\r\n    const nodedetails = nodde?.nodes?.filter((node) => node.id === nodeId)[0]\r\n    console.log('ab', nodedetails)\r\n\r\n    setNodepopup(nodedetails)\r\n  }\r\n\r\n  const onClickLink = (source, target) => {\r\n    console.log('source and target', source, target)\r\n    handleOpenViewEdge()\r\n    const edgedetails = nodde?.links?.filter(\r\n      (link) => link.target === target && link.source === source\r\n    )[0]\r\n    setHaveedgedetails(edgedetails)\r\n  }\r\n\r\n  // const showtheVisiblity = () => {\r\n  //   setHid(true)\r\n  // }\r\n\r\n  const onSetSidebarOpen = () => {\r\n    setSidebarOpen(true)\r\n  }\r\n\r\n  const showmodal = () => {\r\n    handleOpen()\r\n    setPopup(false)\r\n  }\r\n  const addedgemodal = () => {\r\n    handleOpenAddEdge()\r\n    setPopdown(true)\r\n  }\r\n\r\n  const logout = () => {\r\n    dispatch(OauthLogout())\r\n    history.push('/')\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Navbar setVisiblity={setVisiblity} logout={logout} />\r\n      <div className='graph-actions'>\r\n        <div className='web'>\r\n          <Button onClick={handleOpen} variant='contained' color='primary'>\r\n            Add Node\r\n          </Button>\r\n          {nodde?.nodes?.length > 1 ? (\r\n            <Button\r\n              onClick={handleOpenAddEdge}\r\n              style={{ marginLeft: 10 }}\r\n              variant='contained'\r\n              color='primary'\r\n            >\r\n              Add Edge\r\n            </Button>\r\n          ) : null}\r\n        </div>\r\n        <div className='mobile'>\r\n          <div>\r\n            <Fab onClick={handleOpen} color='primary' aria-label='add'>\r\n              <AddIcon />\r\n            </Fab>\r\n          </div>\r\n          {nodde?.nodes?.length > 1 ? (\r\n            <div>\r\n              <Fab\r\n                onClick={handleOpenAddEdge}\r\n                style={{ marginTop: 10 }}\r\n                color='primary'\r\n                aria-label='add'\r\n              >\r\n                <TrendingFlatIcon />\r\n              </Fab>\r\n            </div>\r\n          ) : null}\r\n        </div>\r\n      </div>\r\n      <div\r\n        style={{\r\n          display: 'flex',\r\n          flexDirection: 'row',\r\n          justifyContent: 'space-between',\r\n          height: 'calc(100vh - 70px)',\r\n          backgroundColor: 'rgba(230, 230, 230,1)',\r\n        }}\r\n      >\r\n        <Sidebar visible={visible} showimportview={showimportview} />\r\n        <Modal\r\n          open={open}\r\n          onClose={handleClose}\r\n          aria-labelledby='simple-modal-title'\r\n        >\r\n          {body}\r\n        </Modal>\r\n        <Modal\r\n          open={openViewNode}\r\n          onClose={handleClose}\r\n          aria-labelledby='simple-modal-title'\r\n        >\r\n          {boddy}\r\n        </Modal>\r\n        <Modal\r\n          open={openAddEdge}\r\n          onClose={handleClose}\r\n          aria-labelledby='simple-modal-title'\r\n        >\r\n          {bodddy}\r\n        </Modal>\r\n        <Modal\r\n          open={openViewEdge}\r\n          onClose={handleClose}\r\n          aria-labelledby='simple-modal-title'\r\n        >\r\n          {boddddy}\r\n        </Modal>\r\n        <Modal\r\n          open={haveupdateedge}\r\n          onClose={handleClose}\r\n          aria-labelledby='simple-modal-title'\r\n        >\r\n          {bodddddy}\r\n        </Modal>\r\n        <Modal\r\n          open={openimportview}\r\n          onClose={handleClose}\r\n          aria-labelledby='simple-modal-title'\r\n        >\r\n          {boddddddddy}\r\n        </Modal>\r\n\r\n        <Modal\r\n          open={haveupdatenode}\r\n          onClose={handleClose}\r\n          aria-labelledby='simple-modal-title'\r\n        >\r\n          {bodddddddy}\r\n        </Modal>\r\n        <Modal\r\n          open={payvisi}\r\n          onClose={handleClose}\r\n          aria-labelledby='simple-modal-title'\r\n        >\r\n          {paymentbody}\r\n        </Modal>\r\n        {nodeloading ? (\r\n          <div className={classes.rooot}>\r\n            <CircularProgress />\r\n          </div>\r\n        ) : (\r\n          <div className='graph'>\r\n            <Graph\r\n              id='graph-id' // id is mandatory\r\n              data={data}\r\n              config={myConfig}\r\n              onClickNode={onClickNode}\r\n              onClickLink={onClickLink}\r\n            />\r\n          </div>\r\n        )}\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Links\r\n","E:\\mob-app1\\netbook-client\\src\\reducers\\oauthReducer.js",[],"E:\\mob-app1\\netbook-client\\src\\components\\PrivateRoute.js",["154","155"],"import React from 'react'\r\nimport { Route, Redirect } from 'react-router-dom'\r\nimport { useSelector } from 'react-redux'\r\n\r\nconst PublicRoute = ({ component: Component, ...rest }) => {\r\n  const getOauth = useSelector((state) => state.getOauth)\r\n  const { loading, oauth, error } = getOauth\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        !oauth ? <Redirect to='/' /> : <Component {...props} />\r\n      }\r\n    />\r\n  )\r\n}\r\n\r\nexport default PublicRoute\r\n","E:\\mob-app1\\netbook-client\\src\\screens\\Profile.js",["156","157","158","159","160","161"],"import React, { useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { OauthLogout } from '../actions/oauthAction'\r\nimport Link from '@material-ui/core/Link'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport './home.css'\r\nimport { Link as Links } from 'react-router-dom'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Navbar from '../components/Navbar'\r\nimport Sidebar from '../components/Sidebar'\r\n\r\nconst Profile = ({ props, history }) => {\r\n  const [visible, setVisiblity] = useState(false)\r\n  const dispatch = useDispatch()\r\n  const getOauth = useSelector((state) => state.getOauth)\r\n  const { loading, oauth, error } = getOauth\r\n  const getNode = useSelector((state) => state.getNode)\r\n  const { loading: nodeloading, nodde, error: errror } = getNode\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    multilineColor: {\r\n      color: 'white',\r\n    },\r\n    linkroot: {\r\n      '& > * + *': {\r\n        marginLeft: theme.spacing(2),\r\n      },\r\n    },\r\n  }))\r\n\r\n  const classes = useStyles()\r\n  const logout = () => {\r\n    dispatch(OauthLogout())\r\n    history.push('/')\r\n  }\r\n  console.log('he', oauth)\r\n  return (\r\n    <>\r\n      <Navbar setVisiblity={setVisiblity} logout={logout} />\r\n      <div\r\n        className='feedviewside'\r\n        style={{\r\n          display: 'flex',\r\n          flexDirection: 'row',\r\n          justifyContent: 'flex-start',\r\n          height: 'calc(100vh - 70px)',\r\n          backgroundColor: 'rgba(230, 230, 230,1)',\r\n        }}\r\n      >\r\n        <Sidebar visible={visible} />\r\n        <div\r\n          style={{\r\n            marginTop: 15,\r\n            marginLeft: 16,\r\n            display: 'flex',\r\n          }}\r\n        >\r\n          <div style={{}}>\r\n            <img\r\n              src={oauth?.imageUrl}\r\n              alt='my-img'\r\n              style={{ marginBottom: 8, borderRadius: 48 }}\r\n            />\r\n            <h5 style={{ marginBottom: 8, fontSize: 16 }}>\r\n              Name: <span style={{ fontWeight: 'normal' }}>{oauth.name}</span>\r\n            </h5>\r\n            <h5 style={{ marginBottom: 8, fontSize: 16 }}>\r\n              Email: <span style={{ fontWeight: 'normal' }}>{oauth.email}</span>\r\n            </h5>\r\n            <div\r\n              style={{\r\n                display: 'flex',\r\n                flexDirection: 'row !important',\r\n              }}\r\n            >\r\n              <h5 style={{ fontSize: 16 }}>\r\n                Status: <span style={{ fontWeight: 'normal' }}>free</span>\r\n              </h5>\r\n              <span style={{ marginLeft: 7 }}>\r\n                <Typography className={classes.linkroot}>\r\n                  <Links to='/payment'>Link</Links>\r\n                </Typography>\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Profile\r\n","E:\\mob-app1\\netbook-client\\src\\screens\\Query.js",["162","163","164","165","166","167","168","169","170","171","172","173","174","175","176"],"import React, { useState, useEffect } from 'react'\r\nimport { OauthLogout } from '../actions/oauthAction'\r\nimport FormControl from '@material-ui/core/FormControl'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport ClearIcon from '@material-ui/icons/Clear'\r\nimport InputLabel from '@material-ui/core/InputLabel'\r\nimport { Link } from 'react-router-dom'\r\nimport Select from '@material-ui/core/Select'\r\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize'\r\n\r\nimport './home.css'\r\nimport {\r\n  makeStyles,\r\n  ThemeProvider,\r\n  createMuiTheme,\r\n} from '@material-ui/core/styles'\r\nimport Navbar from '../components/Navbar'\r\nimport Sidebar from '../components/Sidebar'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport { AIQueriesfetch } from '../actions/oauthAction'\r\n\r\nimport {\r\n  Grid,\r\n  Container,\r\n  Modal,\r\n  TextField,\r\n  Button,\r\n  Fab,\r\n} from '@material-ui/core'\r\n\r\nconst Query = ({ props, history }) => {\r\n  const dispatch = useDispatch()\r\n\r\n  const [modalStyle] = useState(getModalStyle)\r\n  const [visible, setVisiblity] = useState(false)\r\n  const [query, setQuery] = useState([])\r\n  const [queryparams, setQueryparams] = useState('')\r\n  const [open, setOpen] = useState(false)\r\n  const getOauth = useSelector((state) => state.getOauth)\r\n  const { loading, oauth, error } = getOauth\r\n  const getNode = useSelector((state) => state.getNode)\r\n  const { loading: nodeloading, nodde, error: errror } = getNode\r\n  const { innerWidth, innerHeight } = window\r\n\r\n  function getModalStyle() {\r\n    const { innerWidth, innerHeight } = window\r\n\r\n    let top = 50,\r\n      left = innerWidth < 600 ? 0 : 50\r\n    return {\r\n      top: `${top}%`,\r\n      left: `${left}%`,\r\n      transform: `translate(-${left}%, -${top}%)`,\r\n    }\r\n  }\r\n\r\n  function getModalStyle() {\r\n    const { innerWidth, innerHeight } = window\r\n\r\n    let top = 50,\r\n      left = innerWidth < 600 ? 0 : 50\r\n    return {\r\n      top: `${top}%`,\r\n      left: `${left}%`,\r\n      transform: `translate(-${left}%, -${top}%)`,\r\n    }\r\n  }\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true)\r\n  }\r\n  const handleClose = () => {\r\n    setOpen(false)\r\n  }\r\n\r\n  useEffect(() => {\r\n    console.log('hhs', oauth)\r\n  }, [loading])\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n      position: 'absolute',\r\n      width: innerWidth > 600 ? 600 : '100%',\r\n\r\n      backgroundColor: theme.palette.background.paper,\r\n      // border: '2px solid #000',\r\n      boxShadow: theme.shadows[5],\r\n      padding: theme.spacing(2, 4, 3),\r\n      maxHeight: 'calc(100vh - 200px)',\r\n      overflow: 'auto !important',\r\n      top: '50%',\r\n    },\r\n    multilineColor: {\r\n      color: 'white',\r\n    },\r\n    formControl: {\r\n      // margin: theme.spacing(1),\r\n      minWidth: 120,\r\n      width: '100%',\r\n    },\r\n    selectEmpty: {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n    root: {\r\n      width: '100%',\r\n      '& > * + *': {\r\n        marginTop: theme.spacing(2),\r\n      },\r\n    },\r\n    rooot: {\r\n      position: 'fixed',\r\n      top: '50%',\r\n      left: '50%',\r\n      transform: 'translate(-50%, -50%)',\r\n    },\r\n    fieldroot: {\r\n      '& .MuiTextField-root': {\r\n        margin: theme.spacing(1),\r\n        width: '25ch',\r\n      },\r\n    },\r\n  }))\r\n\r\n  const classes = useStyles()\r\n  const logout = () => {\r\n    dispatch(OauthLogout())\r\n    history.push('/')\r\n  }\r\n\r\n  const body = (\r\n    <div style={modalStyle} className={classes.paper}>\r\n      <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n        <h2 style={{ textAlign: 'center' }} id='simple-modal-title'>\r\n          Upgrade payment subscription\r\n        </h2>\r\n        <IconButton\r\n          onClick={handleClose}\r\n          color='inherit'\r\n          aria-label='open drawer'\r\n          style={{ marginTop: -10, marginBottom: 10 }}\r\n        >\r\n          <ClearIcon style={{ color: 'grey' }} />\r\n        </IconButton>\r\n      </div>\r\n      <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n        <Link to='/payment'>\r\n          <Button\r\n            style={{ backgroundColor: 'rgb(32, 32, 32)', color: 'white' }}\r\n          >\r\n            Upgrade\r\n          </Button>\r\n        </Link>\r\n        <Button\r\n          onClick={handleClose}\r\n          style={{ backgroundColor: 'rgb(32, 32, 32)', color: 'white' }}\r\n        >\r\n          Close\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  )\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    if (oauth?.AIQueries < oauth?.packageid?.AIQueries) {\r\n      console.log('submitted')\r\n      dispatch(AIQueriesfetch(oauth?._id, queryparams))\r\n    } else handleOpen()\r\n  }\r\n  console.log('he', oauth)\r\n\r\n  return (\r\n    <>\r\n      <Navbar setVisiblity={setVisiblity} logout={logout} />\r\n      <div\r\n        className='feedviewside'\r\n        style={{\r\n          display: 'flex',\r\n          flexDirection: 'row',\r\n          justifyContent: 'flex-start',\r\n          height: 'calc(100vh - 70px)',\r\n          backgroundColor: 'rgba(230, 230, 230,1)',\r\n        }}\r\n      >\r\n        <Sidebar visible={visible} />\r\n        <div\r\n          style={{\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n            flex: 1,\r\n          }}\r\n        >\r\n          <div className='queryform'>\r\n            <form onSubmit={submitHandler}>\r\n              <FormControl\r\n                className={classes.formControl}\r\n                variant='outlined'\r\n                size='small'\r\n              >\r\n                <InputLabel id='demo-simple-select-label'>Query</InputLabel>\r\n                <Select\r\n                  labelId='demo-simple-select-label'\r\n                  value={query}\r\n                  onChange={(e) => setQuery(e.target.value)}\r\n                >\r\n                  {/* {selectimport.map((si) => (\r\n                  // <MenuItem value={idd._id}>{idd.id}</MenuItem>\r\n                ))} */}\r\n                </Select>\r\n              </FormControl>\r\n\r\n              <div style={{ height: 9 }}></div>\r\n              <TextField\r\n                style={{ color: 'black', width: '100%', marginTop: 9 }}\r\n                id='outlined-basic'\r\n                size='small'\r\n                label='Query Params'\r\n                value={queryparams}\r\n                onChange={(e) => setQueryparams(e.target.value)}\r\n                variant='outlined'\r\n              />\r\n              <div style={{ height: 9 }}></div>\r\n              <TextField\r\n                style={{\r\n                  color: 'black',\r\n                  width: '100%',\r\n                  marginTop: 9,\r\n                  pointerEvents: 'none',\r\n                }}\r\n                className={classes.fieldroot}\r\n                id='outlined-multiline-static'\r\n                multiline\r\n                rows={4}\r\n                value={oauth.msg ? oauth?.msg?.message : null}\r\n                // defaultValue='Default Value'\r\n                variant='outlined'\r\n              />\r\n              <div style={{ height: 9 }}></div>\r\n              <div style={{ display: 'flex', justifyContent: 'flex-end' }}>\r\n                <Button\r\n                  type='submit'\r\n                  style={{\r\n                    backgroundColor: 'rgb(32,32,32)',\r\n                    color: 'white',\r\n                    marginTop: 9,\r\n                  }}\r\n                >\r\n                  Ask\r\n                </Button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <Modal\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby='simple-modal-title'\r\n      >\r\n        {body}\r\n      </Modal>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Query\r\n","E:\\mob-app1\\netbook-client\\src\\components\\PublicRoute.js",["177","178"],"import React from 'react'\r\nimport { Route, Redirect } from 'react-router-dom'\r\nimport { useSelector } from 'react-redux'\r\n\r\nconst PublicRoute = ({ component: Component, ...rest }) => {\r\n  const getOauth = useSelector((state) => state.getOauth)\r\n  const { loading, oauth, error } = getOauth\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        oauth ? <Redirect to='/graph' /> : <Component {...props} />\r\n      }\r\n    />\r\n  )\r\n}\r\n\r\nexport default PublicRoute\r\n","E:\\mob-app1\\netbook-client\\src\\reducers\\nodeReducer.js",["179","180","181","182","183","184","185","186","187","188","189","190","191","192","193","194","195","196","197","198","199","200"],"E:\\mob-app1\\netbook-client\\src\\components\\Sidebar.js",[],"E:\\mob-app1\\netbook-client\\src\\components\\Navbar.js",["201","202","203","204","205","206","207","208","209","210","211","212","213","214","215","216"],"import React, { useState, useRef, useEffect } from 'react'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport MenuIcon from '@material-ui/icons/Menu'\r\nimport { makeStyles, TextField } from '@material-ui/core'\r\nimport InputAdornment from '@material-ui/core/InputAdornment'\r\nimport SearchIcon from '@material-ui/icons/Search'\r\nimport TuneIcon from '@material-ui/icons/Tune'\r\nimport Checkbox from '@material-ui/core/Checkbox'\r\nimport Alert from '@material-ui/lab/Alert'\r\n\r\nimport { GoogleLogout } from 'react-google-login'\r\nimport './../screens/home.css'\r\nimport {\r\n  Searchnode,\r\n  Clearnode,\r\n  Searchedge,\r\n  Clearedge,\r\n  Searchnodeedge,\r\n  Searchedgeand,\r\n  Searchnodeand,\r\n  Searchedgeor,\r\n  Searchnodeor,\r\n} from '../actions/nodeAction'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nconst Navbar = (props) => {\r\n  const getNode = useSelector((state) => state.getNode)\r\n  const {\r\n    loading: nodeloading,\r\n    filterednode,\r\n    filterededge,\r\n    nodde,\r\n    error: errror,\r\n  } = getNode\r\n\r\n  const { innerWidth, innerHeight } = window\r\n\r\n  const nodesearch = useRef('')\r\n  const edgesearch = useRef('')\r\n  const [edgeval, setEdgeval] = useState('')\r\n  const [nodeval, setNodeval] = useState('')\r\n  const [vissible, setVissiblity] = useState(false)\r\n  const [searchedge, setSearchedge] = useState('')\r\n  const [msgg, setMsgg] = useState('')\r\n\r\n  const [msggg, setMsggg] = useState('')\r\n  const [checked, setChecked] = useState(false)\r\n  const [checker, setChecker] = useState(false)\r\n  const dispatch = useDispatch()\r\n  useEffect(() => {\r\n    if (filterednode === null) {\r\n      nodesearch.current.value = ''\r\n    }\r\n  })\r\n  useEffect(() => {\r\n    if (filterededge === null) {\r\n      edgesearch.current.value = ''\r\n    }\r\n  })\r\n  useEffect(() => {\r\n    console.log('checked', checked)\r\n  }, [checked])\r\n  const useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n      position: 'absolute',\r\n      width: innerWidth > 600 ? 600 : '100%',\r\n\r\n      backgroundColor: theme.palette.background.paper,\r\n      // border: '2px solid #000',\r\n      boxShadow: theme.shadows[5],\r\n      padding: theme.spacing(2, 4, 3),\r\n      maxHeight: 'calc(100vh - 200px)',\r\n      overflow: 'auto !important',\r\n      top: '50%',\r\n    },\r\n    alertroot: {\r\n      width: '100%',\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      marginTop: theme.spacing(2),\r\n      position: 'fixed',\r\n      top: '20%',\r\n      left: '25%',\r\n    },\r\n    multilineColor: {\r\n      color: 'white',\r\n    },\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: 120,\r\n      width: '100%',\r\n    },\r\n    selectEmpty: {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n    root: {\r\n      width: '100%',\r\n      '& > * + *': {\r\n        marginTop: theme.spacing(2),\r\n      },\r\n    },\r\n    rooot: {\r\n      display: 'flex',\r\n      '& > * + *': {\r\n        marginLeft: theme.spacing(2),\r\n\r\n        justifyContent: 'center !important',\r\n      },\r\n    },\r\n  }))\r\n  const handleChange = (event) => {\r\n    setChecked(event.target.checked)\r\n  }\r\n\r\n  const classes = useStyles()\r\n\r\n  const onChange = (e) => {\r\n    nodesearch.current.value = e.target.value\r\n    console.log('1', nodesearch.current.value, edgesearch.current.value)\r\n    let namess = nodesearch.current.value\r\n    let node1\r\n    let node2\r\n    let numnod\r\n    if (namess.includes('^')) {\r\n      var charRepeats = function (str) {\r\n        return (numnod = (str.match(/\\^/g) || []).length)\r\n      }\r\n      charRepeats(namess)\r\n      console.log('numnod', numnod)\r\n      if (numnod > 1) {\r\n        setMsgg('You can only type ^ once')\r\n\r\n        console.log('abbc')\r\n      }\r\n      node1 = namess.split('^')[0]\r\n      node2 = namess.split('^')[1]\r\n\r\n      dispatch(Searchnodeand(node1, node2,checked))\r\n      console.log('names', node1, node2)\r\n    }\r\n    if (namess.includes('|')) {\r\n      var charRepeats = function (str) {\r\n        return (numnod = (str.match(/\\|/g) || []).length)\r\n      }\r\n      charRepeats(namess)\r\n      console.log('numnod', numnod)\r\n      if (numnod > 1) {\r\n        setMsggg('You can only type | once')\r\n\r\n        console.log('abbbc')\r\n      }\r\n      node1 = namess.split('|')[0]\r\n      node2 = namess.split('|')[1]\r\n\r\n      if (!!node1 && !!node2) {\r\n        dispatch(Searchnodeor(node1, node2,checked))\r\n      }\r\n      console.log('namesss', node1, node2)\r\n    } else if (e.nativeEvent.data === null) {\r\n      dispatch(\r\n        Searchnodeedge(nodesearch.current.value, edgesearch.current.value,checked)\r\n      )\r\n      console.log('delete')\r\n    } else if (\r\n      nodesearch.current.value !== '' &&\r\n      !nodesearch.current.value.includes('^')\r\n    ) {\r\n      dispatch(Searchnode(e.target.value,checked))\r\n    } else {\r\n      // dispatch(Clearnode())\r\n    }\r\n  }\r\n  const onedgeChange = (e) => {\r\n    edgesearch.current.value = e.target.value\r\n    console.log('2', nodesearch.current.value, edgesearch.current.value)\r\n    let names = edgesearch.current.value\r\n    let edge1\r\n    let edge2\r\n    let numedg\r\n    if (names.includes('^')) {\r\n      var charRepeats = function (str) {\r\n        return (numedg = (str.match(/\\^/g) || []).length)\r\n      }\r\n      charRepeats(names)\r\n      console.log('numedg', numedg)\r\n      if (numedg > 1) {\r\n        setMsgg('You can only type ^ once')\r\n\r\n        console.log('abbc')\r\n      }\r\n      edge1 = names.split('^')[0]\r\n      edge2 = names.split('^')[1]\r\n\r\n      dispatch(Searchedgeand(edge1, edge2,checked))\r\n      console.log('names', edge1, edge2)\r\n    }\r\n    if (names.includes('|')) {\r\n      var charRepeats = function (str) {\r\n        return (numedg = (str.match(/\\|/g) || []).length)\r\n      }\r\n      charRepeats(names)\r\n      console.log('numedg', numedg)\r\n      if (numedg > 1) {\r\n        setMsggg('You can only type | once')\r\n\r\n        console.log('abbbc')\r\n      }\r\n      edge1 = names.split('|')[0]\r\n      edge2 = names.split('|')[1]\r\n\r\n      if (!!edge1 && !!edge2) {\r\n        dispatch(Searchedgeor(edge1, edge2,checked))\r\n      }\r\n      console.log('namesss', edge1, edge2)\r\n    }\r\n\r\n    if (e.nativeEvent.data === null) {\r\n      dispatch(\r\n        Searchnodeedge(nodesearch.current.value, edgesearch.current.value,checked)\r\n      )\r\n      console.log('delete')\r\n    } else if (\r\n      edgesearch.current.value !== '' &&\r\n      !edgesearch.current.value.includes('^') &&\r\n      !edgesearch.current.value.includes('|')\r\n    ) {\r\n      dispatch(Searchedge(e.target.value,checked))\r\n    } else {\r\n      // dispatch(Clearedge())\r\n    }\r\n  }\r\n\r\n  const onkeydownEdge = (e) => {\r\n    if (e.keyCode === 8) {\r\n      console.log('delete')\r\n    } else if (edgesearch.current.value !== '') {\r\n      dispatch(Searchedge(e.target.value))\r\n    } else {\r\n      dispatch(Clearedge())\r\n    }\r\n  }\r\n  const onkeydownNode = (e) => {\r\n    if (e.keyCode === 8) {\r\n      console.log('delete')\r\n    } else if (nodesearch.current.value !== '') {\r\n      dispatch(Searchnode(e.target.value))\r\n    } else {\r\n      dispatch(Clearnode())\r\n    }\r\n  }\r\n  return (\r\n    <>\r\n      <nav\r\n        className='navbar'\r\n        style={{\r\n          backgroundColor: 'rgb(32,32,32)',\r\n          width: '100%',\r\n          height: 70,\r\n          display: 'flex',\r\n          justifyContent: 'space-between',\r\n          alignItems: 'center',\r\n        }}\r\n      >\r\n        <div style={{ display: 'flex' }}>\r\n          <IconButton\r\n            className='menuicon'\r\n            onClick={() => props.setVisiblity((visiblity) => !visiblity)}\r\n            color='inherit'\r\n            aria-label='open drawer'\r\n          >\r\n            <MenuIcon style={{ color: 'grey' }} />\r\n          </IconButton>\r\n          <h3\r\n            className='netbook'\r\n            style={{ color: 'white', display: 'flex', alignItems: 'center' }}\r\n          >\r\n            Netbook\r\n          </h3>\r\n        </div>\r\n        <div style={{ display: 'flex' }} className='filterfield'>\r\n          <TextField\r\n            style={{\r\n              color: 'white',\r\n              backgroundColor: 'rgb(18,18,18)',\r\n              display: 'flex',\r\n            }}\r\n            label='Filter'\r\n            fullWidth\r\n            margin='normal'\r\n            // onChange={}\r\n            size='small'\r\n            variant='outlined'\r\n            InputProps={{\r\n              className: classes.multilineColor,\r\n\r\n              endAdornment: (\r\n                <InputAdornment position='end'>\r\n                  <SearchIcon />\r\n                </InputAdornment>\r\n              ),\r\n            }}\r\n          />\r\n          <IconButton\r\n            className='menuicon'\r\n            onClick={() => setVissiblity((vissiblity) => !vissiblity)}\r\n            color='inherit'\r\n            aria-label='open drawer'\r\n          >\r\n            <TuneIcon style={{ color: 'grey' }} />\r\n          </IconButton>\r\n        </div>\r\n\r\n        <div className='gbtn' style={{ display: 'flex', alignItems: 'center' }}>\r\n          <GoogleLogout\r\n            className='gg'\r\n            color='white'\r\n            theme='dark'\r\n            clientId='542443202716-1162el1e1nqk02h64h08frl40vsl5hgp.apps.googleusercontent.com'\r\n            buttonText='Logout'\r\n            onLogoutSuccess={props.logout}\r\n          ></GoogleLogout>\r\n        </div>\r\n      </nav>\r\n      <div className={classes.alertroot}>\r\n        {msgg ? <Alert severity='error'>{msgg}</Alert> : null}\r\n      </div>\r\n      <div className={vissible ? 'showsearchbars' : 'hidesearchbars'}>\r\n        {' '}\r\n        <TextField\r\n          className='filterr'\r\n          style={{\r\n            color: 'white',\r\n            width: 300,\r\n            backgroundColor: 'rgb(18,18,18)',\r\n            display: 'flex',\r\n          }}\r\n          label='Search Node'\r\n          margin='normal'\r\n          type='text'\r\n          ref={nodesearch}\r\n          onChange={onChange}\r\n          // onKeyDown={onkeydownNode}\r\n          // onChange={}\r\n          size='small'\r\n          variant='outlined'\r\n          InputProps={{\r\n            className: classes.multilineColor,\r\n\r\n            endAdornment: (\r\n              <InputAdornment position='end'>\r\n                <SearchIcon />\r\n              </InputAdornment>\r\n            ),\r\n          }}\r\n        />\r\n        <TextField\r\n          className='filterr'\r\n          style={{\r\n            color: 'white',\r\n            width: 300,\r\n            backgroundColor: 'rgb(18,18,18)',\r\n            display: 'flex',\r\n          }}\r\n          label='Search Edge'\r\n          margin='normal'\r\n          ref={edgesearch}\r\n          onChange={onedgeChange}\r\n          disabled={checker}\r\n          // onKeyDown={onkeydownEdge}\r\n          // onChange={}\r\n          size='small'\r\n          variant='outlined'\r\n          InputProps={{\r\n            className: classes.multilineColor,\r\n\r\n            endAdornment: (\r\n              <InputAdornment position='end'>\r\n                <SearchIcon />\r\n              </InputAdornment>\r\n            ),\r\n          }}\r\n        />\r\n        <Checkbox\r\n          checked={checked}\r\n          onChange={handleChange}\r\n          color='default'\r\n          inputProps={{ 'aria-label': 'checkbox with default color' }}\r\n        />\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Navbar\r\n","E:\\mob-app1\\netbook-client\\src\\constants\\oauthConstant.js",[],"E:\\mob-app1\\netbook-client\\src\\constants\\nodeConstant.js",[],"E:\\mob-app1\\netbook-client\\src\\actions\\oauthAction.js",[],"E:\\mob-app1\\netbook-client\\src\\actions\\nodeAction.js",["217","218","219","220","221","222","223","224"],"E:\\mob-app1\\netbook-client\\src\\screens\\Payment.js",["225","226","227","228","229","230","231","232","233","234","235"],"import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport ClearIcon from '@material-ui/icons/Clear'\r\nimport Card from '@material-ui/core/Card'\r\nimport CardActions from '@material-ui/core/CardActions'\r\nimport CardContent from '@material-ui/core/CardContent'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport CheckIcon from '@material-ui/icons/Check'\r\nimport StripeCheckout from 'react-stripe-checkout'\r\nimport CircularProgress from '@material-ui/core/CircularProgress'\r\nimport HomePage from '../components/HomePage'\r\nimport { Elements } from '@stripe/react-stripe-js'\r\nimport { loadStripe } from '@stripe/stripe-js'\r\nimport {\r\n  Grid,\r\n  Container,\r\n  Modal,\r\n  TextField,\r\n  Button,\r\n  Fab,\r\n} from '@material-ui/core'\r\nimport {\r\n  ThemeProvider,\r\n  createMuiTheme,\r\n  makeStyles,\r\n} from '@material-ui/core/styles'\r\n\r\nconst stripePromise = loadStripe('pk_test_IdCqGO7sona7aWZqqiXTs3MN00vl1vkEQa')\r\n\r\nconst Payment = () => {\r\n  const [paymentdata, setPaymentdata] = useState([])\r\n  const [showloader, setShowloader] = useState(true)\r\n  const premiumid = 'price_1IMpnpLSi7LM2Y4Gj69OcvqC'\r\n  const basicid = 'price_1IMazjLSi7LM2Y4Gg8zEo3FY'\r\n  const [open, setOpen] = useState(false)\r\n\r\n  const { innerWidth, innerHeight } = window\r\n  const [modalStyle] = useState(getModalStyle)\r\n\r\n  function getModalStyle() {\r\n    const { innerWidth, innerHeight } = window\r\n\r\n    let top = 50,\r\n      left = innerWidth < 600 ? 0 : 50\r\n    return {\r\n      top: `${top}%`,\r\n      left: `${left}%`,\r\n      transform: `translate(-${left}%, -${top}%)`,\r\n    }\r\n  }\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true)\r\n  }\r\n  const handleClose = () => {\r\n    setOpen(false)\r\n  }\r\n\r\n  useEffect(() => {\r\n    const paymentAPI = async () => {\r\n      const { data } = await axios.get(\r\n        'https://netbook-server.herokuapp.com/packages'\r\n      )\r\n      setPaymentdata(data)\r\n      console.log('apidata', data)\r\n      console.log('data', paymentdata)\r\n      if (data) {\r\n        setShowloader(false)\r\n      }\r\n    }\r\n\r\n    paymentAPI()\r\n  }, [])\r\n  const [paymentone, setPaymentone] = useState(paymentdata[1])\r\n  const useStyles = makeStyles((theme) => ({\r\n    bullet: {\r\n      display: 'inline-block',\r\n      margin: '0 2px',\r\n      transform: 'scale(0.8)',\r\n    },\r\n    title: {\r\n      fontSize: 14,\r\n    },\r\n    loaderroot: {\r\n      display: 'flex',\r\n      '& > * + *': {\r\n        marginLeft: theme.spacing(2),\r\n      },\r\n    },\r\n    pos: {\r\n      marginBottom: 12,\r\n    },\r\n    paper: {\r\n      position: 'absolute',\r\n      width: innerWidth > 600 ? 600 : '100%',\r\n      height: '400px',\r\n      backgroundColor: theme.palette.background.paper,\r\n      // border: '2px solid #000',\r\n      boxShadow: theme.shadows[5],\r\n      padding: theme.spacing(2, 4, 3),\r\n      maxHeight: 'calc(100vh - 200px)',\r\n      // overflow: 'auto !important',\r\n      top: '50%',\r\n    },\r\n    multilineColor: {\r\n      color: 'white',\r\n    },\r\n    formControl: {\r\n      // margin: theme.spacing(1),\r\n      minWidth: 120,\r\n      width: '100%',\r\n    },\r\n    selectEmpty: {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n    root: {\r\n      width: '100%',\r\n      '& > * + *': {\r\n        marginTop: theme.spacing(2),\r\n      },\r\n    },\r\n    rooot: {\r\n      position: 'fixed',\r\n      top: '50%',\r\n      left: '50%',\r\n      transform: 'translate(-50%, -50%)',\r\n    },\r\n  }))\r\n  const classes = useStyles()\r\n  const bull = <span className={classes.bullet}>•</span>\r\n  const handletoken = (token, addresses) => {\r\n    console.log(token, addresses)\r\n  }\r\n\r\n  const body = (\r\n    <div style={modalStyle} className={classes.paper}>\r\n      <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n        <h2 style={{ textAlign: 'center' }} id='simple-modal-title'>\r\n          Payment\r\n        </h2>\r\n        <IconButton\r\n          onClick={handleClose}\r\n          color='inherit'\r\n          aria-label='open drawer'\r\n          style={{ marginTop: -10, marginBottom: 10 }}\r\n        >\r\n          <ClearIcon style={{ color: 'grey' }} />\r\n        </IconButton>\r\n      </div>\r\n      <div style={{ marginTop: '-215px' }}>\r\n        <Elements stripe={stripePromise}>\r\n          <HomePage packageid={paymentone} />\r\n        </Elements>\r\n      </div>\r\n    </div>\r\n  )\r\n\r\n  return (\r\n    <div className='pmtresp'>\r\n      {showloader ? (\r\n        <div className={classes.loaderroot}>\r\n          <CircularProgress\r\n            style={{\r\n              top: '50%',\r\n\r\n              position: 'absolute',\r\n              left: '50%',\r\n            }}\r\n          />\r\n        </div>\r\n      ) : (\r\n        <Container>\r\n          <Grid container spacing={3}>\r\n            <Grid item md={4} xs={12}>\r\n              <Card onClick={handleOpen} className='rooot'>\r\n                <Container>\r\n                  <CardContent>\r\n                    <Typography\r\n                      style={{\r\n                        fontSize: 25,\r\n                        textAlign: 'center',\r\n                        color: 'rgb(133,176,229)',\r\n                        fontWeight: 'normal',\r\n                        marginBottom: 15,\r\n                      }}\r\n                    >\r\n                      {paymentdata[0]?.type}\r\n                    </Typography>\r\n\r\n                    <Typography\r\n                      style={{\r\n                        position: 'relative',\r\n                        fontSize: 35,\r\n                        textAlign: 'center',\r\n                      }}\r\n                    >\r\n                      {' '}\r\n                      <span\r\n                        style={{ color: 'rgb(133,176,229)' }}\r\n                        className='euros'\r\n                      >\r\n                        €\r\n                      </span>\r\n                      {paymentdata[0]?.price}\r\n                      <span style={{ fontSize: 30 }}>/</span>\r\n                      <span className='month'>mo</span>\r\n                    </Typography>\r\n\r\n                    <div\r\n                      style={{\r\n                        display: 'flex',\r\n                        justifyContent: 'space-between',\r\n                        marginTop: 18,\r\n                      }}\r\n                    >\r\n                      {''}\r\n\r\n                      <div style={{ display: 'flex' }}>\r\n                        <CheckIcon\r\n                          style={{ marginRight: 20, color: 'rgb(133,176,229)' }}\r\n                        />\r\n                        <p style={{ fontSize: 15 }}>Nodes</p>\r\n                      </div>\r\n                      <p style={{ fontSize: 15 }}> {paymentdata[0]?.Nodes}</p>\r\n                    </div>\r\n                    <div\r\n                      style={{\r\n                        display: 'flex',\r\n                        justifyContent: 'space-between',\r\n                        marginTop: 18,\r\n                      }}\r\n                    >\r\n                      {''}\r\n\r\n                      <div style={{ display: 'flex' }}>\r\n                        <CheckIcon\r\n                          style={{ marginRight: 20, color: 'rgb(133,176,229)' }}\r\n                        />\r\n                        <p style={{ fontSize: 15 }}>Edges</p>\r\n                      </div>\r\n                      <p style={{ fontSize: 15 }}>{paymentdata[0]?.Edges}</p>\r\n                    </div>\r\n                    <div\r\n                      style={{\r\n                        display: 'flex',\r\n                        justifyContent: 'space-between',\r\n                        marginTop: 18,\r\n                      }}\r\n                    >\r\n                      {''}\r\n\r\n                      <div style={{ display: 'flex' }}>\r\n                        <CheckIcon\r\n                          style={{ marginRight: 20, color: 'rgb(133,176,229)' }}\r\n                        />\r\n                        <p style={{ fontSize: 15 }}>AI Queries</p>\r\n                      </div>\r\n                      <p style={{ fontSize: 15 }}>\r\n                        {paymentdata[0]?.AIQueries}\r\n                      </p>\r\n                    </div>\r\n                  </CardContent>\r\n                  <CardActions>\r\n                    <Button size='small'></Button>\r\n                  </CardActions>\r\n                </Container>\r\n              </Card>\r\n            </Grid>\r\n            <Grid item md={4} xs={12}>\r\n              <Card\r\n                onClick={() => {\r\n                  setPaymentone(basicid)\r\n                  console.log('one', paymentone)\r\n                  handleOpen()\r\n                }}\r\n                className='rooot'\r\n              >\r\n                <Container>\r\n                  <CardContent>\r\n                    <Typography\r\n                      style={{\r\n                        fontSize: 25,\r\n                        textAlign: 'center',\r\n                        color: 'rgb(230,77,95)',\r\n                        fontWeight: 'normal',\r\n                        marginBottom: 15,\r\n                      }}\r\n                    >\r\n                      {paymentdata[1]?.type}\r\n                    </Typography>\r\n\r\n                    <Typography\r\n                      style={{\r\n                        position: 'relative',\r\n                        fontSize: 35,\r\n                        textAlign: 'center',\r\n                      }}\r\n                    >\r\n                      {' '}\r\n                      <span\r\n                        style={{ color: 'rgb(230,77,95)' }}\r\n                        className='euros'\r\n                      >\r\n                        €\r\n                      </span>\r\n                      {paymentdata[1]?.price}\r\n                      <span style={{ fontSize: 30 }}>/</span>\r\n                      <span className='month'>mo</span>\r\n                    </Typography>\r\n\r\n                    <div\r\n                      style={{\r\n                        display: 'flex',\r\n                        justifyContent: 'space-between',\r\n                        marginTop: 18,\r\n                      }}\r\n                    >\r\n                      {''}\r\n                      <div style={{ display: 'flex' }}>\r\n                        <CheckIcon\r\n                          style={{ marginRight: 20, color: 'rgb(230,77,95)' }}\r\n                        />\r\n                        <p style={{ fontSize: 15 }}>Nodes</p>\r\n                      </div>\r\n                      <p style={{ fontSize: 15 }}>{paymentdata[1]?.Nodes}</p>\r\n                    </div>\r\n                    <div\r\n                      style={{\r\n                        display: 'flex',\r\n                        justifyContent: 'space-between',\r\n                        marginTop: 18,\r\n                      }}\r\n                    >\r\n                      {''}\r\n\r\n                      <div style={{ display: 'flex' }}>\r\n                        <CheckIcon\r\n                          style={{ marginRight: 20, color: 'rgb(230,77,95)' }}\r\n                        />\r\n                        <p style={{ fontSize: 15 }}>Edges</p>\r\n                      </div>\r\n                      <p style={{ fontSize: 15 }}>{paymentdata[1]?.Edges}</p>\r\n                    </div>\r\n                    <div\r\n                      style={{\r\n                        display: 'flex',\r\n                        justifyContent: 'space-between',\r\n                        marginTop: 18,\r\n                      }}\r\n                    >\r\n                      {''}\r\n\r\n                      <div style={{ display: 'flex' }}>\r\n                        <CheckIcon\r\n                          style={{ marginRight: 20, color: 'rgb(230,77,95)' }}\r\n                        />\r\n                        <p style={{ fontSize: 15 }}>AI Queries</p>\r\n                      </div>\r\n                      <p style={{ fontSize: 15 }}>\r\n                        {paymentdata[1]?.AIQueries}\r\n                      </p>\r\n                    </div>\r\n                  </CardContent>\r\n                  <CardActions>\r\n                    <Button size='small'></Button>\r\n                  </CardActions>\r\n                </Container>\r\n              </Card>\r\n            </Grid>\r\n            <Grid item md={4} xs={12}>\r\n              <Card\r\n                onClick={() => {\r\n                  setPaymentone(premiumid)\r\n                  console.log('second', paymentone)\r\n                  handleOpen()\r\n                }}\r\n                className='rooot'\r\n              >\r\n                <Container>\r\n                  <CardContent>\r\n                    <Typography\r\n                      style={{\r\n                        fontSize: 25,\r\n                        textAlign: 'center',\r\n                        color: 'rgb(170,219,124)',\r\n                        fontWeight: 'normal',\r\n                        marginBottom: 15,\r\n                      }}\r\n                    >\r\n                      {paymentdata[2]?.type}\r\n                    </Typography>\r\n\r\n                    <Typography\r\n                      style={{\r\n                        position: 'relative',\r\n                        fontSize: 35,\r\n                        textAlign: 'center',\r\n                      }}\r\n                    >\r\n                      {' '}\r\n                      <span\r\n                        style={{ color: 'rgb(170,219,124)' }}\r\n                        className='euros'\r\n                      >\r\n                        €\r\n                      </span>\r\n                      {paymentdata[2]?.price}\r\n                      <span style={{ fontSize: 30 }}>/</span>\r\n                      <span className='month'>mo</span>\r\n                    </Typography>\r\n\r\n                    <div\r\n                      style={{\r\n                        display: 'flex',\r\n                        justifyContent: 'space-between',\r\n                        marginTop: 18,\r\n                      }}\r\n                    >\r\n                      {''}\r\n\r\n                      <div style={{ display: 'flex' }}>\r\n                        <CheckIcon\r\n                          style={{ marginRight: 20, color: 'rgb(170,219,124)' }}\r\n                        />\r\n                        <p style={{ fontSize: 15 }}>Nodes</p>\r\n                      </div>\r\n                      <p style={{ fontSize: 15 }}>{paymentdata[2]?.Nodes}</p>\r\n                    </div>\r\n                    <div\r\n                      style={{\r\n                        display: 'flex',\r\n                        justifyContent: 'space-between',\r\n                        marginTop: 18,\r\n                      }}\r\n                    >\r\n                      {''}\r\n\r\n                      <div style={{ display: 'flex' }}>\r\n                        <CheckIcon\r\n                          style={{ marginRight: 20, color: 'rgb(170,219,124)' }}\r\n                        />\r\n                        <p style={{ fontSize: 15 }}>Edges</p>\r\n                      </div>\r\n                      <p style={{ fontSize: 15 }}>{paymentdata[2]?.Edges}</p>\r\n                    </div>\r\n                    <div\r\n                      style={{\r\n                        display: 'flex',\r\n                        justifyContent: 'space-between',\r\n                        marginTop: 18,\r\n                      }}\r\n                    >\r\n                      {''}\r\n\r\n                      <div style={{ display: 'flex' }}>\r\n                        <CheckIcon\r\n                          style={{ marginRight: 20, color: 'rgb(170,219,124)' }}\r\n                        />\r\n                        <p style={{ fontSize: 15 }}>AI Queries</p>\r\n                      </div>\r\n                      <p style={{ fontSize: 15 }}>\r\n                        {paymentdata[2]?.AIQueries}\r\n                      </p>\r\n                    </div>\r\n                  </CardContent>\r\n                  <CardActions>\r\n                    <Button size='small'></Button>\r\n                  </CardActions>\r\n                </Container>\r\n              </Card>\r\n            </Grid>\r\n          </Grid>\r\n          <Modal\r\n            open={open}\r\n            onClose={handleClose}\r\n            aria-labelledby='simple-modal-title'\r\n          >\r\n            {body}\r\n          </Modal>\r\n          {/* {paymentone ? (\r\n            <Elements stripe={stripePromise}>\r\n              <HomePage packageid={paymentone} />\r\n            </Elements>\r\n          ) : null} */}\r\n        </Container>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Payment\r\n","E:\\mob-app1\\netbook-client\\src\\components\\HomePage.js",["236"],"import React, { useState } from 'react'\r\nimport axios from 'axios'\r\n// MUI Components\r\nimport Button from '@material-ui/core/Button'\r\nimport Card from '@material-ui/core/Card'\r\nimport CardContent from '@material-ui/core/CardContent'\r\nimport TextField from '@material-ui/core/TextField'\r\n// stripe\r\nimport { useStripe, useElements, CardElement } from '@stripe/react-stripe-js'\r\n// Util imports\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n// Custom Components\r\nimport CardInput from './CardInput'\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    maxWidth: 500,\r\n    margin: '35vh auto',\r\n    boxShadow: '3px 3px 5px -3px rgba(0, 0, 0, 0.2)',\r\n  },\r\n  content: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignContent: 'flex-start',\r\n  },\r\n  div: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    alignContent: 'flex-start',\r\n    justifyContent: 'space-between',\r\n  },\r\n  button: {\r\n    margin: '2em auto 1em',\r\n  },\r\n})\r\n\r\nfunction HomePage({ history, packageid }) {\r\n  const classes = useStyles()\r\n  // State\r\n  const [email, setEmail] = useState('')\r\n\r\n  const stripe = useStripe()\r\n  const elements = useElements()\r\n\r\n  const handleSubmitPay = async (event) => {\r\n    if (!stripe || !elements) {\r\n      // Stripe.js has not yet loaded.\r\n      // Make sure to disable form submission until Stripe.js has loaded.\r\n      return\r\n    }\r\n\r\n    const res = await axios.post('http://localhost:5000/packages', {\r\n      email: email,\r\n    })\r\n\r\n    const clientSecret = res.data['client_secret']\r\n\r\n    const result = await stripe.confirmCardPayment(clientSecret, {\r\n      payment_method: {\r\n        card: elements.getElement(CardElement),\r\n        billing_details: {\r\n          email: email,\r\n        },\r\n      },\r\n    })\r\n\r\n    if (result.error) {\r\n      // Show error to your customer (e.g., insufficient funds)\r\n      console.log(result.error.message)\r\n    } else {\r\n      // The payment has been processed!\r\n      if (result.paymentIntent.status === 'succeeded') {\r\n        console.log('Money is in the bank!')\r\n        // Show a success message to your customer\r\n        // There's a risk of the customer closing the window before callback\r\n        // execution. Set up a webhook or plugin to listen for the\r\n        // payment_intent.succeeded event that handles any business critical\r\n        // post-payment actions.\r\n      }\r\n    }\r\n  }\r\n\r\n  const handleSubmitSub = async (event) => {\r\n    if (!stripe || !elements) {\r\n      // Stripe.js has not yet loaded.\r\n      // Make sure to disable form submission until Stripe.js has loaded.\r\n      return\r\n    }\r\n\r\n    const result = await stripe.createPaymentMethod({\r\n      type: 'card',\r\n      card: elements.getElement(CardElement),\r\n      billing_details: {\r\n        email: email,\r\n      },\r\n    })\r\n\r\n    if (result.error) {\r\n      console.log(result.error.message)\r\n    } else {\r\n      const res = await axios.post(\r\n        'https://netbook-server.herokuapp.com/packages/subscription',\r\n        { payment_method: result.paymentMethod.id, email: email, packageid }\r\n      )\r\n      // eslint-disable-next-line camelcase\r\n      const { client_secret, status } = res.data\r\n\r\n      if (status === 'requires_action') {\r\n        stripe.confirmCardPayment(client_secret).then(function (result) {\r\n          if (result.error) {\r\n            console.log('There was an issue!')\r\n            console.log(result.error)\r\n            // Display error message in your UI.\r\n            // The card was declined (i.e. insufficient funds, card has expired, etc)\r\n          } else {\r\n            console.log('You got the money!')\r\n            // Show a success message to your customer\r\n          }\r\n        })\r\n      } else {\r\n        console.log('You got the money!', res.data)\r\n       \r\n\r\n        // No additional information was needed\r\n        // Show a success message to your customer\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent className={classes.content}>\r\n        <TextField\r\n          label='Email'\r\n          id='outlined-email-input'\r\n          helperText={`Email you'll recive updates and receipts on`}\r\n          margin='normal'\r\n          variant='outlined'\r\n          type='email'\r\n          required\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n          fullWidth\r\n        />\r\n        <CardInput />\r\n        <div className={classes.div}>\r\n          {/* <Button\r\n            variant='contained'\r\n            color='primary'\r\n            className={classes.button}\r\n            onClick={handleSubmitPay}\r\n          >\r\n            Pay\r\n          </Button> */}\r\n          <Button\r\n            variant='contained'\r\n            color='primary'\r\n            className={classes.button}\r\n            onClick={handleSubmitSub}\r\n          >\r\n            Subscribe\r\n          </Button>\r\n        </div>\r\n      </CardContent>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default HomePage\r\n","E:\\mob-app1\\netbook-client\\src\\components\\CardInput.js",[],{"ruleId":"237","replacedBy":"238"},{"ruleId":"239","replacedBy":"240"},{"ruleId":"241","severity":1,"message":"242","line":9,"column":8,"nodeType":"243","messageId":"244","endLine":9,"endColumn":14},{"ruleId":"241","severity":1,"message":"245","line":3,"column":10,"nodeType":"243","messageId":"244","endLine":3,"endColumn":14},{"ruleId":"241","severity":1,"message":"246","line":4,"column":8,"nodeType":"243","messageId":"244","endLine":4,"endColumn":17},{"ruleId":"241","severity":1,"message":"247","line":13,"column":11,"nodeType":"243","messageId":"244","endLine":13,"endColumn":18},{"ruleId":"241","severity":1,"message":"248","line":13,"column":20,"nodeType":"243","messageId":"244","endLine":13,"endColumn":25},{"ruleId":"241","severity":1,"message":"249","line":13,"column":27,"nodeType":"243","messageId":"244","endLine":13,"endColumn":32},{"ruleId":"241","severity":1,"message":"250","line":9,"column":16,"nodeType":"243","messageId":"244","endLine":9,"endColumn":25},{"ruleId":"241","severity":1,"message":"251","line":37,"column":47,"nodeType":"243","messageId":"244","endLine":37,"endColumn":53},{"ruleId":"241","severity":1,"message":"252","line":40,"column":20,"nodeType":"243","messageId":"244","endLine":40,"endColumn":32},{"ruleId":"241","severity":1,"message":"253","line":40,"column":48,"nodeType":"243","messageId":"244","endLine":40,"endColumn":58},{"ruleId":"241","severity":1,"message":"254","line":41,"column":12,"nodeType":"243","messageId":"244","endLine":41,"endColumn":16},{"ruleId":"241","severity":1,"message":"255","line":44,"column":23,"nodeType":"243","messageId":"244","endLine":44,"endColumn":34},{"ruleId":"241","severity":1,"message":"255","line":47,"column":25,"nodeType":"243","messageId":"244","endLine":47,"endColumn":36},{"ruleId":"256","severity":1,"message":"257","line":339,"column":19,"nodeType":"258","endLine":339,"endColumn":41},{"ruleId":"256","severity":1,"message":"257","line":350,"column":19,"nodeType":"258","endLine":350,"endColumn":42},{"ruleId":"256","severity":1,"message":"257","line":361,"column":19,"nodeType":"258","endLine":361,"endColumn":41},{"ruleId":"241","severity":1,"message":"250","line":19,"column":3,"nodeType":"243","messageId":"244","endLine":19,"endColumn":12},{"ruleId":"241","severity":1,"message":"259","line":26,"column":3,"nodeType":"243","messageId":"244","endLine":26,"endColumn":16},{"ruleId":"241","severity":1,"message":"260","line":42,"column":3,"nodeType":"243","messageId":"244","endLine":42,"endColumn":12},{"ruleId":"241","severity":1,"message":"261","line":83,"column":10,"nodeType":"243","messageId":"244","endLine":83,"endColumn":15},{"ruleId":"241","severity":1,"message":"262","line":85,"column":10,"nodeType":"243","messageId":"244","endLine":85,"endColumn":17},{"ruleId":"241","severity":1,"message":"263","line":88,"column":10,"nodeType":"243","messageId":"244","endLine":88,"endColumn":21},{"ruleId":"241","severity":1,"message":"264","line":92,"column":10,"nodeType":"243","messageId":"244","endLine":92,"endColumn":20},{"ruleId":"241","severity":1,"message":"265","line":92,"column":22,"nodeType":"243","messageId":"244","endLine":92,"endColumn":35},{"ruleId":"241","severity":1,"message":"266","line":95,"column":10,"nodeType":"243","messageId":"244","endLine":95,"endColumn":22},{"ruleId":"241","severity":1,"message":"267","line":95,"column":24,"nodeType":"243","messageId":"244","endLine":95,"endColumn":39},{"ruleId":"241","severity":1,"message":"268","line":96,"column":20,"nodeType":"243","messageId":"244","endLine":96,"endColumn":31},{"ruleId":"241","severity":1,"message":"252","line":111,"column":20,"nodeType":"243","messageId":"244","endLine":111,"endColumn":32},{"ruleId":"241","severity":1,"message":"253","line":111,"column":48,"nodeType":"243","messageId":"244","endLine":111,"endColumn":58},{"ruleId":"241","severity":1,"message":"251","line":121,"column":12,"nodeType":"243","messageId":"244","endLine":121,"endColumn":18},{"ruleId":"269","severity":1,"message":"270","line":131,"column":6,"nodeType":"271","endLine":131,"endColumn":8,"suggestions":"272"},{"ruleId":"269","severity":1,"message":"273","line":167,"column":6,"nodeType":"271","endLine":167,"endColumn":34,"suggestions":"274"},{"ruleId":"241","severity":1,"message":"254","line":205,"column":12,"nodeType":"243","messageId":"244","endLine":205,"endColumn":16},{"ruleId":"241","severity":1,"message":"255","line":208,"column":23,"nodeType":"243","messageId":"244","endLine":208,"endColumn":34},{"ruleId":"241","severity":1,"message":"255","line":211,"column":25,"nodeType":"243","messageId":"244","endLine":211,"endColumn":36},{"ruleId":"241","severity":1,"message":"275","line":285,"column":9,"nodeType":"243","messageId":"244","endLine":285,"endColumn":27},{"ruleId":"241","severity":1,"message":"276","line":462,"column":9,"nodeType":"243","messageId":"244","endLine":462,"endColumn":19},{"ruleId":"256","severity":1,"message":"257","line":524,"column":19,"nodeType":"258","endLine":524,"endColumn":41},{"ruleId":"256","severity":1,"message":"257","line":535,"column":19,"nodeType":"258","endLine":535,"endColumn":42},{"ruleId":"256","severity":1,"message":"257","line":546,"column":19,"nodeType":"258","endLine":546,"endColumn":41},{"ruleId":"256","severity":1,"message":"257","line":964,"column":19,"nodeType":"258","endLine":964,"endColumn":41},{"ruleId":"256","severity":1,"message":"257","line":975,"column":19,"nodeType":"258","endLine":975,"endColumn":42},{"ruleId":"256","severity":1,"message":"257","line":986,"column":19,"nodeType":"258","endLine":986,"endColumn":41},{"ruleId":"241","severity":1,"message":"277","line":1232,"column":9,"nodeType":"243","messageId":"244","endLine":1232,"endColumn":25},{"ruleId":"241","severity":1,"message":"278","line":1236,"column":9,"nodeType":"243","messageId":"244","endLine":1236,"endColumn":18},{"ruleId":"241","severity":1,"message":"279","line":1240,"column":9,"nodeType":"243","messageId":"244","endLine":1240,"endColumn":21},{"ruleId":"241","severity":1,"message":"247","line":7,"column":11,"nodeType":"243","messageId":"244","endLine":7,"endColumn":18},{"ruleId":"241","severity":1,"message":"249","line":7,"column":27,"nodeType":"243","messageId":"244","endLine":7,"endColumn":32},{"ruleId":"241","severity":1,"message":"280","line":4,"column":8,"nodeType":"243","messageId":"244","endLine":4,"endColumn":12},{"ruleId":"241","severity":1,"message":"247","line":16,"column":11,"nodeType":"243","messageId":"244","endLine":16,"endColumn":18},{"ruleId":"241","severity":1,"message":"249","line":16,"column":27,"nodeType":"243","messageId":"244","endLine":16,"endColumn":32},{"ruleId":"241","severity":1,"message":"281","line":18,"column":20,"nodeType":"243","messageId":"244","endLine":18,"endColumn":31},{"ruleId":"241","severity":1,"message":"282","line":18,"column":33,"nodeType":"243","messageId":"244","endLine":18,"endColumn":38},{"ruleId":"241","severity":1,"message":"251","line":18,"column":47,"nodeType":"243","messageId":"244","endLine":18,"endColumn":53},{"ruleId":"241","severity":1,"message":"283","line":9,"column":8,"nodeType":"243","messageId":"244","endLine":9,"endColumn":24},{"ruleId":"241","severity":1,"message":"259","line":14,"column":3,"nodeType":"243","messageId":"244","endLine":14,"endColumn":16},{"ruleId":"241","severity":1,"message":"284","line":15,"column":3,"nodeType":"243","messageId":"244","endLine":15,"endColumn":17},{"ruleId":"241","severity":1,"message":"245","line":24,"column":3,"nodeType":"243","messageId":"244","endLine":24,"endColumn":7},{"ruleId":"241","severity":1,"message":"250","line":25,"column":3,"nodeType":"243","messageId":"244","endLine":25,"endColumn":12},{"ruleId":"241","severity":1,"message":"285","line":29,"column":3,"nodeType":"243","messageId":"244","endLine":29,"endColumn":6},{"ruleId":"241","severity":1,"message":"249","line":41,"column":27,"nodeType":"243","messageId":"244","endLine":41,"endColumn":32},{"ruleId":"241","severity":1,"message":"281","line":43,"column":20,"nodeType":"243","messageId":"244","endLine":43,"endColumn":31},{"ruleId":"241","severity":1,"message":"282","line":43,"column":33,"nodeType":"243","messageId":"244","endLine":43,"endColumn":38},{"ruleId":"241","severity":1,"message":"251","line":43,"column":47,"nodeType":"243","messageId":"244","endLine":43,"endColumn":53},{"ruleId":"241","severity":1,"message":"255","line":44,"column":23,"nodeType":"243","messageId":"244","endLine":44,"endColumn":34},{"ruleId":"241","severity":1,"message":"255","line":47,"column":25,"nodeType":"243","messageId":"244","endLine":47,"endColumn":36},{"ruleId":"286","severity":1,"message":"287","line":58,"column":12,"nodeType":"243","messageId":"288","endLine":58,"endColumn":25},{"ruleId":"241","severity":1,"message":"255","line":59,"column":25,"nodeType":"243","messageId":"244","endLine":59,"endColumn":36},{"ruleId":"269","severity":1,"message":"289","line":79,"column":6,"nodeType":"271","endLine":79,"endColumn":15,"suggestions":"290"},{"ruleId":"241","severity":1,"message":"247","line":7,"column":11,"nodeType":"243","messageId":"244","endLine":7,"endColumn":18},{"ruleId":"241","severity":1,"message":"249","line":7,"column":27,"nodeType":"243","messageId":"244","endLine":7,"endColumn":32},{"ruleId":"241","severity":1,"message":"291","line":1,"column":10,"nodeType":"243","messageId":"244","endLine":1,"endColumn":16},{"ruleId":"241","severity":1,"message":"292","line":3,"column":3,"nodeType":"243","messageId":"244","endLine":3,"endColumn":16},{"ruleId":"241","severity":1,"message":"293","line":4,"column":3,"nodeType":"243","messageId":"244","endLine":4,"endColumn":19},{"ruleId":"241","severity":1,"message":"294","line":17,"column":3,"nodeType":"243","messageId":"244","endLine":17,"endColumn":17},{"ruleId":"241","severity":1,"message":"295","line":18,"column":3,"nodeType":"243","messageId":"244","endLine":18,"endColumn":22},{"ruleId":"241","severity":1,"message":"296","line":20,"column":3,"nodeType":"243","messageId":"244","endLine":20,"endColumn":19},{"ruleId":"241","severity":1,"message":"297","line":21,"column":3,"nodeType":"243","messageId":"244","endLine":21,"endColumn":22},{"ruleId":"241","severity":1,"message":"298","line":25,"column":3,"nodeType":"243","messageId":"244","endLine":25,"endColumn":19},{"ruleId":"241","severity":1,"message":"299","line":26,"column":3,"nodeType":"243","messageId":"244","endLine":26,"endColumn":20},{"ruleId":"241","severity":1,"message":"300","line":27,"column":3,"nodeType":"243","messageId":"244","endLine":27,"endColumn":20},{"ruleId":"241","severity":1,"message":"301","line":40,"column":3,"nodeType":"243","messageId":"244","endLine":40,"endColumn":21},{"ruleId":"241","severity":1,"message":"302","line":41,"column":3,"nodeType":"243","messageId":"244","endLine":41,"endColumn":24},{"ruleId":"241","severity":1,"message":"303","line":42,"column":3,"nodeType":"243","messageId":"244","endLine":42,"endColumn":24},{"ruleId":"241","severity":1,"message":"304","line":105,"column":11,"nodeType":"243","messageId":"244","endLine":105,"endColumn":23},{"ruleId":"241","severity":1,"message":"305","line":106,"column":11,"nodeType":"243","messageId":"244","endLine":106,"endColumn":23},{"ruleId":"241","severity":1,"message":"306","line":351,"column":11,"nodeType":"243","messageId":"244","endLine":351,"endColumn":24},{"ruleId":"241","severity":1,"message":"307","line":435,"column":11,"nodeType":"243","messageId":"244","endLine":435,"endColumn":25},{"ruleId":"308","severity":1,"message":"309","line":622,"column":28,"nodeType":"310","messageId":"311","endLine":622,"endColumn":30},{"ruleId":"308","severity":1,"message":"312","line":625,"column":28,"nodeType":"310","messageId":"311","endLine":625,"endColumn":30},{"ruleId":"308","severity":1,"message":"309","line":631,"column":23,"nodeType":"310","messageId":"311","endLine":631,"endColumn":25},{"ruleId":"308","severity":1,"message":"309","line":631,"column":59,"nodeType":"310","messageId":"311","endLine":631,"endColumn":61},{"ruleId":"308","severity":1,"message":"309","line":694,"column":28,"nodeType":"310","messageId":"311","endLine":694,"endColumn":30},{"ruleId":"241","severity":1,"message":"281","line":28,"column":14,"nodeType":"243","messageId":"244","endLine":28,"endColumn":25},{"ruleId":"241","severity":1,"message":"282","line":31,"column":5,"nodeType":"243","messageId":"244","endLine":31,"endColumn":10},{"ruleId":"241","severity":1,"message":"251","line":32,"column":12,"nodeType":"243","messageId":"244","endLine":32,"endColumn":18},{"ruleId":"241","severity":1,"message":"255","line":35,"column":23,"nodeType":"243","messageId":"244","endLine":35,"endColumn":34},{"ruleId":"241","severity":1,"message":"313","line":39,"column":10,"nodeType":"243","messageId":"244","endLine":39,"endColumn":17},{"ruleId":"241","severity":1,"message":"314","line":39,"column":19,"nodeType":"243","messageId":"244","endLine":39,"endColumn":29},{"ruleId":"241","severity":1,"message":"315","line":40,"column":10,"nodeType":"243","messageId":"244","endLine":40,"endColumn":17},{"ruleId":"241","severity":1,"message":"316","line":40,"column":19,"nodeType":"243","messageId":"244","endLine":40,"endColumn":29},{"ruleId":"241","severity":1,"message":"317","line":42,"column":10,"nodeType":"243","messageId":"244","endLine":42,"endColumn":20},{"ruleId":"241","severity":1,"message":"318","line":42,"column":22,"nodeType":"243","messageId":"244","endLine":42,"endColumn":35},{"ruleId":"241","severity":1,"message":"319","line":45,"column":10,"nodeType":"243","messageId":"244","endLine":45,"endColumn":15},{"ruleId":"241","severity":1,"message":"320","line":47,"column":19,"nodeType":"243","messageId":"244","endLine":47,"endColumn":29},{"ruleId":"286","severity":1,"message":"321","line":141,"column":11,"nodeType":"243","messageId":"288","endLine":141,"endColumn":22},{"ruleId":"286","severity":1,"message":"321","line":197,"column":11,"nodeType":"243","messageId":"288","endLine":197,"endColumn":22},{"ruleId":"241","severity":1,"message":"322","line":232,"column":9,"nodeType":"243","messageId":"244","endLine":232,"endColumn":22},{"ruleId":"241","severity":1,"message":"323","line":241,"column":9,"nodeType":"243","messageId":"244","endLine":241,"endColumn":22},{"ruleId":"241","severity":1,"message":"293","line":4,"column":3,"nodeType":"243","messageId":"244","endLine":4,"endColumn":19},{"ruleId":"241","severity":1,"message":"302","line":22,"column":3,"nodeType":"243","messageId":"244","endLine":22,"endColumn":24},{"ruleId":"241","severity":1,"message":"303","line":23,"column":3,"nodeType":"243","messageId":"244","endLine":23,"endColumn":24},{"ruleId":"241","severity":1,"message":"301","line":24,"column":3,"nodeType":"243","messageId":"244","endLine":24,"endColumn":21},{"ruleId":"324","severity":1,"message":"325","line":96,"column":29,"nodeType":"326","messageId":"327","endLine":96,"endColumn":31},{"ruleId":"308","severity":1,"message":"312","line":228,"column":26,"nodeType":"310","messageId":"311","endLine":228,"endColumn":28},{"ruleId":"308","severity":1,"message":"312","line":235,"column":36,"nodeType":"310","messageId":"311","endLine":235,"endColumn":38},{"ruleId":"308","severity":1,"message":"312","line":238,"column":36,"nodeType":"310","messageId":"311","endLine":238,"endColumn":38},{"ruleId":"241","severity":1,"message":"328","line":3,"column":8,"nodeType":"243","messageId":"244","endLine":3,"endColumn":13},{"ruleId":"241","severity":1,"message":"329","line":11,"column":8,"nodeType":"243","messageId":"244","endLine":11,"endColumn":22},{"ruleId":"241","severity":1,"message":"330","line":20,"column":3,"nodeType":"243","messageId":"244","endLine":20,"endColumn":12},{"ruleId":"241","severity":1,"message":"285","line":22,"column":3,"nodeType":"243","messageId":"244","endLine":22,"endColumn":6},{"ruleId":"241","severity":1,"message":"259","line":25,"column":3,"nodeType":"243","messageId":"244","endLine":25,"endColumn":16},{"ruleId":"241","severity":1,"message":"284","line":26,"column":3,"nodeType":"243","messageId":"244","endLine":26,"endColumn":17},{"ruleId":"241","severity":1,"message":"255","line":39,"column":23,"nodeType":"243","messageId":"244","endLine":39,"endColumn":34},{"ruleId":"241","severity":1,"message":"255","line":43,"column":25,"nodeType":"243","messageId":"244","endLine":43,"endColumn":36},{"ruleId":"269","severity":1,"message":"331","line":75,"column":6,"nodeType":"271","endLine":75,"endColumn":8,"suggestions":"332"},{"ruleId":"241","severity":1,"message":"333","line":132,"column":9,"nodeType":"243","messageId":"244","endLine":132,"endColumn":13},{"ruleId":"241","severity":1,"message":"334","line":133,"column":9,"nodeType":"243","messageId":"244","endLine":133,"endColumn":20},{"ruleId":"241","severity":1,"message":"335","line":45,"column":9,"nodeType":"243","messageId":"244","endLine":45,"endColumn":24},"no-native-reassign",["336"],"no-negated-in-lhs",["337"],"no-unused-vars","'Import' is defined but never used.","Identifier","unusedVar","'Grid' is defined but never used.","'googleimg' is defined but never used.","'loading' is assigned a value but never used.","'oauth' is assigned a value but never used.","'error' is assigned a value but never used.","'Container' is defined but never used.","'errror' is assigned a value but never used.","'oauthloading' is assigned a value but never used.","'oautherror' is assigned a value but never used.","'rand' is defined but never used.","'innerHeight' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'ThemeProvider' is defined but never used.","'Edgefetch' is defined but never used.","'popup' is assigned a value but never used.","'popdown' is assigned a value but never used.","'sidebarOpen' is assigned a value but never used.","'searchdata' is assigned a value but never used.","'setSearchdata' is assigned a value but never used.","'filtereddata' is assigned a value but never used.","'setFiltereddata' is assigned a value but never used.","'setApilabel' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'oauth'. Either include them or remove the dependency array.","ArrayExpression",["338"],"React Hook useEffect has a missing dependency: 'nodde?.nodes'. Either include it or remove the dependency array.",["339"],"'handlesearchchange' is assigned a value but never used.","'blackTheme' is assigned a value but never used.","'onSetSidebarOpen' is assigned a value but never used.","'showmodal' is assigned a value but never used.","'addedgemodal' is assigned a value but never used.","'Link' is defined but never used.","'nodeloading' is assigned a value but never used.","'nodde' is assigned a value but never used.","'TextareaAutosize' is defined but never used.","'createMuiTheme' is defined but never used.","'Fab' is defined but never used.","no-redeclare","'getModalStyle' is already defined.","redeclared","React Hook useEffect has a missing dependency: 'oauth'. Either include it or remove the dependency array.",["340"],"'indigo' is defined but never used.","'GET_NODE_FAIL' is defined but never used.","'GET_NODE_REQUEST' is defined but never used.","'HAVE_EDGE_FAIL' is defined but never used.","'SEARCH_EDGE_REQUEST' is defined but never used.","'SEARCH_NODE_FAIL' is defined but never used.","'SEARCH_NODE_REQUEST' is defined but never used.","'SEARCH_EDGE_FAIL' is defined but never used.","'HAVE_EDGE_REQUEST' is defined but never used.","'HAVE_EDGE_SUCCESS' is defined but never used.","'GET_AIQUERIES_FAIL' is defined but never used.","'GET_AIQUERIES_REQUEST' is defined but never used.","'GET_AIQUERIES_SUCCESS' is defined but never used.","'checkededge1' is defined but never used.","'checkednode1' is defined but never used.","'filternodeees' is assigned a value but never used.","'nodesoforedges' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","'edgeval' is assigned a value but never used.","'setEdgeval' is assigned a value but never used.","'nodeval' is assigned a value but never used.","'setNodeval' is assigned a value but never used.","'searchedge' is assigned a value but never used.","'setSearchedge' is assigned a value but never used.","'msggg' is assigned a value but never used.","'setChecker' is assigned a value but never used.","'charRepeats' is already defined.","'onkeydownEdge' is assigned a value but never used.","'onkeydownNode' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'Paper' is defined but never used.","'StripeCheckout' is defined but never used.","'TextField' is defined but never used.","React Hook useEffect has a missing dependency: 'paymentdata'. Either include it or remove the dependency array.",["341"],"'bull' is assigned a value but never used.","'handletoken' is assigned a value but never used.","'handleSubmitPay' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"342","fix":"343"},{"desc":"344","fix":"345"},{"desc":"346","fix":"347"},{"desc":"348","fix":"349"},"Update the dependencies array to be: [dispatch, oauth]",{"range":"350","text":"351"},"Update the dependencies array to be: [haveedgedetails, nodde?.nodes, nodepopup]",{"range":"352","text":"353"},"Update the dependencies array to be: [loading, oauth]",{"range":"354","text":"355"},"Update the dependencies array to be: [paymentdata]",{"range":"356","text":"357"},[4952,4954],"[dispatch, oauth]",[5963,5991],"[haveedgedetails, nodde?.nodes, nodepopup]",[2203,2212],"[loading, oauth]",[2161,2163],"[paymentdata]"]